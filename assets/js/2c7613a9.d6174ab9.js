"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["55424"],{90127:function(e,t,n){n.r(t),n.d(t,{frontMatter:()=>a,toc:()=>u,default:()=>c,metadata:()=>r,assets:()=>l,contentTitle:()=>i});var r=JSON.parse('{"id":"dev/react-native/expo","title":"expo","description":"Uncaught SyntaxError: Cannot use \'import.meta\' outside a module","source":"@site/../notes/dev/react-native/expo.md","sourceDirName":"dev/react-native","slug":"/dev/react-native/expo","permalink":"/notes/dev/react-native/expo","draft":false,"unlisted":false,"editUrl":"https://github.com/wenerme/wener/edit/master/notes/../notes/dev/react-native/expo.md","tags":[{"inline":true,"label":"Framework","permalink":"/notes/tags/framework"}],"version":"current","lastUpdatedBy":"wener","lastUpdatedAt":1759894156000,"frontMatter":{"tags":["Framework"]},"sidebar":"docs","previous":{"title":"Rate Limits","permalink":"/notes/dev/rate-limits"},"next":{"title":"\u9006\u5411\u5DE5\u7A0B","permalink":"/notes/dev/reverse/"}}'),o=n(86106),s=n(17776);let a={tags:["Framework"]},i="expo",l={},u=[{value:"Uncaught SyntaxError: Cannot use &#39;import.meta&#39; outside a module",id:"uncaught-syntaxerror-cannot-use-importmeta-outside-a-module",level:2}];function d(e){let t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"expo",children:"expo"})}),"\n",(0,o.jsx)(t.h1,{id:"faq",children:"FAQ"}),"\n",(0,o.jsx)(t.h2,{id:"uncaught-syntaxerror-cannot-use-importmeta-outside-a-module",children:"Uncaught SyntaxError: Cannot use 'import.meta' outside a module"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"zustand"}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"https://github.com/pmndrs/zustand/discussions/1967",children:"https://github.com/pmndrs/zustand/discussions/1967"})}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",children:"const { getDefaultConfig } = require('expo/metro-config');\n\nlet config = getDefaultConfig(__dirname, {\n  // [Web-only]: Enables CSS support in Metro.\n  isCSSEnabled: true,\n});\n\nconfig.resolver.resolveRequest = (context, moduleName, platform) => {\n  if (moduleName.includes('zustand')) {\n    const result = require.resolve(moduleName); // gets CommonJS version\n    return context.resolveRequest(context, result, platform);\n  }\n  // otherwise chain to the standard Metro resolver.\n  return context.resolveRequest(context, moduleName, platform);\n};\n\nmodule.exports = config;\n"})})]})}function c(e={}){let{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},17776:function(e,t,n){n.d(t,{R:()=>a,x:()=>i});var r=n(7378);let o={},s=r.createContext(o);function a(e){let t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);