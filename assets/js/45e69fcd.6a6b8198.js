"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["59188"],{63062:function(e,n,s){s.r(n),s.d(n,{frontMatter:()=>t,toc:()=>c,default:()=>d,metadata:()=>l,assets:()=>h,contentTitle:()=>a});var l=JSON.parse('{"id":"os/linux/shell/bash","title":"Bash","description":"- \u914D\u7F6E","source":"@site/../notes/os/linux/shell/bash.md","sourceDirName":"os/linux/shell","slug":"/os/linux/shell/bash","permalink":"/notes/os/linux/shell/bash","draft":false,"unlisted":false,"editUrl":"https://github.com/wenerme/wener/edit/master/notes/../notes/os/linux/shell/bash.md","tags":[],"version":"current","lastUpdatedBy":"wener","lastUpdatedAt":1727602505000,"frontMatter":{"title":"Bash"},"sidebar":"docs","previous":{"title":"incron","permalink":"/notes/os/linux/service/incron"},"next":{"title":"date","permalink":"/notes/os/linux/shell/date"}}'),i=s(86106),r=s(17776);let t={title:"Bash"},a="Bash",h={},c=[{value:"\u8BED\u6CD5",id:"\u8BED\u6CD5",level:2},{value:"set",id:"set",level:2},{value:"shopt",id:"shopt",level:2},{value:"\u73AF\u5883\u53D8\u91CF",id:"env",level:2},{value:".inputrc",id:"inputrc",level:2},{value:"FAQ",id:"faq",level:2},{value:"Prefix/Suffix",id:"prefixsuffix",level:3},{value:"\u66FF\u6362",id:"\u66FF\u6362",level:2},{value:"Parallels",id:"parallels",level:2},{value:"Base N",id:"base-n",level:2},{value:"SSH",id:"ssh",level:2},{value:"xargs",id:"xargs",level:2},{value:"case",id:"case",level:2},{value:"\u4F7F\u7528\u53D8\u91CF\u540D\u5B57\u8BBF\u95EE\u53D8\u91CF",id:"\u4F7F\u7528\u53D8\u91CF\u540D\u5B57\u8BBF\u95EE\u53D8\u91CF",level:2},{value:"dotenv",id:"dotenv",level:2},{value:"heredoc",id:"heredoc",level:2},{value:"sub shell",id:"sub-shell",level:2},{value:"tcp redir",id:"tcp-redir",level:2},{value:"git branch",id:"git-branch",level:2}];function o(e){let n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"bash",children:"Bash"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u914D\u7F6E\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:".inputrc"}),"\n",(0,i.jsx)(n.li,{children:".bashrc - \u4EA4\u4E92 shell"}),"\n",(0,i.jsx)(n.li,{children:".profile, .bash_profile - \u767B\u9646 shell"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\u53C2\u8003\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.gnu.org/software/bash/manual/bash.html",children:"Bash Reference Manual"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.man7.org/linux/man-pages/man1/bash.1.html",children:"https://www.man7.org/linux/man-pages/man1/bash.1.html"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"http://mywiki.wooledge.org/BashPitfalls",children:"http://mywiki.wooledge.org/BashPitfalls"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://tiswww.case.edu/php/chet/bash/NEWS",children:"https://tiswww.case.edu/php/chet/bash/NEWS"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# empty shell\nenv -i bash\n\n# empty env\nenv -i HOME=\"$HOME\" bash -c 'env'\n\n# login shell\ntime env -i HOME=\"$HOME\" LOG4BASH_LOG_LEVE=DEBUG /usr/local/bin/bash -l -c 'env'\n"})}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"flag"}),(0,i.jsx)(n.th,{children:"for"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"-c COMMAND"}),(0,i.jsx)(n.td,{children:"command string"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"-i"}),(0,i.jsx)(n.td,{children:"interactive"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"-l"}),(0,i.jsx)(n.td,{children:"login shell"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"-r"}),(0,i.jsx)(n.td,{children:"restricted"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"-s"}),(0,i.jsx)(n.td,{children:"stdin"})]})]})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# \u4F20\u9012 flag \u7ED9 stdin \u811A\u672C\ncurl http://sh | bash -s -- -flag\n"})}),"\n",(0,i.jsx)(n.h2,{id:"\u8BED\u6CD5",children:"\u8BED\u6CD5"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"["})," = test"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"[["})," - shell \u5185\u7F6E\u8BED\u6CD5 - \u901F\u5EA6\u66F4\u5FEB\u4E00\u70B9\u70B9\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u652F\u6301 ",(0,i.jsx)(n.code,{children:"&&"}),", ",(0,i.jsx)(n.code,{children:"||"})," \u8BED\u6CD5"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"{}"})," - \u5C55\u5F00\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"${var}"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"${var:=default}"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"${var/find/replace}"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"${var%remove}"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"{000..2}"})," - \u5E8F\u5217\u5C55\u5F00"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"{000..2..2}"})," - \u5E26 step \u53C2\u6570"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"echo x{,A,B,C}"})," - \u7EC4\u5408\u5C55\u5F00"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"{ echo 1; echo 2; }"})," - \u547D\u4EE4\u5E8F\u5217"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"(())"})," - \u7B97\u672F\u64CD\u4F5C"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"()"})," - subshell, array"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# for \u5FAA\u73AF\n# ===========\n# bash \u8BED\u6CD5\nfor ((i = 0; i < 3; i++)); do echo $i; done\n# bash \u5C55\u5F00\u5E8F\u5217\nfor i in {0..2}; do echo $i; done\n# \u4F7F\u7528 seq \u751F\u6210\u5E8F\u5217 - ash \u652F\u6301\nfor i in $(seq 0 2); do echo $i; done\nfor i in $(seq 0 $((3 - 1))); do echo $i; done\n"})}),"\n",(0,i.jsx)(n.h2,{id:"set",children:"set"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# \u63A8\u8350\nset -Eeuo pipefail\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/notes/os/linux/shell/ref#options",children:"Reference"})}),"\n",(0,i.jsx)(n.li,{children:"trap ERR \u53EF\u5904\u7406 -e \u9000\u51FA"}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html",children:"set"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"shopt",children:"shopt"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Bash \u6269\u5C55\u9009\u9879"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"shopt [-pqsu] [-o] [optname \u2026]\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"shopt -s extglob # \u5F00\u542F\nshopt -u extglob # \u5173\u95ED\nshopt -q extglob # \u4F7F\u7528 exit code \u8868\u793A\u662F\u5426\u5F00\u542F\nshopt extglob    # \u5F53\u524D\u72B6\u6001\nshopt            # \u5168\u90E8\u72B6\u6001\nshopt -o nolog   # \u9650\u5B9A\u5185\u7F6E set \u652F\u6301\u9009\u9879\u800C\u975E\u6269\u5C55\u9009\u9879\n\n# \u6240\u6709 on \u7684\u9009\u9879\nshopt | grep \"on$\" | grep -o '^\\S\\+'\n# \u63A8\u8350\nshopt -s autocd cdspell extglob globstar\n\n# \u9ED8\u8BA4\u5F00\u542F\u9009\u9879\nshopt -s checkwinsize cmdhist expand_aliases extquote force_fignore hostcomplete interactive_comments progcomp promptvars sourcepath\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["globstar - ",(0,i.jsx)(n.code,{children:"**"})," \u4F1A\u5339\u914D\u5F53\u524D\u800C\u4E0D\u53EA\u662F\u5B50\u76EE\u5F55\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# \u4F1A\u5339\u914D Makefile\nls **/Makefile\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["extglob - \u6269\u5C55 glob \u8BED\u6CD5\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"[?*+@!](pattern-list)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"!"})," \u6392\u9664"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"@"})," \u5339\u914D 1 \u4E2A"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.gnu.org/software/bash/manual/html_node/Pattern-Matching.html",children:"Pattern Matching"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# \u590D\u5236 scripts \u4E0B\u7684 Makefile \u5230\u6240\u6709\u5176\u4ED6 Makefile\nls !(scripts)/**/Makefile | xargs -n 1 cp scripts/stub/Makefile\n"})}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"nocaseglob - glob \u5927\u5C0F\u5199\u4E0D\u654F\u611F"}),"\n",(0,i.jsx)(n.li,{children:"histappend - \u8FFD\u52A0\u5230\u5386\u53F2\u6587\u4EF6\u800C\u4E0D\u662F\u91CD\u5199"}),"\n",(0,i.jsxs)(n.li,{children:["cdspell - \u4F7F\u7528 cd \u65F6\u81EA\u52A8\u6821\u6B63\u4E66\u5199\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd ignorad # \u4F1A cd \u5230\u5B58\u5728\u7684 ignored \u76EE\u5F55 - a -> e\n"})}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"autocd - \u8F93\u5165\u76EE\u5F55\u81EA\u52A8\u5207\u6362\u5230\u76EE\u5F55"}),"\n",(0,i.jsx)(n.li,{children:"failglob - glob \u5339\u914D\u4E0D\u5230\u6587\u4EF6\u65F6\u51FA\u9519\u800C\u975E \u76F4\u63A5\u8F93\u51FA\u76F8\u540C\u5B57\u7B26"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"env",children:"\u73AF\u5883\u53D8\u91CF"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"env"}),(0,i.jsx)(n.th,{children:"default"}),(0,i.jsx)(n.th,{children:"description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"EPOCHSECONDS"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"EPOCHREALTIME"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"BASH_ARGV0"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]})]})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"echo $EPOCHSECONDS\n"})}),"\n",(0,i.jsx)(n.h2,{id:"inputrc",children:".inputrc"}),"\n",(0,i.jsx)(n.p,{children:"C-x C-r is bound to re-read-init-file."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://www.gnu.org/software/bash/manual/html_node/Readline-Init-File.html",children:"https://www.gnu.org/software/bash/manual/html_node/Readline-Init-File.html"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://www.gnu.org/software/bash/manual/bashref.html#Miscellaneous-Commands",children:"https://www.gnu.org/software/bash/manual/bashref.html#Miscellaneous-Commands"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Make Tab autocomplete regardless of filename case\nset completion-ignore-case on\n\n# List all matches in case multiple possible completions are possible\nset show-all-if-ambiguous on\n\n# Immediately add a trailing slash when autocompleting symlinks to directories\nset mark-symlinked-directories on\n\n# Use the text that has already been typed as the prefix for searching through\n# commands (i.e. more intelligent Up/Down behavior)\n"\\eOA": history-search-backward\n"\\e[A": history-search-backward\n"\\eOB": history-search-forward\n"\\e[B": history-search-forward\n'})}),"\n",(0,i.jsx)(n.h2,{id:"faq",children:"FAQ"}),"\n",(0,i.jsx)(n.h3,{id:"prefixsuffix",children:"Prefix/Suffix"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# \u53BB\u9664\u524D\u7F00\u548C\u540E\u7F00\nx="/foo/fizzbuzz.bar"\ny=${x%.bar}\necho ${y##*/}\n#> fizzbuzz\n\n# \u53BB\u9664\u540E\u7F00\nx="/foo/fizzbuzz.bar.quux"\ny=${x%.*}\necho $y\n#> /foo/fizzbuzz.bar\ny=${x%%.*}\necho $y\n#> /foo/fizzbuzz\n\n# \u53BB\u9664\u524D\u7F00\nx=/foo/bar/bim/baz/file.gif\ny=${path##*/}\necho $y\n#> file.gif\n'})}),"\n",(0,i.jsx)(n.h2,{id:"\u66FF\u6362",children:"\u66FF\u6362"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"a=abc/da\n# zbc/da\necho ${a/a/z}\n# // \u662F\u6240\u6709\n# zbc/dz\necho ${a//a/z}\n# \u8F6C\u610F\n# abczda\necho ${a//\\//z}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"parallels",children:"Parallels"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# do it once\nseq 1 | parallel -n0 "curl -H \'Content-Type: application/json\' http://httpbin.org/post -X POST -d \'{\\"url\\":\\"http://google.com/\\"}\'"\n\n# do it twice\nseq 2 | parallel -n0 "curl -H \'Content-Type: application/json\' http://httpbin.org/post -X POST -d \'{\\"url\\":\\"http://google.com/\\"}\'"\n\n# do it 4 times, but at 2 a time\nseq 4 | parallel -n0 -j2 "curl -H \'Content-Type: application/json\' http://httpbin.org/post -X POST -d \'{\\"url\\":\\"http://google.com/\\"}\'"\n\n# you can also put all your commands into a file\necho "ls\\nls" > somefile\ncat somefile | parallel\n\n# finally, just straight command line parameters\nparallel echo ::: a b c\n\n# by default, it runs as many jobs in parallel as there are cores in your computer\n\n# if you try and set more jobs than there are cores, they will be concurrent, but\n# they will only ever be parallel up to your core count\n\n# for httpie use the --ignore-stdin flag, or else it gets mixed up\nseq 1 | parallel -n0 "http --ignore-stdin POST http://httpbin.org/post url=http://google.com/"\n'})}),"\n",(0,i.jsx)(n.h2,{id:"base-n",children:"Base N"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'# Encode base62\nBASE62=($(echo {0..9} {a..z} {A..Z}))\nfor i in $(bc <<< "obase=62; 9207903953"); do\n    echo -n ${BASE62[$(( 10#$i ))]}\ndone && echo\n# Decode base62\nbase62_decode() { echo $((62#$1)) }\n'})}),"\n",(0,i.jsx)(n.h2,{id:"ssh",children:"SSH"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# download: remote -> local\n# local_file \u53EF\u4EE5\u4E3A\u76EE\u5F55\u7528 -r \u9012\u5F52\nscp user@remote_host:remote_file local_file\n# upload: local -> remote\nscp local_file user@remote_host:remote_file\n\n# To Forward sshtalk.in:8080 -> Cort.local:4567, you can do\nlocal="Cort.local:4567" # or "localhost:4567"\nremot="*:8080"          # "*" for all interfaces (default is loopback)\n\nssh -R ${remote}:${local} sshtalk.in\n\n# To forward localhost:1234 -> private-host:443, through public-host you can do\nlocal="localhost:1234"   # or just "1234" default is localhost\nremot="private-host:443" # "*" for all interfaces (default is loopback)\n\nssh -L ${local}:${remote} public-host\n\n# \u987B\u5728\u5728Server\u7AEF\u5141\u8BB8\u8F6C\u53D1\n# \u5728 /etc/ssh/sshd_config \u4E2D\u6DFB\u52A0\n# GatewayPorts yes\n# \u7136\u540E\u91CD\u542F\nsudo service sshd restart\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# scp to \u591A\u53F0\nfor dest in $(< destfile.txt); do\n  scp ourfile.txt ${dest}:remote/path/\ndone\n\n# \u5728\u4E0D\u7528 scp \u7684\u60C5\u51B5\u4E0B \u62F7\u8D1D\u5230\u591A\u53F0\ncat file.txt | tee \\\n  >(ssh user@ip1.com "cat > file.txt") \\\n  >(ssh user@ip2.com "cat > file.txt")\n\ntar cz file1 file2 file3 | tee \\\n  >(ssh user@ip1.com "tar xz") \\\n  >(...)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"xargs",children:"xargs"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"http://www.thegeekstuff.com/2013/12/xargs-examples/",children:"xargs example"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"case",children:"case"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'case $space in\n  [1-6]*)\n    Message="All is quiet."\n    ;;\n  [7-8]*)\n    Message="Start thinking about cleaning out some stuff.  There\'s a partition that is $space % full."\n    ;;\n  9[1-8])\n    Message="Better hurry with that new disk...  One partition is $space % full."\n    ;;\n  99)\n    Message="I\'m drowning here!  There\'s a partition at $space %!"\n    ;;\n  *)\n    Message="I seem to be running with an nonexistent amount of disk space..."\n    ;;\nesac\n'})}),"\n",(0,i.jsx)(n.h2,{id:"\u4F7F\u7528\u53D8\u91CF\u540D\u5B57\u8BBF\u95EE\u53D8\u91CF",children:"\u4F7F\u7528\u53D8\u91CF\u540D\u5B57\u8BBF\u95EE\u53D8\u91CF"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.gnu.org/software/bash/manual/html_node/Shell-Parameter-Expansion.html",children:"Shell Parameter Expansion"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"a=PATH\necho ${!a}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"dotenv",children:"dotenv"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"env $(cat .env | xargs) sh -c 'echo $MY_ENV'\n"})}),"\n",(0,i.jsx)(n.h2,{id:"heredoc",children:"heredoc"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'cat << EOF\nPWD=$PWD\nEOF\n# \u8F6C\u4E49\ncat << "EOF"\nPWD=$PWD\nEOF\n# \u79FB\u9664\u7F29\u8FDB - \u9700\u8981 tab\ncat <<- EOF\n	PWD=$PWD\n	EOF\n'})}),"\n",(0,i.jsx)(n.h2,{id:"sub-shell",children:"sub shell"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://tldp.org/LDP/abs/html/subshells.html",children:"https://tldp.org/LDP/abs/html/subshells.html"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"(echo 1)\n\n# \u4F1A\u8F93\u51FA 1 2 3 4\nbash << SH &\necho 1\necho 2 && (echo 3; exit 1;)\necho 4\nSH\n"})}),"\n",(0,i.jsx)(n.h2,{id:"tcp-redir",children:"tcp redir"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"echo <> /dev/tcp/wener.me/80\n# 0 - \u8FDE\u901A\necho $?\n\necho <> /dev/tcp/localhost/80\n# 1\necho $?\n"})}),"\n",(0,i.jsx)(n.h2,{id:"git-branch",children:"git branch"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl -Lo ~/.git-prompt.sh https://github.com/git/git/raw/master/contrib/completion/git-prompt.sh\nsource ~/.git-prompt.sh\n\n__git_ps1 '%s'\n\nexport PS1='\\[\\e[32m\\]\\u@\\h \\[\\e[01;33m\\]\\w $(__git_ps1 \" (%s)\") \\[\\e[34m\\][\\t] \\[\\e[0m\\]\\n$ '\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/git/git/blob/master/contrib/completion/git-prompt.sh",children:"https://github.com/git/git/blob/master/contrib/completion/git-prompt.sh"})}),"\n"]})]})}function d(e={}){let{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},17776:function(e,n,s){s.d(n,{R:()=>t,x:()=>a});var l=s(7378);let i={},r=l.createContext(i);function t(e){let n=l.useContext(r);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);