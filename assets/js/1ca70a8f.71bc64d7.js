"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["97429"],{38505:function(e,n,t){t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>h,metadata:()=>s,toc:()=>o});var s=t(14878),r=t(86106),i=t(17776);let h={slug:"ketama-consistence-hash",title:"\u4E00\u81F4\u6027Hash\u7B97\u6CD5",tags:["\u7B97\u6CD5"]},a="ketama",l={authorsImageUrls:[]},o=[{value:"\u53C2\u8003",id:"\u53C2\u8003",level:2}];function c(e){let n={a:"a",code:"code",em:"em",h2:"h2",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["\u8BE5\u7B97\u6CD5\u6700\u5F00\u59CB\u662F\u5F00\u53D1\u6765\u66FF\u4EE3",(0,r.jsx)(n.code,{children:"memcached"}),"\u952E\u5230\u670D\u52A1\u5668\u7684\u6620\u5C04\u7B97\u6CD5\u7684."]}),"\n",(0,r.jsxs)(n.p,{children:["\u5728\u8FD9\u4E4B\u524D,\u5BA2\u6237\u7AEF\u6620\u5C04\u952E\u5230\u670D\u52A1\u5668\u7684\u65B9\u6CD5\u7C7B\u4F3C\u4E8E:\n",(0,r.jsx)(n.code,{children:" server = serverlist[hash(key)%serverlist.length];"}),"\n\u8FD9\u5C31\u610F\u5473\u7740,\u4E0D\u7BA1\u6211\u4EEC\u4ECE\u6C60\u4E2D\u589E\u52A0\u6216\u5220\u9664\u8282\u70B9,\u90FD\u4F1A\u5BFC\u81F4\u6240\u6709\u5DF2\u7ECF hash \u7684\u503C\u4ECE\u65B0 hash \u5230\u4E0D\u540C\u7684\u8282\u70B9,\u8FD9\u4F1A\u5BFC\u81F4\u6240\u6709",(0,r.jsx)(n.code,{children:"memcached"}),"\u7684\u6240\u6709\u7F13\u5B58\u5931\u6548."]}),"\n",(0,r.jsx)(n.p,{children:"Ketama \u4F7F\u7528\u4EE5\u4E0B\u65B9\u5F0F\u6765\u89E3\u51B3\u4E86\u8BE5\u95EE\u9898:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u4F7F\u7528\u6307\u5B9A\u7684\u4E00\u7EC4\u670D\u52A1(\u4F8B\u5982: 1.2.3.4:11211, 5.6.7.8:11211, 9.8.7.6:11211)"}),"\n",(0,r.jsx)(n.li,{children:"\u5C06\u6BCF\u4E2A\u670D\u52A1\u7684\u5B57\u7B26\u4E32\u90FD hash \u4E3A\u591A\u4E2A(100-200 \u4E2A)\u65E0\u7B26\u53F7\u6574\u6570"}),"\n",(0,r.jsx)(n.li,{children:"\u6982\u5FF5\u4E0A,\u8FD9\u4E9B\u6570\u5B57\u662F\u653E\u7F6E\u5728\u4E00\u4E2A\u73AF\u4E0A\u7684.(\u60F3\u8C61\u4E00\u4E2A\u65F6\u949F\u90A3\u6837,\u4ECE 0 - 2^32 \u6B21\u65B9\u7684\u4E00\u4E2A\u73AF)"}),"\n",(0,r.jsx)(n.li,{children:"\u6BCF\u4E2A\u6570\u7EC4\u90FD\u5173\u8054\u5B83 hash \u4E4B\u524D\u7684\u90A3\u4E2A\u670D\u52A1\u5668\u5730\u5740,\u56E0\u6B64,\u4E00\u4E2A\u670D\u52A1\u4F1A\u5728\u73AF\u4E0A\u51FA\u73B0\u591A\u6B21.\u51FA\u73B0\u7684\u65B9\u5F0F\u4F1A\u4EE5\u4ED6\u4EEC hash \u540E\u7684\u6570\u5B57\u6765\u8868\u793A"}),"\n",(0,r.jsx)(n.li,{children:"\u4E3A\u4E86\u5C06\u4E00\u4E2A\u952E\u6620\u5C04\u5230\u670D\u52A1\u5668,\u9996\u5148\u5C06\u952E\u503C hash \u4E3A\u4E00\u4E2A\u65E0\u7B26\u53F7\u6574\u6570,\u7136\u540E\u5728\u73AF\u4E0A\u627E\u5230\u4E0B\u4E00\u4E2A\u6700\u5927\u7684\u6570\u5B57.\u8BE5\u670D\u52A1\u4F1A\u88AB\u9009\u62E9\u6765\u5B58\u653E\u8BE5\u952E\u503C"}),"\n",(0,r.jsx)(n.li,{children:"\u5982\u679C hash \u7684\u952E\u503C\u63A5\u8FD1 2^32 \u6B21\u65B9,\u90A3\u4E48\u53EF\u80FD\u5728\u73AF\u4E0A\u6CA1\u6709\u6BD4\u8BE5 hash \u503C\u5927\u7684\u7684 hash,\u6B64\u65F6\u8FD4\u56DE\u73AF\u4E0A\u7684\u7B2C\u4E00\u4E2A\u670D\u52A1."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\u8FD9\u6837\u5B9E\u73B0\u4EE5\u540E,\u5728\u8BE5\u670D\u52A1\u5217\u8868\u4E0A\u8FDB\u884C\u6DFB\u52A0\u548C\u5220\u9664\u53EA\u4F1A\u5BF9\u4E00\u5C0F\u90E8\u5206\u7684\u952E\u503C\u6620\u5C04\u4EA7\u751F\u5F71\u54CD,\u56E0\u6B64\u53EA\u9700\u8981\u4ECE\u65B0\u6620\u5C04\u4E00\u5C0F\u90E8\u5206\u503C."}),"\n",(0,r.jsx)(n.p,{children:"\u6B64\u5916,\u5982\u679C\u60F3\u8981\u63A7\u5236\u670D\u52A1\u5668\u7684\u6743\u91CD,\u5219\u53EF\u4EE5\u901A\u8FC7\u589E\u52A0\u8BE5\u670D\u52A1\u7684 hash \u503C\u6570\u91CF\u6765\u5B9E\u73B0."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"\u539F\u6587"})}),"\n",(0,r.jsx)(n.p,{children:"This was initially written to replace how our memcached clients mapped keys to servers."}),"\n",(0,r.jsxs)(n.p,{children:["Previously, clients mapped keys->servers like this:\n",(0,r.jsx)(n.code,{children:" server = serverlist[hash(key)%serverlist.length];"})]}),"\n",(0,r.jsx)(n.p,{children:"This meant that whenever we added or removed servers from the pool, everything hashed to different servers, which effectively wiped the entire cache."}),"\n",(0,r.jsx)(n.p,{children:"Ketama solves this problem in the following way:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Take your list of servers (eg: 1.2.3.4:11211, 5.6.7.8:11211, 9.8.7.6:11211)"}),"\n",(0,r.jsx)(n.li,{children:"Hash each server string to several (100-200) unsigned ints"}),"\n",(0,r.jsx)(n.li,{children:"Conceptually, these numbers are placed on a circle called the continuum. (imagine a clock face that goes from 0 to 2^32)"}),"\n",(0,r.jsx)(n.li,{children:"Each number links to the server it was hashed from, so servers appear at several points on the continuum, by each of the numbers they hashed to."}),"\n",(0,r.jsx)(n.li,{children:"To map a key->server, hash your key to a single unsigned int, and find the next biggest number on the continuum. The server linked to that number is the correct server for that key."}),"\n",(0,r.jsx)(n.li,{children:"If you hash your key to a value near 2^32 and there are no points on the continuum greater than your hash, return the first server in the continuum."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"If you then add or remove a server from the list, only a small proportion of keys end up mapping to different servers."}),"\n",(0,r.jsx)(n.h2,{id:"\u53C2\u8003",children:"\u53C2\u8003"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"http://www.audioscrobbler.net/development/ketama/",children:"\u539F\u6587"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/RJ/ketama/blob/master/java_ketama/SockIOPool.java",children:"\u53C2\u8003 Java \u5B9E\u73B0"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"http://en.wikipedia.org/wiki/Consistent_hashing",children:"\u7EF4\u57FA\u767E\u79D1 Consistent hashing"})}),"\n"]})]})}function d(e={}){let{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},17776:function(e,n,t){t.d(n,{R:()=>h,x:()=>a});var s=t(7378);let r={},i=s.createContext(r);function h(e){let n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:h(e.components),s.createElement(i.Provider,{value:n},e.children)}},14878:function(e){e.exports=JSON.parse('{"permalink":"/story/ketama-consistence-hash","editUrl":"https://github.com/wenerme/wener/edit/master/story/../story/2014/2014-11-12-\u4E00\u81F4\u6027Hash\u7B97\u6CD5.md","source":"@site/../story/2014/2014-11-12-\u4E00\u81F4\u6027Hash\u7B97\u6CD5.md","title":"\u4E00\u81F4\u6027Hash\u7B97\u6CD5","description":"\u8BE5\u7B97\u6CD5\u6700\u5F00\u59CB\u662F\u5F00\u53D1\u6765\u66FF\u4EE3memcached\u952E\u5230\u670D\u52A1\u5668\u7684\u6620\u5C04\u7B97\u6CD5\u7684.","date":"2014-11-12T00:00:00.000Z","tags":[{"inline":true,"label":"\u7B97\u6CD5","permalink":"/story/tags/\u7B97\u6CD5"}],"readingTime":2.69,"hasTruncateMarker":true,"authors":[],"frontMatter":{"slug":"ketama-consistence-hash","title":"\u4E00\u81F4\u6027Hash\u7B97\u6CD5","tags":["\u7B97\u6CD5"]},"unlisted":false,"prevItem":{"title":"\u8F6C\u6218 Hugo, \u535A\u5BA2\u8FC1\u79FB\u4E4B\u8DEF","permalink":"/story/blog-hugo"},"nextItem":{"title":"\u6D88\u606F\u4E2D\u95F4\u4EF6\u7B80\u4ECB mom-intro","permalink":"/story/mom-intro"}}')}}]);