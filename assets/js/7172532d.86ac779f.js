"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["14503"],{11896:function(e,n,s){s.r(n),s.d(n,{frontMatter:()=>l,toc:()=>d,default:()=>f,metadata:()=>t,assets:()=>i,contentTitle:()=>r});var t=JSON.parse('{"id":"devops/kubernetes/dev/skaffold","title":"skaffold","description":"- skaffold","source":"@site/../notes/devops/kubernetes/dev/skaffold.md","sourceDirName":"devops/kubernetes/dev","slug":"/devops/kubernetes/dev/skaffold","permalink":"/notes/devops/kubernetes/dev/skaffold","draft":false,"unlisted":false,"editUrl":"https://github.com/wenerme/wener/edit/master/notes/../notes/devops/kubernetes/dev/skaffold.md","tags":[],"version":"current","lastUpdatedBy":"wener","lastUpdatedAt":1634309581000,"frontMatter":{"title":"skaffold"},"sidebar":"docs","previous":{"title":"DevSpace","permalink":"/notes/devops/kubernetes/dev/devspace"},"next":{"title":"telepresence","permalink":"/notes/devops/kubernetes/dev/telepresence"}}'),a=s(86106),o=s(17776);let l={title:"skaffold"},r="skaffold",i={},d=[];function c(e){let n={code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"skaffold",children:"skaffold"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["skaffold\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"source to kubernetes \u5DE5\u5177"}),"\n",(0,a.jsx)(n.li,{children:"building, pushing, deploying"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:"SKAFFOLD_INSECURE_REGISTRY"}),"\n",(0,a.jsx)(n.li,{children:"SKAFFOLD_DEFAULT_REPO"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# macOS\nbrew install skaffold\n# \u624B\u52A8\u5B89\u88C5\ncurl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-darwin-amd64 && \\\nsudo install skaffold /usr/local/bin/\n\nskaffold config set --global collect-metrics false\n\n# \u9879\u76EE\u521D\u59CB\u5316 - \u751F\u6210 skaffold.yaml\n# \u81EA\u52A8\u68C0\u6D4B Dockerfile\u3001K8S \u548C\u8BED\u8A00\u73AF\u5883\nskaffold init\n\n# \u7AEF\u5230\u7AEF\u64CD\u4F5C\nskaffold dev\nskaffold run\nskaffold debug\n\n# CI/CD \u64CD\u4F5C\nskaffold build\nskaffold test\nskaffold deploy\nskaffold render\nskaffold apply\nskaffold delete\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: skaffold/v2beta19\nkind: Config\nmetadata:\n  name: skaffold\n# \u6784\u5EFA\nbuild:\n  artifacts:\n    - image: skaffold-example\n      # \u53EF\u4EE5\u5305\u542B\u4ED3\u5E93\u540D\u5B57\n      # image: gcr.io/k8s-skaffold/example\n      docker:\n        dockerfile: Dockerfile\n      # \u4F9D\u8D56\n      requires:\n        - image: image2\n          # build-arg\n          alias: IMAGE2\n      context:\n      # \u6587\u4EF6\u540C\u6B65\n      sync:\n        manual:\n          - src: \'content/en/**/*.md\'\n            dest: content\n            strip: \'content/en/\'\n        # \u4ECE Dockerfile \u63A8\u5BFC\n        infer: []\n        auto: true # buildpacks & Jib\n        hooks: { before: {}, after: {} }\n      # \u751F\u547D\u5468\u671F Hook\n      hooks:\n        before:\n          - command: []\n            os: [ darwin, linux, windows ]\n        after:\n    - image: image2\n      # \u914D\u7F6E\u4E3A\u4F7F\u7528 kaniko\n      kaniko:\n        reproducible: true\n        dockerfile: Dockerfile\n        # \u9ED8\u8BA4\u955C\u50CF\u65E0\u6CD5\u8BBF\u95EE\n        # initImage: gcr.io/k8s-skaffold/skaffold-helpers/busybox\n        # image: gcr.io/kaniko-project/executor\n        # \u4F7F\u7528\u955C\u50CF\n        initImage: registry.cn-hongkong.aliyuncs.com/cmi/k8s-skaffold_skaffold-helpers_busybox\n        image: registry.cn-hongkong.aliyuncs.com/cmi/kaniko-project_executor\n        useNewRun: false # \u5B9E\u9A8C\u6027\u8D28 - \u53EF\u63D0\u901F 75%\n        cache:\n          repo: # \u9ED8\u8BA4\u4F1A\u81EA\u884C\u63A8\u6D4B\n          hostPath: # \u8981\u6C42\u9884\u5148\u5B58\u5728 - kaniko-warmer\n          ttl: # \u7F13\u5B58\u5931\u6548 - \u5355\u4F4D\u5C0F\u65F6\n    - image: image1\n      # \u81EA\u5B9A\u4E49\u6784\u5EFA\n      # \u73AF\u5883\u53D8\u91CF IMAGE PUSH_IMAGE BUILD_CONTEXT\n      # \u96C6\u7FA4\u53D8\u91CF KUBECONTEXT NAMESPACE PULL_SECRET_NAME DOCKER_CONFIG_SECRET_NAME TIMEOUT\n      custom:\n        buildCommand: docker build --build-arg IMG2 .\n        # \u6587\u4EF6\u4F9D\u8D56\n        dependencies:\n          dockerfile:\n            path:\n            buildArgs: {}\n          # \u8F93\u51FA\u4F9D\u8D56\u6587\u4EF6\u540D\u5B57\n          command:\n          paths: []\n          ignore: []\n  # \u672C\u5730 Docker \u914D\u7F6E\n  local:\n    # \u9ED8\u8BA4\u4F7F\u7528 engine api\n    useDockerCLI: false\n    useBuildkit: false\n    # 0 \u4E3A\u4E0D\u9650\u5236\n    concurrency: 1\n    # \u63A8\u9001\u5230\u4ED3\u5E93\n    push:\n    tryImportMissing: false\n\n  # Kaniko Cluster \u914D\u7F6E\n  cluster:\n    # \u62C9 Secret\n    pullSecretName: kaniko-secret\n    # OR\n    pullSecretPath: path-to-service-account-key-file\n    pullSecretMountPath:\n    namespace:\n    # \u63A8 Secret\n    dockerConfig:\n      path: ~/.docker/config.json # \u4F7F\u7528\u672C\u5730\n      # OR\n      # \u4E0D\u80FD\u662F kubernetes.io/dockerconfigjson\n      # \u7528 opaque \u4E14 key \u4E3A config.json\n      secretName: docker-config-secret-in-kubernetes\n    serviceAccount:\n    tolerations:\n    randomPullSecret:\n    randomDockerConfigSecret:\n\n  # Tag \u7B56\u7565\n  tagPolicy:\n    gitCommit: {}\n    inputDigest: {}\n    # latest\n    sha256: {}\n    envTemplate:\n      template: "{{.FOO}}"\n    dateTime:\n      format: "2006-01-02_15-04-05.999_MST"\n      timezone: "Local"\n    customTemplate:\n      template: "{{.FOO}}_{{.BAR}}"\n      components:\n      - name: FOO\n        dateTime:\n          format: "2006-01-02"\n          timezone: "UTC"\n      - name: BAR\n        gitCommit:\n          variant: AbbrevCommitSha\n\n# \u90E8\u7F72\ndeploy:\n  # Kubectl \u90E8\u7F72\n  kubectl:\n    # \u90E8\u7F72\u6E05\u5355 - \u652F\u6301\u901A\u914D\n    manifests:\n      - ["k8s/*.yaml"]\n    remoteManifests: []\n    # \u4E0D\u540C\u547D\u4EE4\u7684\u989D\u5916 flag\n    flags:\n      global: []\n      apply: []\n      delete: []\n      disableValidation: false\n    defaultNamespace:\n\n  # kustomize \u90E8\u7F72\n  kustomize:\n    paths: [\'.\']\n    flags: # \u548C kubectl flags \u76F8\u540C\n    buildArgs:\n    defaultNamespace:\n\n  # helm \u90E8\u7F72\n  helm:\n    releases:\n      - name: my-chart\n        chartPath: helm\n        remoteChat:\n        valuesFiles: []\n        artifactOverrides:\n          imageKey: gcr.io/my-project/my-image\n        namespace:\n        version:\n        setValues: {}\n        setValueTemplates: {}\n        setFiles: {}\n        createNamespace: false\n        wait: false\n        recreatePods: false\n        skipBuildDependencies: false\n        useHelmSecrets: false\n        # --repo\n        repo:\n        # chartPath \u9ED8\u8BA4 false  remoteChart \u9ED8\u8BA4 true\n        upgradeOnChange:\n        # --f\n        overrides:\n        # helm package \u53C2\u6570\n        packaged:\n        # ArtifactOverrides \u7B56\u7565\n        imageStrategy:\n          fqn: {} # \u9ED8\u8BA4 \u63D0\u4F9B\u5B8C\u6574\u7684 image\n          helm: {} # \u63D0\u4F9B\u989D\u5916\u7684 repo \u5B57\u6BB5 imageKey.repository:imageKey.tag\n          helm:\n            # {key}.registry, {key}.repository, {key}.tag\n            explicitRegistry: true\n\n# \u6D4B\u8BD5\ntest:\n  - image: gcr.io/k8s-skaffold/skaffold-example\n    # \u68C0\u6D4B\u6587\u4EF6\u662F\u5426\u5B58\u5728 \u7ED3\u6784\u662F\u5426\u6B63\u786E\n    structureTests:\n      - \'./structure-test/*\'\n    structureTestsArgs:\n  - image: custom-test-example\n    # \u81EA\u5B9A\u4E49\u6D4B\u8BD5\n    command: ./test.sh\n\n# \u591A\u73AF\u5883\ndeploy:\n  # \u9ED8\u8BA4\u90E8\u7F72\u4E0A\u4E0B\u6587\n  kubeContext: minikube\n# skaffold run -p profile-1,profile-2\nprofiles:\n  - name: profile-1\n    deploy:\n      kubeContext: docker-for-desktop\n  - name: profile-2\n    activation:\n      - kubeContext: minikube\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"structure-test/test.yaml"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"schemaVersion: 2.0.0\n\nfileExistenceTests:\n  - name: 'no go binary'\n    path: '/usr/bin/go'\n    shouldExist: false\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-dockerfile",metastring:'title="Dockerfile"',children:'FROM golang:1.16 as builder\nCOPY main.go .\n# `skaffold debug` sets SKAFFOLD_GO_GCFLAGS to disable compiler optimizations\nARG SKAFFOLD_GO_GCFLAGS\nRUN go build -gcflags="${SKAFFOLD_GO_GCFLAGS}" -o /app main.go\n\nFROM alpine:3\n# Define GOTRACEBACK to mark this container as using the Go language runtime\n# for `skaffold debug` (https://skaffold.dev/docs/workflows/debug/).\nENV GOTRACEBACK=single\nCMD ["./app"]\nCOPY --from=builder /app .\n'})})]})}function f(e={}){let{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},17776:function(e,n,s){s.d(n,{R:()=>l,x:()=>r});var t=s(7378);let a={},o=t.createContext(a);function l(e){let n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);