"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["63405"],{26610:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>l,toc:()=>o,default:()=>u,metadata:()=>s,assets:()=>c,contentTitle:()=>a});var s=JSON.parse('{"id":"db/relational/postgresql/postgresql-tenant","title":"PostgreSQL Tenant","description":"- \u65B9\u6848","source":"@site/../notes/db/relational/postgresql/postgresql-tenant.md","sourceDirName":"db/relational/postgresql","slug":"/db/relational/postgresql/tenant","permalink":"/notes/db/relational/postgresql/tenant","draft":false,"unlisted":false,"editUrl":"https://github.com/wenerme/wener/edit/master/notes/../notes/db/relational/postgresql/postgresql-tenant.md","tags":[],"version":"current","lastUpdatedBy":"wener","lastUpdatedAt":1656205646000,"frontMatter":{"title":"PostgreSQL Tenant"},"sidebar":"docs","previous":{"title":"Pg SQL \u5E38\u89C1\u95EE\u9898","permalink":"/notes/db/relational/postgresql/sql-faq"},"next":{"title":"Trigger","permalink":"/notes/db/relational/postgresql/trigger"}}'),r=t(86106),i=t(17776);let l={title:"PostgreSQL Tenant"},a="PostgreSQL Tenant",c={},o=[{value:"context variable",id:"context-variable",level:2},{value:"generate_res_id",id:"generate_res_id",level:2},{value:"generate_res_sid",id:"generate_res_sid",level:2},{value:"RLS",id:"rls",level:2}];function d(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"postgresql-tenant",children:"PostgreSQL Tenant"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u65B9\u6848\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u5206\u5E93"}),"\n",(0,r.jsx)(n.li,{children:"\u5206 Schema"}),"\n",(0,r.jsx)(n.li,{children:"\u5206 View - updateable view"}),"\n",(0,r.jsx)(n.li,{children:"\u5206\u7247\u8868"}),"\n",(0,r.jsx)(n.li,{children:"tenant_id \u5217\u5212\u5206"}),"\n",(0,r.jsx)(n.li,{children:"RLS \u6743\u9650\u63A7\u5236"}),"\n",(0,r.jsx)(n.li,{children:"set \u4E0A\u4E0B\u6587\u4FE1\u606F"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\u6269\u5BB9\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u6C34\u5E73 - citus"}),"\n",(0,r.jsx)(n.li,{children:"\u5782\u76F4"}),"\n",(0,r.jsx)(n.li,{children:"HA/AA"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.postgresql.org/docs/current/functions-admin.html",children:"System Administration Functions"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/geckoboard/pgulid",children:"geckoboard/pgulid"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Pure pgsql ULID"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"context-variable",children:"context variable"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["set\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"session - \u94FE\u63A5\u7EF4\u5EA6"}),"\n",(0,r.jsx)(n.li,{children:"local - tx \u7ED3\u675F\u91CD\u7F6E"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"\u81EA\u5B9A\u4E49\u53D8\u91CF\u6700\u597D \u524D\u7F00+."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"-- name, value, local\n-- local \u5982\u679C\u4E3A true \u5219\u4F18\u5148\u8FD4\u56DE tx \u8303\u56F4 - \u4E0D\u5B58\u5728\u4E0D\u4F1A\u5F02\u5E38\n-- local \u5982\u679C\u4E3A false \u5219\u8FD4\u56DE session \u8303\u56F4 - \u4E0D\u5B58\u5728\u4F1A\u5F02\u5E38\nselect set_config('tenant.id', 1000, true);\nset tenant.id = 1000;\n\n-- name, optional\nselect current_setting('tenant.id',true);\nshow tenant.id;\n\nreset tenant.id;\n\n-- \u7279\u6B8A\nselect current_user;\n"})}),"\n",(0,r.jsx)(n.h2,{id:"generate_res_id",children:"generate_res_id"}),"\n",(0,r.jsx)(n.p,{children:"\u9488\u5BF9\u79DF\u6237+\u8D44\u6E90\u751F\u6210\u552F\u4E00 ID"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"-- TENANT-RES-ULID\ncreate or replace function generate_res_id(name text) returns text\nas\n$$\nbegin\n    return concat(current_setting('tenant.id'), '-', name, '-', generate_ulid());\nend\n$$\n    language plpgsql\n    volatile;\n\nselect generate_res_id('user');\n"})}),"\n",(0,r.jsx)(n.h2,{id:"generate_res_sid",children:"generate_res_sid"}),"\n",(0,r.jsx)(n.p,{children:"\u9488\u5BF9\u79DF\u6237+\u8D44\u6E90\u751F\u6210\u552F\u4E00 \u5E8F\u5217 ID"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u5982\u679C\u76F4\u63A5\u9884\u5148\u63D2\u5165\u8BB0\u5F55\uFF0C\u5219\u53EF\u53EA\u7528 update \u4F1A\u66F4\u597D"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"-- track sequence\ncreate table system_resource_sequences\n(\n    id        serial,\n    tenant_id bigint,\n    resource  text,\n    value     bigint,\n    unique (tenant_id, resource)\n);\n\n-- generate_res_sid - upsert version\ncreate or replace function generate_res_sid(res text)\n    returns bigint\nas\n$$\ninsert into system_resource_sequences(tenant_id, resource, value)\nvalues (1000, res, 1)\non conflict(tenant_id,resource) do update set value=system_resource_sequences.value + 1\nreturning value\n$$\n    language sql\n    volatile;\n\n-- generate_res_sid - update and insert version\ncreate or replace function generate_res_sid(res text)\n    returns bigint\nas\n$$\ndeclare\n    id  system_resource_sequences.value%TYPE;\n    tid system_resource_sequences.tenant_id%TYPE := current_setting('tenant.id')::bigint;\nbegin\n    -- trigger less default computing\n    update system_resource_sequences\n    set value=value + 1\n    where tenant_id = tid\n      and resource = res\n    returning value into id;\n    if id is null\n    then\n        insert into system_resource_sequences(tenant_id, resource, value)\n        values (tid, res, 1)\n        on conflict(tenant_id,resource) do update set value=system_resource_sequences.value + 1\n        returning value into id;\n    end if;\n\n    return id;\nend;\n$$\n    language plpgsql\n    volatile;\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"-- test insert\ninsert into system_resource_sequences(tenant_id, resource, value)\nvalues (current_setting('tenant.id'), 'User', 1)\non conflict(tenant_id,resource) do update set value=system_resource_sequences.value + 1\nreturning value;\n\n-- test function\nselect generate_res_sid('User');\n"})}),"\n",(0,r.jsx)(n.h2,{id:"rls",children:"RLS"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"\u5927\u5927\u7B80\u5316 SaaS \u6570\u636E\u9694\u79BB"}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u589E\u5220\u6539\u67E5\u90FD\u4F1A\u751F\u6548"}),"\n",(0,r.jsx)(n.li,{children:"superuser \u53EF\u4EE5 BYPASSRLS"}),"\n",(0,r.jsxs)(n.li,{children:["table owner bypasses RLS\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u9664\u975E - FORCE ROW LEVEL SECURITY"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"\u6BCF\u4E2A\u79DF\u6237\u7528\u4E00\u4E2A\u7528\u6237 - \u6269\u5BB9\u53D7\u9650"}),"\n",(0,r.jsx)(n.li,{children:"\u901A\u8FC7 local/session \u53D8\u91CF\u63A7\u5236 - \u9700\u8981\u989D\u5916\u8BBE\u7F6E"}),"\n",(0,r.jsx)(n.li,{children:"SET role"}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://cazzer.medium.com/a06084f31945",children:"Designing the most performant Row Level Security schema in Postgres"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://aws.amazon.com/cn/blogs/database/multi-tenant-data-isolation-with-postgresql-row-level-security/",children:"Multi-tenant data isolation with PostgreSQL Row Level Security"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"ALTER TABLE tenant ENABLE ROW LEVEL SECURITY;\n\n-- \u7528\u6237\u7EF4\u5EA6\nCREATE POLICY tenant_isolation_policy ON tenant\nUSING (tenant_id::TEXT = current_user);\n\n-- \u4E0A\u4E0B\u6587\u4FE1\u606F\nCREATE POLICY tenant_isolation_policy ON tenant\nUSING (tenant_id = current_setting('app.current_tenant')::UUID);\n\n-- \u590D\u6742 \u7EA7\u8054\nCREATE POLICY my_fancy_policy\n  ON t_company\n  USING (manager IN ( WITH RECURSIVE t AS\n                        (\n                           SELECT current_user AS person, NULL::text AS manager\n                           FROM t_manager\n                           WHERE manager = CURRENT_USER\n                           UNION ALL\n                           SELECT m.person, m.manager\n                           FROM t_manager m\n                           INNER JOIN t ON t.person = m.manager\n                        )\n                        SELECT person FROM t\n                    )\n        )\n;\n\n-- ACL\ncreate policy item_owner\non items\nas permissive\nfor all\nto application_user\nusing (\n  items.acl_read && regexp_split_to_array(current_setting('jwt.claims.roles'), ',')::uuid[]\n  or items.acl_write && regexp_split_to_array(current_setting('jwt.claims.roles'), ',')::uuid[]\n)\nwith check (\n  items.acl_write && regexp_split_to_array(current_setting('jwt.claims.roles'), ',')::uuid[]\n);\n\ncreate policy item_owner\non items\nas permissive\nfor all\nto application_user\nusing (\n  items.public = true\n  or exists(\n    select item_id\n    from permissions\n    where (\n      permissions.user_or_group_id =\n        any(regexp_split_to_array(current_setting('jwt.claims.role'), ',')::uuid[])\n      and permissions.item_id = items.id\n    )\n  )\n)\nwith check (exists(\n  select item_id\n  from permissions\n  where (\n    permissions.user_or_group_id =\n      any(regexp_split_to_array(current_setting('jwt.claims.role'), ',')::uuid[])\n    and permissions.item_id = items.id\n    and permissions.role = 'write'\n  )\n));\n"})})]})}function u(e={}){let{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},17776:function(e,n,t){t.d(n,{R:()=>l,x:()=>a});var s=t(7378);let r={},i=s.createContext(r);function l(e){let n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);