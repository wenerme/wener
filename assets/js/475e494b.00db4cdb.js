"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["11518"],{78917:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>l,toc:()=>d,default:()=>p,metadata:()=>s,assets:()=>i,contentTitle:()=>r});var s=JSON.parse('{"id":"service/cms/payload","title":"payload","description":"- payload - Headless CMS","source":"@site/../notes/service/cms/payload.md","sourceDirName":"service/cms","slug":"/service/cms/payload","permalink":"/notes/service/cms/payload","draft":false,"unlisted":false,"editUrl":"https://github.com/wenerme/wener/edit/master/notes/../notes/service/cms/payload.md","tags":[],"version":"current","lastUpdatedBy":"wener","lastUpdatedAt":1690351481000,"frontMatter":{"title":"payload"},"sidebar":"docs","previous":{"title":"Outline","permalink":"/notes/service/cms/outline"},"next":{"title":"Strapi","permalink":"/notes/service/cms/strapi/"}}'),o=t(86106),a=t(17776);let l={title:"payload"},r="payload",i={},d=[];function c(e){let n={a:"a",admonition:"admonition",code:"code",h1:"h1",header:"header",li:"li",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"payload",children:"payload"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://payloadcms.com/",children:"payload"})," - Headless CMS\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"GraphQL, REST API, Local API"}),"\n",(0,o.jsx)(n.li,{children:"MongoDB"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["Local API\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"\u53EF\u4EE5\u4E0D\u542F\u52A8\u670D\u52A1"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"caution",children:(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"v1 \u9700\u8981 commonjs"}),"\n",(0,o.jsx)(n.li,{children:"v2 \u8FD8\u5728\u5F00\u53D1\u4E2D"}),"\n"]})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# npx create-payload-app\npnpm add payload express dotenv # \u6DFB\u52A0\u5230\u73B0\u6709\u9879\u76EE\npnpm add -D ts-node typescript @types/node\n\ncat << EOF > .env\nPAYLOAD_SECRET=secret\nMONGODB_URI=mongodb://localhost:27017/payload\nEOF\nnpx tsc --init --target esnext --module esnext --moduleResolution node16\n# ts-node config with swc\n\nNODE_ENV=development pnpm node --loader ts-node/esm --watch ./src/server.ts\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",metastring:'title="payload.config.ts"',children:"import { buildConfig } from 'payload/config';\nexport default buildConfig({\n  // By default, Payload will boot up normally\n  // and you will be provided with a base `User` collection.\n  // But, here is where you define how you'd like Payload to work!\n});\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"http://localhost:3000/admin",children:"http://localhost:3000/admin"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"import express from 'express';\nimport payload from 'payload';\nimport dotenv from 'dotenv';\n\n\ndotenv.config();\nconst app = express();\n\nconst start = async () => {\n  await payload.init({\n    secret: process.env.PAYLOAD_SECRET,\n    mongoURL: process.env.MONGODB_URI,\n    express: app,\n  });\n\n  app.listen(3000, async () => {\n    console.log('Express is now listening for incoming connections on port 3000.');\n  });\n};\n\nstart();\n"})})]})}function p(e={}){let{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},17776:function(e,n,t){t.d(n,{R:()=>l,x:()=>r});var s=t(7378);let o={},a=s.createContext(o);function l(e){let n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);