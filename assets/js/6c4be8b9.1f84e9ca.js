"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["50377"],{2581:function(n,e,i){i.r(e),i.d(e,{frontMatter:()=>a,toc:()=>o,default:()=>h,metadata:()=>t,assets:()=>d,contentTitle:()=>s});var t=JSON.parse('{"id":"os/linux/network/bonding","title":"Bonding","description":"- Bonding - Link aggregation - LACP","source":"@site/../notes/os/linux/network/bonding.md","sourceDirName":"os/linux/network","slug":"/os/linux/network/bonding","permalink":"/notes/os/linux/network/bonding","draft":false,"unlisted":false,"editUrl":"https://github.com/wenerme/wener/edit/master/notes/../notes/os/linux/network/bonding.md","tags":[],"version":"current","lastUpdatedBy":"wener","lastUpdatedAt":1687760370000,"frontMatter":{"title":"Bonding"},"sidebar":"docs","previous":{"title":"BBR","permalink":"/notes/os/linux/network/bbr"},"next":{"title":"\u6865\u63A5\u7F51\u7EDC","permalink":"/notes/os/linux/network/bridge"}}'),l=i(86106),r=i(17776);let a={title:"Bonding"},s="Bonding",d={},o=[{value:"\u6A21\u5F0F",id:"\u6A21\u5F0F",level:2},{value:"\u914D\u7F6E\u6848\u4F8B",id:"\u914D\u7F6E\u6848\u4F8B",level:2},{value:"bonding if hook",id:"bonding-if-hook",level:3},{value:"\u547D\u4EE4\u63A7\u5236",id:"\u547D\u4EE4\u63A7\u5236",level:3},{value:"\u6700\u7B80\u5355\u7684\u914D\u7F6E",id:"\u6700\u7B80\u5355\u7684\u914D\u7F6E",level:3},{value:"\u56DB\u7F51\u53E3\u805A\u5408",id:"\u56DB\u7F51\u53E3\u805A\u5408",level:3},{value:"\u65E0\u7EBF\u548C\u6709\u7EBF\u805A\u5408",id:"\u65E0\u7EBF\u548C\u6709\u7EBF\u805A\u5408",level:3},{value:"bond stp",id:"bond-stp",level:2},{value:"10gbe &amp; 1gbe",id:"10gbe--1gbe",level:2},{value:"write error: Directory not empty",id:"write-error-directory-not-empty",level:2},{value:"bond0: (slave eth1): invalid new link 3 on slave",id:"bond0-slave-eth1-invalid-new-link-3-on-slave",level:2},{value:"the permanent HWaddr of slave - &lt; mac &gt; - is still in use by bond - set the HWaddr of slave to a different address to avoid conflicts",id:"the-permanent-hwaddr-of-slave----mac----is-still-in-use-by-bond---set-the-hwaddr-of-slave-to-a-different-address-to-avoid-conflicts",level:2},{value:"No 802.3ad response from the link partner for any adapters in the bond",id:"no-8023ad-response-from-the-link-partner-for-any-adapters-in-the-bond",level:2},{value:"bond 802.3ad",id:"bond-8023ad",level:2},{value:"LAG tagged vs untagged",id:"lag-tagged-vs-untagged",level:2},{value:"/proc/net/bonding/bond0",id:"procnetbondingbond0",level:2},{value:"tree /sys/class/net/bond0",id:"tree-sysclassnetbond0",level:2}];function c(n){let e={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...n.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.header,{children:(0,l.jsx)(e.h1,{id:"bonding",children:"Bonding"})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["Bonding - ",(0,l.jsx)(e.a,{href:"https://en.wikipedia.org/wiki/Link_aggregation",children:"Link aggregation"})," - LACP\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u5B9E\u73B0\u94FE\u8DEF\u4E3B\u5907\u5207\u6362 - \u5BB9\u707E"}),"\n",(0,l.jsx)(e.li,{children:"\u5B9E\u73B0\u805A\u5408\u591A\u4E2A\u94FE\u8DEF - \u589E\u52A0\u5E26\u5BBD\u4E0A\u9650\uFF0C\u5229\u7528\u4EA4\u6362\u673A LACP \u80FD\u529B"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\u53C2\u8003\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["Linux ",(0,l.jsx)(e.a,{href:"https://wiki.linuxfoundation.org/networking/bonding",children:"bonding"})]}),"\n",(0,l.jsxs)(e.li,{children:["kernel doc ",(0,l.jsx)(e.a,{href:"https://www.kernel.org/doc/Documentation/networking/bonding.txt",children:"bonding.txt"})]}),"\n",(0,l.jsx)(e.li,{children:(0,l.jsx)(e.a,{href:"http://www.linux-kvm.org/page/HOWTO_BONDING",children:"http://www.linux-kvm.org/page/HOWTO_BONDING"})}),"\n",(0,l.jsx)(e.li,{children:(0,l.jsx)(e.a,{href:"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/networking_guide/sec-using_channel_bonding",children:"RHEL7 Using Channel Bonding"})}),"\n",(0,l.jsx)(e.li,{children:(0,l.jsx)(e.a,{href:"https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Virtualization/3.3/html/Installation_Guide/Bonding_Modes.html",children:"Bonding Modes"})}),"\n",(0,l.jsxs)(e.li,{children:["Alpine ",(0,l.jsx)(e.a,{href:"https://wiki.alpinelinux.org/wiki/Bonding",children:"Bonding"})]}),"\n",(0,l.jsx)(e.li,{children:(0,l.jsx)(e.a,{href:"http://louwrentius.com/achieving-450-mbs-network-file-transfers-using-linux-bonding.html",children:"Achieving 450 MB/s Network File Transfers Using Linux Bonding"})}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.a,{href:"https://blogs.technet.microsoft.com/josebda/2012/06/28/the-basics-of-smb-multichannel-a-feature-of-windows-server-2012-and-smb-3-0/",children:"The basics of SMB Multichannel, a feature of Windows Server 2012 and SMB 3.0"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Windows \u7684 SMB \u5171\u4EAB\u672C\u8EAB\u652F\u6301\u591A\u901A\u9053"}),"\n",(0,l.jsx)(e.li,{children:"\u534F\u8BAE\u652F\u6301\u81EA\u52A8\u53D1\u73B0\u591A\u7F51\u5361, \u5E76\u4E14\u81EA\u52A8\u5229\u7528\u591A\u7F51\u5361\u8FDB\u884C\u7F51\u7EDC\u4F20\u8F93"}),"\n",(0,l.jsx)(e.li,{children:"\u548C\u94FE\u8DEF\u805A\u5408\u6709\u672C\u8D28\u533A\u522B"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.li,{children:(0,l.jsx)(e.a,{href:"https://www.linux.com/news/what-can-you-do-second-ethernet-port",children:"What can you do with a second Ethernet port ?"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.li,{children:"ifenslave"}),"\n"]}),"\n",(0,l.jsx)(e.admonition,{type:"tip",children:(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u65E0\u8BBA\u5982\u4F55\u914D\u7F6E, \u5355\u4E2A\u7F51\u7EDC\u94FE\u63A5\u90FD\u4E0D\u4F1A\u8D85\u8FC7\u5355\u4E2A\u7269\u7406\u94FE\u8DEF\u7684\u901F\u5EA6"}),"\n",(0,l.jsx)(e.li,{children:"802.3ad \u9700\u8981\u4EA4\u6362\u673A\u652F\u6301 LACP \u7EC4, \u6027\u80FD\u6700\u597D - \u57FA\u4E8E\u94FE\u63A5\u4FE1\u606F Hash"}),"\n"]})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-bash",children:"# /etc/network/if-post-down.d/bonding\n# /etc/network/if-pre-up.d/bonding\n# /etc/network/if-up.d/bonding\napk add bonding\n# \u624B\u52A8\u52A0\u8F7D\u9A71\u52A8\nmodprobe bonding\necho bonding | sudo tee /etc/modules-load.d/bonding.conf\n\n# \u67E5\u770B\u6A21\u5F0F\ncat /sys/class/net/bond0/bonding/mode\n# \u67E5\u770B\u72B6\u6001\n# \u80FD\u770B\u5230\u7EC4\u6210\u7F51\u5361\u7684\u5B9E\u9645 mac \u5730\u5740\ncat /proc/net/bonding/bond0\n\nethtool eth0\n\n# jumbo frames\nifconfig bond0 mtu 9000 up\n\n# \u6DFB\u52A0 slave\nifenslave bond0 eth0 eth1 eth2\n# \u79FB\u9664\nifenslave -d bond0 eth1\n# \u8FDE\u63A5\nifenslave -c bond0 eth1\n\ncat /sys/class/net/bonding_masters\n# \u4FEE\u6539\u914D\u7F6E\necho balance-rr > /sys/class/net/bond0/bonding/mode\n"})}),"\n",(0,l.jsx)(e.h2,{id:"\u6A21\u5F0F",children:"\u6A21\u5F0F"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u9ED8\u8BA4 balance-rr"}),"\n",(0,l.jsxs)(e.li,{children:["balance-rr - 0 - \u8F6E\u8BE2\u8D1F\u8F7D\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u552F\u4E00\u5355 TCP/IP \u6D41\u80FD\u5229\u7528\u591A\u4E2A\u7F51\u53E3\u7684\u6A21\u5F0F"}),"\n",(0,l.jsx)(e.li,{children:"\u4EE3\u4EF7\u662F\u788E\u7247\u5316,\u65E0\u5E8F,\u9700\u8981 TCP/IP \u62E5\u6324\u534F\u8BAE\u63A7\u5236"}),"\n",(0,l.jsx)(e.li,{children:"net.ipv4.tcp_reordering \u63A7\u5236\u62E5\u6324\u7A0B\u5EA6"}),"\n",(0,l.jsx)(e.li,{children:"\u4F7F\u7528\u5BF9\u987A\u5E8F\u65E0\u8981\u6C42\u7684\u534F\u8BAE, \u4F8B\u5982 UDP, \u57FA\u672C\u53EF\u4EE5\u505A\u5230\u7EBF\u6027\u6027\u80FD\u653E\u5927"}),"\n",(0,l.jsx)(e.li,{children:"\u9700\u8981\u4EA4\u6362\u673A\u914D\u7F6E etherchannel \u6216 trunking"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["active-backup - 1 - \u4E3B\u5907\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u4FDD\u6301\u76F8\u540C\u7684\u53D1\u9001\u7F51\u53E3"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["balance-xor - 2 - XOR\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u57FA\u4E8E HASH \u7B97\u6CD5\u8FDB\u884C\u8D1F\u8F7D\u5747\u8861"}),"\n",(0,l.jsx)(e.li,{children:"\u9700\u8981\u4EA4\u6362\u673A\u914D\u7F6E etherchannel \u6216 trunking"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["broadcast - 3 - \u5E7F\u64AD\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u6240\u6709\u7ED1\u5B9A\u7684\u7F51\u5361\u90FD\u6536\u5230\u76F8\u540C\u7684\u6570\u636E, \u7528\u4E8E\u7279\u6B8A\u9700\u6C42, \u4F8B\u5982\u4E24\u4E2A\u4E92\u76F8\u6CA1\u8FDE\u63A5\u7684\u4EA4\u6362\u673A\u53D1\u9001\u76F8\u540C\u7684\u6570\u636E"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["802.3ad - 4 - IEEE 802.3ad - LACP\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u8981\u6C42\u4EA4\u6362\u673A\u652F\u6301 IEEE 802.3ad, \u7F51\u5361\u5E26\u5BBD\u7406\u8BBA\u4E0A\u53EF\u4EE5\u7FFB\u500D"}),"\n",(0,l.jsxs)(e.li,{children:["\u5B9E\u73B0\u65B9\u5F0F\u4E5F\u662F\u57FA\u4E8E hash\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u901A\u5E38\u5305\u62EC src ip/mac/port/protocol, dst ip/mac/port/protocol"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.li,{children:"\u56E0\u6B64\u8F83\u591A\u8FDE\u63A5\u7684\u65F6\u5019\u624D\u4F1A\u6709\u660E\u663E\u7684\u6548\u679C"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["balance-tlb - Adaptive transmit load balancing - 5 - \u9002\u914D\u5668\u4F20\u8F93\u8D1F\u8F7D\u5747\u8861\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u8F93\u51FA\u7684\u6570\u636E\u4F1A\u901A\u8FC7\u6240\u6709\u88AB\u7ED1\u5B9A\u7684\u7F51\u5361\u8F93\u51FA, \u63A5\u6536\u5219\u53EA\u9009\u62E9\u5176\u4E2D\u4E00\u4E2A"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["balance-alb - Adaptive load balancing - 6 - \u9002\u914D\u5668\u8F93\u5165/\u8F93\u51FA\u8D1F\u8F7D\u6A21\u5F0F\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"balance-tlb + receive load balancing (rlb)"}),"\n",(0,l.jsx)(e.li,{children:"\u5728 5 \u7684\u57FA\u7840\u4E0A, \u63A5\u6536\u6570\u636E\u4E5F\u5B9E\u73B0\u8D1F\u8F7D\u5747\u8861"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"balance-rr, active-backup, balance-tlb \u548C balance-alb \u4E0D\u9700\u8981\u4EA4\u6362\u673A\u652F\u6301"}),"\n",(0,l.jsxs)(e.li,{children:["balance-alb \u548C balance-tlb \u4E0D\u4E00\u5B9A\u6240\u6709\u4EA4\u6362\u673A\u90FD\u80FD\u4F7F\u7528\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u53EF\u80FD\u4F1A\u6709 arp \u95EE\u9898, \u4F8B\u5982\u6709\u4E9B\u673A\u5668\u4E0D\u80FD\u76F8\u4E92\u8FDE\u63A5"}),"\n",(0,l.jsx)(e.li,{children:"\u9700\u8981\u5BF9 miimon, updelay \u8FDB\u884C\u8C03\u8BD5"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["balance-xor \u53EF\u80FD\u4F1A\u9700\u8981\u4EA4\u6362\u673A\u914D\u7F6E\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"You need to set up an interface group (not LACP) on HP and Cisco switches, but apparently it's not necessary on D-Link, Netgear and Fujitsu switches."}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\u9009\u9879\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["lacp_rate - lacp pdu - 110bytes\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"slow - 30s"}),"\n",(0,l.jsx)(e.li,{children:"fast - 1s"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.li,{children:"downdelay"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.h2,{id:"\u914D\u7F6E\u6848\u4F8B",children:"\u914D\u7F6E\u6848\u4F8B"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u9700\u8981\u5B89\u88C5 bonding \u624D\u80FD\u4F7F\u7528 bond-slaves \u8FD9\u6837\u7684\u6307\u4EE4"}),"\n"]}),"\n",(0,l.jsx)(e.h3,{id:"bonding-if-hook",children:"bonding if hook"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-shell",children:'auto eth0\niface eth0 inet manual\n\nauto wlan0\niface wlan0 inet manual\n  # \u53EF\u76F4\u63A5\u8BBE\u7F6E master\n  bond-master eth0\nauto bond0\niface bond0 inet dhcp\n  # \u6240\u6709\u9009\u9879\u4F4D\u4E8E\n  # /sys/class/net/bond0/bonding\n  # \u65E0\n  bond-slaves none\n  # \u6240\u6709 eth\n  bond-slaves all\n  # \u5217\u8868\n  bond-slaves eth0 wlan0\n  # \u4E5F\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528 slaves\n  slaves eth0 wlan0\n\n  # \u4EE5\u4E0B\u9009\u9879\u5747\u53EF\u9009\n  # \u9ED8\u8BA4\u4E3A slaves \u7684\u7B2C\u4E00\u4E2A\n  bond-primary eth0\n  # \u70ED slave\n  bond-active-slave wlan0\n\n  # \u9ED8\u8BA4\n  bond-mode balance-rr\n  bond-miimon 0\n  bond-use-carrier 1\n  bond-updelay 0\n  bond-downdelay 0\n  bond-arp-validate none 0\n  bond-fail-over_mac none 0\n  bond-xmit-hash-policy layer2 0\n  bond-lacp-rate slow 0\n  bond-arp-ip-target ""\n'})}),"\n",(0,l.jsx)(e.h3,{id:"\u547D\u4EE4\u63A7\u5236",children:"\u547D\u4EE4\u63A7\u5236"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:"auto bond0\niface bond0 inet dhcp\n  down 'servicenk set $IFACE down\n  post-down rmmod bonding\n  pre-up modprobe bonding mode=4 miimon=200\n  up 'servicenk set $IFACE up mtu 9000\n  up udevadm trigger\n\nallow-hotplug eth0\niface eth0 inet manual\n  up ifenslave bond0 $IFACE\n  down ifenslave -d bond0 $IFACE 2> /dev/null\n\nallow-hotplug eth1\niface eth1 inet manual\n  up ifenslave bond0 $IFACE\n  down ifenslave -d bond0 $IFACE 2> /dev/null\n"})}),"\n",(0,l.jsx)(e.h3,{id:"\u6700\u7B80\u5355\u7684\u914D\u7F6E",children:"\u6700\u7B80\u5355\u7684\u914D\u7F6E"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:"auto bond0\niface bond0 inet static\n	address 192.168.0.2\n	netmask 255.255.255.0\n	gateway 192.168.0.1\n	# specify the ethernet interfaces that should be bonded\n	bond-slaves eth0 eth1 eth2 eth3\n"})}),"\n",(0,l.jsx)(e.h3,{id:"\u56DB\u7F51\u53E3\u805A\u5408",children:"\u56DB\u7F51\u53E3\u805A\u5408"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:"allow-hotplug eth0\niface eth0 inet manual\n\nallow-hotplug eth1\niface eth1 inet manual\n\nallow-hotplug eth2\niface eth2 inet manual\n\nallow-hotplug eth3\niface eth3 inet manual\n\nauto bond0\niface bond0 inet static\n    address 192.168.1.5\n    netmask 255.255.252.0\n    gateway 192.168.1.1\n    bond-slaves eth0 eth1 eth2 eth3\n    bond-mode active-backup\n    bond-miimon 100\n    bond-downdelay 200\n    bond-updelay 200\n"})}),"\n",(0,l.jsx)(e.h3,{id:"\u65E0\u7EBF\u548C\u6709\u7EBF\u805A\u5408",children:"\u65E0\u7EBF\u548C\u6709\u7EBF\u805A\u5408"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:'allow-hotplug wlan0\niface wlan0 inet manual\n    wpa-ssid "*censored*"\n    wpa-key-mgmt WPA-PSK\n    wpa-group TKIP CCMP\n    wpa-psk *censored*\n    wpa-bridge bond0 # fixes mac address of outgoing packets so that they are consistent\n    bond-master bond0\n    bond-mode active-backup\n    bond-miimon 100 # checks link status every 100 msec\n    bond-give-a-chance 10 # when wlan comes up wait up to 10 seconds for it to\n\nallow-hotplug bond0\niface bond0 inet static\n    address 192.168.178.130\n    netmask 255.255.255.0\n    gateway 192.168.178.1\n    bond-slaves eth0 # automatically brings up eth0 and slaves it to this bond\n    bond-mode active-backup # uses primary if available, otherwise fallback to other\n    bond-primary eth0 # priority to use eth0 when available\n    bond-miimon 100\n'})}),"\n",(0,l.jsx)(e.h1,{id:"faq",children:"FAQ"}),"\n",(0,l.jsx)(e.h2,{id:"bond-stp",children:"bond stp"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u5982\u679C\u6709\u591A lan\uFF0C\u90E8\u5206\u7EC4\u4E86 bond \u90E8\u5206\u6CA1\u6709\uFF0C\u90A3\u4E48\u9700\u8981\u5F00\u542F stp"}),"\n",(0,l.jsx)(e.li,{children:"\u4E0D\u5F00\u542F stp \u4F1A\u5BFC\u81F4\u7F51\u7EDC\u5185\u6709\u591A\u6761\u8DEF\u5F84\u8FBE\u5230\u76F8\u540C\u5730\u65B9\uFF0C\u8FD9\u662F\u6709\u95EE\u9898\u7684"}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-bash",children:"auto bond0\niface bond0 inet manual\n  bond-slaves eth0 eth1\n  bond-mode 802.3ad\n  bond-xmit-hash-policy layer2+3\n\nauto br0\niface br0 inet dhcp\n  bridge-ports bond0\n  bridge-stp 0\n"})}),"\n",(0,l.jsx)(e.h2,{id:"10gbe--1gbe",children:"10gbe & 1gbe"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u4E0D\u652F\u6301\u6DF7\u5408 lacp bonding, \u53EF\u4EE5 active-backup"}),"\n",(0,l.jsx)(e.li,{children:"\u5EFA\u8BAE\u5C06 10gbe \u8BBE\u7F6E\u4E3A\u9ED8\u8BA4\u5373\u53EF"}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:"# 1gbe\niface eth0 inet manual\n#Onboard  #1\n\n# 10gbe\niface eth1 inet manual\n\nauto bond0\niface bond0 inet manual\n  bond-slaves eth0 eth1\n  bond-primary eth1\n  bond-mode active-backup\n\nauto br0\niface br0 inet static\n  address  192.168.1.3\n  netmask  255.255.255.0\n  gateway  192.168.1.1\n  bridge-ports bond0\n  bridge-stp off\n"})}),"\n",(0,l.jsx)(e.h2,{id:"write-error-directory-not-empty",children:"write error: Directory not empty"}),"\n",(0,l.jsx)(e.p,{children:"bond \u4E3A down \u4E14\u65E0 slave \u65F6\u624D\u80FD\u4FEE\u6539"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:"bond0: option mode: unable to set because the bond device has slaves\n"})}),"\n",(0,l.jsx)(e.h2,{id:"bond0-slave-eth1-invalid-new-link-3-on-slave",children:"bond0: (slave eth1): invalid new link 3 on slave"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["5.10.26 Linux kernel error\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:(0,l.jsx)(e.a,{href:"https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/commit/?h=linux-rolling-lts&id=9392b8219b62b0536df25c9de82b33f8a00881ef",children:"https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/commit/?h=linux-rolling-lts&id=9392b8219b62b0536df25c9de82b33f8a00881ef"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.h2,{id:"the-permanent-hwaddr-of-slave----mac----is-still-in-use-by-bond---set-the-hwaddr-of-slave-to-a-different-address-to-avoid-conflicts",children:"the permanent HWaddr of slave - < mac > - is still in use by bond - set the HWaddr of slave to a different address to avoid conflicts"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-bash",children:"ifconfig | grep HWaddr\n"})}),"\n",(0,l.jsx)(e.h2,{id:"no-8023ad-response-from-the-link-partner-for-any-adapters-in-the-bond",children:"No 802.3ad response from the link partner for any adapters in the bond"}),"\n",(0,l.jsx)(e.h2,{id:"bond-8023ad",children:"bond 802.3ad"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:"auto bond0\niface bond0 inet static\n  bond-slaves eth0 eth1 eth2 eth3\n  bond-mode 802.3ad\n  bond-xmit-hash-policy layer2+3\n  address 192.168.1.100\n  netmask 255.255.255.0\n  gateway 192.168.1.1\n"})}),"\n",(0,l.jsx)(e.h2,{id:"lag-tagged-vs-untagged",children:"LAG tagged vs untagged"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"VLAN tagged/untagged"}),"\n"]}),"\n",(0,l.jsx)(e.h2,{id:"procnetbondingbond0",children:"/proc/net/bonding/bond0"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:"Ethernet Channel Bonding Driver: v5.15.16-0-lts\n\nBonding Mode: IEEE 802.3ad Dynamic link aggregation\nTransmit Hash Policy: layer2 (0)\nMII Status: up\nMII Polling Interval (ms): 100\nUp Delay (ms): 0\nDown Delay (ms): 0\nPeer Notification Delay (ms): 0\n\n802.3ad info\nLACP active: on\nLACP rate: slow\nMin links: 0\nAggregator selection policy (ad_select): stable\n\nSlave Interface: eth0\nMII Status: up\nSpeed: 1000 Mbps\nDuplex: full\nLink Failure Count: 0\nPermanent HW addr: 74:00:11:22:33:40\nSlave queue ID: 0\nAggregator ID: 1\nActor Churn State: none\nPartner Churn State: none\nActor Churned Count: 0\nPartner Churned Count: 0\n\nSlave Interface: eth1\nMII Status: up\nSpeed: 1000 Mbps\nDuplex: full\nLink Failure Count: 0\nPermanent HW addr: 74:00:11:22:33:41\nSlave queue ID: 0\nAggregator ID: 1\nActor Churn State: none\nPartner Churn State: none\nActor Churned Count: 0\nPartner Churned Count: 0\n\nSlave Interface: eth2\nMII Status: up\nSpeed: 1000 Mbps\nDuplex: full\nLink Failure Count: 0\nPermanent HW addr: 74:00:11:22:33:42\nSlave queue ID: 0\nAggregator ID: 1\nActor Churn State: none\nPartner Churn State: none\nActor Churned Count: 0\nPartner Churned Count: 0\n\nSlave Interface: eth3\nMII Status: up\nSpeed: 1000 Mbps\nDuplex: full\nLink Failure Count: 0\nPermanent HW addr: 74:00:11:22:33:43\nSlave queue ID: 0\nAggregator ID: 1\nActor Churn State: none\nPartner Churn State: none\nActor Churned Count: 0\nPartner Churned Count: 0\n"})}),"\n",(0,l.jsx)(e.h2,{id:"tree-sysclassnetbond0",children:"tree /sys/class/net/bond0"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u6240\u6709\u4FE1\u606F"}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-bash",children:"grep . /sys/class/net/bond0/bonding/\n"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:"/sys/class/net/bond0\n\u251C\u2500\u2500 addr_assign_type\n\u251C\u2500\u2500 addr_len\n\u251C\u2500\u2500 address\n\u251C\u2500\u2500 bonding\n\u2502\xa0\xa0 \u251C\u2500\u2500 active_slave\n\u2502\xa0\xa0 \u251C\u2500\u2500 ad_actor_key\n\u2502\xa0\xa0 \u251C\u2500\u2500 ad_actor_sys_prio\n\u2502\xa0\xa0 \u251C\u2500\u2500 ad_actor_system\n\u2502\xa0\xa0 \u251C\u2500\u2500 ad_aggregator\n\u2502\xa0\xa0 \u251C\u2500\u2500 ad_num_ports\n\u2502\xa0\xa0 \u251C\u2500\u2500 ad_partner_key\n\u2502\xa0\xa0 \u251C\u2500\u2500 ad_partner_mac\n\u2502\xa0\xa0 \u251C\u2500\u2500 ad_select\n\u2502\xa0\xa0 \u251C\u2500\u2500 ad_user_port_key\n\u2502\xa0\xa0 \u251C\u2500\u2500 all_slaves_active\n\u2502\xa0\xa0 \u251C\u2500\u2500 arp_all_targets\n\u2502\xa0\xa0 \u251C\u2500\u2500 arp_interval\n\u2502\xa0\xa0 \u251C\u2500\u2500 arp_ip_target\n\u2502\xa0\xa0 \u251C\u2500\u2500 arp_validate\n\u2502\xa0\xa0 \u251C\u2500\u2500 downdelay\n\u2502\xa0\xa0 \u251C\u2500\u2500 fail_over_mac\n\u2502\xa0\xa0 \u251C\u2500\u2500 lacp_rate\n\u2502\xa0\xa0 \u251C\u2500\u2500 lp_interval\n\u2502\xa0\xa0 \u251C\u2500\u2500 mii_status\n\u2502\xa0\xa0 \u251C\u2500\u2500 miimon\n\u2502\xa0\xa0 \u251C\u2500\u2500 min_links\n\u2502\xa0\xa0 \u251C\u2500\u2500 mode\n\u2502\xa0\xa0 \u251C\u2500\u2500 num_grat_arp\n\u2502\xa0\xa0 \u251C\u2500\u2500 num_unsol_na\n\u2502\xa0\xa0 \u251C\u2500\u2500 packets_per_slave\n\u2502\xa0\xa0 \u251C\u2500\u2500 primary\n\u2502\xa0\xa0 \u251C\u2500\u2500 primary_reselect\n\u2502\xa0\xa0 \u251C\u2500\u2500 queue_id\n\u2502\xa0\xa0 \u251C\u2500\u2500 resend_igmp\n\u2502\xa0\xa0 \u251C\u2500\u2500 slaves\n\u2502\xa0\xa0 \u251C\u2500\u2500 tlb_dynamic_lb\n\u2502\xa0\xa0 \u251C\u2500\u2500 updelay\n\u2502\xa0\xa0 \u251C\u2500\u2500 use_carrier\n\u2502\xa0\xa0 \u2514\u2500\u2500 xmit_hash_policy\n\u251C\u2500\u2500 broadcast\n\u251C\u2500\u2500 carrier\n\u251C\u2500\u2500 carrier_changes\n\u251C\u2500\u2500 dev_id\n\u251C\u2500\u2500 dev_port\n\u251C\u2500\u2500 dormant\n\u251C\u2500\u2500 duplex\n\u251C\u2500\u2500 flags\n\u251C\u2500\u2500 gro_flush_timeout\n\u251C\u2500\u2500 ifalias\n\u251C\u2500\u2500 ifindex\n\u251C\u2500\u2500 iflink\n\u251C\u2500\u2500 link_mode\n\u251C\u2500\u2500 lower_eth1 -> ../../../pci0000:00/0000:00:1c.4/0000:02:00.1/net/eth1\n\u251C\u2500\u2500 lower_eth2 -> ../../../pci0000:00/0000:00:1c.4/0000:02:00.2/net/eth2\n\u251C\u2500\u2500 lower_eth3 -> ../../../pci0000:00/0000:00:1c.4/0000:02:00.3/net/eth3\n\u251C\u2500\u2500 mtu\n\u251C\u2500\u2500 name_assign_type\n\u251C\u2500\u2500 netdev_group\n\u251C\u2500\u2500 operstate\n\u251C\u2500\u2500 phys_port_id\n\u251C\u2500\u2500 phys_port_name\n\u251C\u2500\u2500 phys_switch_id\n\u251C\u2500\u2500 power\n\u2502\xa0\xa0 \u251C\u2500\u2500 autosuspend_delay_ms\n\u2502\xa0\xa0 \u251C\u2500\u2500 control\n\u2502\xa0\xa0 \u251C\u2500\u2500 runtime_active_time\n\u2502\xa0\xa0 \u251C\u2500\u2500 runtime_status\n\u2502\xa0\xa0 \u2514\u2500\u2500 runtime_suspended_time\n\u251C\u2500\u2500 proto_down\n\u251C\u2500\u2500 queues\n\u2502\xa0\xa0 \u251C\u2500\u2500 rx-0\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251C\u2500\u2500 rps_cpus\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 rps_flow_cnt\n\u2502\xa0\xa0 \u251C\u2500\u2500 tx-0\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251C\u2500\u2500 byte_queue_limits\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251C\u2500\u2500 hold_time\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251C\u2500\u2500 inflight\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251C\u2500\u2500 limit\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251C\u2500\u2500 limit_max\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 limit_min\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251C\u2500\u2500 tx_maxrate\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251C\u2500\u2500 tx_timeout\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 xps_cpus\n\u251C\u2500\u2500 speed\n\u251C\u2500\u2500 statistics\n\u2502\xa0\xa0 \u251C\u2500\u2500 collisions\n\u2502\xa0\xa0 \u251C\u2500\u2500 multicast\n\u2502\xa0\xa0 \u251C\u2500\u2500 rx_bytes\n\u2502\xa0\xa0 \u251C\u2500\u2500 rx_compressed\n\u2502\xa0\xa0 \u251C\u2500\u2500 rx_crc_errors\n\u2502\xa0\xa0 \u251C\u2500\u2500 rx_dropped\n\u2502\xa0\xa0 \u251C\u2500\u2500 rx_errors\n\u2502\xa0\xa0 \u251C\u2500\u2500 rx_fifo_errors\n\u2502\xa0\xa0 \u251C\u2500\u2500 rx_frame_errors\n\u2502\xa0\xa0 \u251C\u2500\u2500 rx_length_errors\n\u2502\xa0\xa0 \u251C\u2500\u2500 rx_missed_errors\n\u2502\xa0\xa0 \u251C\u2500\u2500 rx_nohandler\n\u2502\xa0\xa0 \u251C\u2500\u2500 rx_over_errors\n\u2502\xa0\xa0 \u251C\u2500\u2500 rx_packets\n\u2502\xa0\xa0 \u251C\u2500\u2500 tx_aborted_errors\n\u2502\xa0\xa0 \u251C\u2500\u2500 tx_bytes\n\u2502\xa0\xa0 \u251C\u2500\u2500 tx_carrier_errors\n\u2502\xa0\xa0 \u251C\u2500\u2500 tx_compressed\n\u2502\xa0\xa0 \u251C\u2500\u2500 tx_dropped\n\u2502\xa0\xa0 \u251C\u2500\u2500 tx_errors\n\u2502\xa0\xa0 \u251C\u2500\u2500 tx_fifo_errors\n\u2502\xa0\xa0 \u251C\u2500\u2500 tx_heartbeat_errors\n\u2502\xa0\xa0 \u251C\u2500\u2500 tx_packets\n\u2502\xa0\xa0 \u2514\u2500\u2500 tx_window_errors\n\u251C\u2500\u2500 subsystem -> ../../../../class/net\n\u251C\u2500\u2500 tx_queue_len\n\u251C\u2500\u2500 type\n\u2514\u2500\u2500 uevent\n"})})]})}function h(n={}){let{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,l.jsx)(e,{...n,children:(0,l.jsx)(c,{...n})}):c(n)}},17776:function(n,e,i){i.d(e,{R:()=>a,x:()=>s});var t=i(7378);let l={},r=t.createContext(l);function a(n){let e=t.useContext(r);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(l):n.components||l:a(n.components),t.createElement(r.Provider,{value:e},n.children)}}}]);