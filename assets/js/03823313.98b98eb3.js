"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["21257"],{80491:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>c,toc:()=>i,default:()=>u,metadata:()=>s,assets:()=>o,contentTitle:()=>r});var s=JSON.parse('{"id":"db/column/scylladb/scylladb-dev","title":"ScyllaDB \u5F00\u53D1","description":"- Batch","source":"@site/../notes/db/column/scylladb/scylladb-dev.md","sourceDirName":"db/column/scylladb","slug":"/db/column/scylladb/dev","permalink":"/notes/db/column/scylladb/dev","draft":false,"unlisted":false,"editUrl":"https://github.com/wenerme/wener/edit/master/notes/../notes/db/column/scylladb/scylladb-dev.md","tags":[{"inline":true,"label":"Devlopment","permalink":"/notes/tags/devlopment"}],"version":"current","lastUpdatedBy":"wener","lastUpdatedAt":1690946986000,"frontMatter":{"tags":["Devlopment"]},"sidebar":"docs","previous":{"title":"ScyllaDB \u914D\u7F6E","permalink":"/notes/db/column/scylladb/conf"},"next":{"title":"Database Awesome","permalink":"/notes/db/awesome"}}'),a=t(86106),l=t(17776);let c={tags:["Devlopment"]},r="ScyllaDB \u5F00\u53D1",o={},i=[{value:"NodeJS",id:"nodejs",level:2}];function d(e){let n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"scylladb-\u5F00\u53D1",children:"ScyllaDB \u5F00\u53D1"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Batch\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"\u5C3D\u91CF\u786E\u4FDD\u5728\u76F8\u540C\u5206\u533A"}),"\n",(0,a.jsxs)(n.li,{children:["max_mutation_size_in_kb\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"commitlog_segment_size_in_mb \u81F3\u5C11\u4E3A 2*max_mutation_size_in_kb/1024"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:"batch_size_fail_threshold_in_kb=50"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"nodejs",children:"NodeJS"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"pnpm add cassandra-driver\npnpm add -D tsx typescript @types/node\n\ndocker exec -it scylla nodetool status\ndocker exec -it scylla cqlsh -e \"CREATE KEYSPACE catalog WITH REPLICATION = { 'class' : 'NetworkTopologyStrategy','datacenter1':1 }\"\ndocker exec -it scylla cqlsh -k catalog -e \"CREATE TABLE users (name text, age int, PRIMARY KEY(name))\"\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",metastring:'title="test.ts"',children:"import { Client } from 'cassandra-driver';\n\nconst client = new Client({\n  contactPoints: ['localhost'],\n  localDataCenter: 'datacenter1',\n  keyspace: 'catalog',\n  // \u9ED8\u8BA4\u8D26\u53F7\u5BC6\u7801\n  credentials: {\n    username: 'cassandra',\n    password: 'cassandra',\n  },\n});\n\nawait client.batch(\n  [\n    {\n      query: 'insert into users (name, age) values (?,?)',\n      params: ['test', 1],\n    },\n    {\n      query: 'insert into users (name, age) values (?,?)',\n      params: ['test2', 1],\n    },\n    { query: 'update users set age = ? where name = ?', params: [2, 'test2'] },\n  ],\n  { prepare: true },\n);\n\nconsole.log((await client.execute(`SELECT * FROM users WHERE name = ?`, ['test2'])).rows);\nconsole.log((await client.execute(`SELECT count(1) FROM users`, ['test2'])).rows[0].count);\n\nprocess.exit(0);\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"pnpm tsx test.ts\n"})})]})}function u(e={}){let{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},17776:function(e,n,t){t.d(n,{R:()=>c,x:()=>r});var s=t(7378);let a={},l=s.createContext(a);function c(e){let n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);