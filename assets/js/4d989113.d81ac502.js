"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["67399"],{11013:function(e,n,l){l.r(n),l.d(n,{frontMatter:()=>c,toc:()=>o,default:()=>a,metadata:()=>i,assets:()=>t,contentTitle:()=>h});var i=JSON.parse('{"id":"os/linux/shell/shell-profile","title":"profile","description":"- login","source":"@site/../notes/os/linux/shell/shell-profile.md","sourceDirName":"os/linux/shell","slug":"/os/linux/shell/profile","permalink":"/notes/os/linux/shell/profile","draft":false,"unlisted":false,"editUrl":"https://github.com/wenerme/wener/edit/master/notes/../notes/os/linux/shell/shell-profile.md","tags":[],"version":"current","lastUpdatedBy":"wener","lastUpdatedAt":1707902059000,"frontMatter":{"title":"profile"},"sidebar":"docs","previous":{"title":"Shell FAQ","permalink":"/notes/os/linux/shell/faq"},"next":{"title":"Shell Reference","permalink":"/notes/os/linux/shell/ref"}}'),s=l(86106),r=l(17776);let c={title:"profile"},h="profile",t={},o=[{value:"non-interactive",id:"non-interactive",level:2}];function d(e){let n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"profile",children:"profile"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["login\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"/etc/profile"}),"\n",(0,s.jsxs)(n.li,{children:["Bourne compatible shells - ~/.profile, ",(0,s.jsx)(n.code,{children:"/etc/profile.d/*"})]}),"\n",(0,s.jsx)(n.li,{children:"bash - ~/.bash_profile"}),"\n",(0,s.jsx)(n.li,{children:"zsh - /etc/zprofile, ~/.zprofile for zsh"}),"\n",(0,s.jsx)(n.li,{children:"csh - /etc/csh.login, ~/.login"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["non-login\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"/etc/bashrc"}),"\n",(0,s.jsx)(n.li,{children:"~/.bashrc"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["interactive\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"/etc/profile"}),"\n",(0,s.jsx)(n.li,{children:"~/.profile"}),"\n",(0,s.jsx)(n.li,{children:"/etc/bashrc"}),"\n",(0,s.jsx)(n.li,{children:"/etc/bash.bashrc"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["non-interactive\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"/etc/bashrc"}),"\n",(0,s.jsx)(n.li,{children:"/etc/bash.bashrc"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# non-interactive login shell\necho $- | bash -lx\n\n# interactive login shell\ntty -s\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["bash\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["login\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"--noprofile"})}),"\n",(0,s.jsx)(n.li,{children:"/etc/profile"}),"\n",(0,s.jsxs)(n.li,{children:["~/.bash_profile\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"if [ -f ~/.bashrc ]; then . ~/.bashrc; fi"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"~/.bash_login"}),"\n",(0,s.jsx)(n.li,{children:"~/.profile"}),"\n",(0,s.jsx)(n.li,{children:"~/.bash_logout"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["non-login\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--norc"}),", ",(0,s.jsx)(n.code,{children:"--rcfile"})]}),"\n",(0,s.jsx)(n.li,{children:"~/.bashrc"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["non-interactive\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["BASH_ENV\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'if [ -n "$BASH_ENV" ]; then . "$BASH_ENV"; fi'})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["sh\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"/etc/profile"}),"\n",(0,s.jsx)(n.li,{children:"~/.profile"}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"ENV"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.gnu.org/software/bash/manual/html_node/Bash-Startup-Files.html",children:"https://www.gnu.org/software/bash/manual/html_node/Bash-Startup-Files.html"})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"macOS"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:'title="/etc/profile"',children:'if [ -x /usr/libexec/path_helper ]; then\n  eval $(/usr/libexec/path_helper -s)\nfi\n\nif [ "${BASH-no}" != "no" ]; then\n  [ -r /etc/bashrc ] && . /etc/bashrc\nfi\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# System-wide .bashrc file for interactive bash(1) shells.\nif [ -z "$PS1" ]; then\n   return\nfi\n\nPS1=\'\\h:\\W \\u\\$ \'\n# Make bash check its window size after a process completes\nshopt -s checkwinsize\n\n[ -r "/etc/bashrc_$TERM_PROGRAM" ] && . "/etc/bashrc_$TERM_PROGRAM"\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["TERM_PROGRAM\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"iTerm.app"}),"\n",(0,s.jsx)(n.li,{children:"Apple_Terminal"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"non-interactive",children:"non-interactive"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'[[ $- != *i* ]]\n\n[ -z "$PS1" ]\n'})})]})}function a(e={}){let{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},17776:function(e,n,l){l.d(n,{R:()=>c,x:()=>h});var i=l(7378);let s={},r=i.createContext(s);function c(e){let n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function h(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);