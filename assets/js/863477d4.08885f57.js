"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["9067"],{38449:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>i,toc:()=>a,default:()=>E,metadata:()=>s,assets:()=>o,contentTitle:()=>d});var s=JSON.parse('{"id":"db/relational/postgresql/postgresql-fdw","title":"PostgreSQL FDW","description":"- Foreign data wrappers","source":"@site/../notes/db/relational/postgresql/postgresql-fdw.md","sourceDirName":"db/relational/postgresql","slug":"/db/relational/postgresql/fdw","permalink":"/notes/db/relational/postgresql/fdw","draft":false,"unlisted":false,"editUrl":"https://github.com/wenerme/wener/edit/master/notes/../notes/db/relational/postgresql/postgresql-fdw.md","tags":[],"version":"current","lastUpdatedBy":"wener","lastUpdatedAt":1632926151000,"frontMatter":{"title":"PostgreSQL FDW"},"sidebar":"docs","previous":{"title":"\u5E38\u89C1\u95EE\u9898","permalink":"/notes/db/relational/postgresql/faq"},"next":{"title":"PostgreSQL \u5168\u6587\u68C0\u7D22","permalink":"/notes/db/relational/postgresql/fts"}}'),r=t(86106),l=t(17776);let i={title:"PostgreSQL FDW"},d="PostgreSQL FDW",o={},a=[{value:"mysql_fdw",id:"mysql_fdw",level:2},{value:"postgres_fdw",id:"postgres_fdw",level:2},{value:"dblink",id:"dblink",level:2},{value:"sqlite_fdw",id:"sqlite_fdw",level:2}];function c(e){let n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"postgresql-fdw",children:"PostgreSQL FDW"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://wiki.postgresql.org/wiki/Foreign_data_wrappers",children:"Foreign data wrappers"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/adjust/clickhouse_fdw",children:"adjust/clickhouse_fdw"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"mysql_fdw",children:"mysql_fdw"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/EnterpriseDB/mysql_fdw",children:"EnterpriseDB/mysql_fdw"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE EXTENSION mysql_fdw;\n\nCREATE SERVER mysql_server\nFOREIGN DATA WRAPPER mysql_fdw\nOPTIONS (host '127.0.0.1', port '3306');\n\nCREATE USER MAPPING FOR postgres\nSERVER mysql_server\nOPTIONS (username 'foo', password 'bar');\n\nCREATE FOREIGN TABLE warehouse(\n     warehouse_id int,\n     warehouse_name text,\n     warehouse_created datetime)\nSERVER mysql_server\n     OPTIONS (dbname 'db', table_name 'warehouse');\n"})}),"\n",(0,r.jsx)(n.h2,{id:"postgres_fdw",children:"postgres_fdw"}),"\n",(0,r.jsx)(n.admonition,{type:"caution",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u652F\u6301 ON CONFLICT DO NOTHING"}),"\n",(0,r.jsxs)(n.li,{children:["\u4E0D\u652F\u6301 ON CONFLICT DO UPDATE\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u53EF\u4EE5\u624B\u52A8\u5B9E\u73B0 ",(0,r.jsx)(n.a,{href:"https://www.postgresql.org/docs/current/plpgsql-control-structures.html#PLPGSQL-UPSERT-EXAMPLE",children:"Exceptions with UPDATE/INSERT"})]}),"\n"]}),"\n"]}),"\n"]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE EXTENSION postgres_fdw;\n\nCREATE SERVER ext_server\nFOREIGN DATA WRAPPER postgres_fdw\nOPTIONS (host '127.0.0.1', port '5432', dbname 'ext');\n\nCREATE USER MAPPING FOR demo\nSERVER ext_server\nOPTIONS (user 'ext', password 'ext');\n\nCREATE FOREIGN TABLE foreign_table (\n        id integer NOT NULL,\n        data text\n)\nSERVER foreign_server\nOPTIONS (schema_name 'some_schema', table_name 'some_table');\n"})}),"\n",(0,r.jsx)(n.h2,{id:"dblink",children:"dblink"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE EXTENSION dblink;\n\nSELECT dblink_connect('myconn', 'db2remote');\n\nCREATE SERVER db2remote\nFOREIGN DATA WRAPPER dblink_fdw\nOPTIONS (host 'postgres.demoproject.aivencloud.com', dbname 'db2', port '11254');\nSELECT * FROM dblink('myconn','SELECT * FROM foo') AS t(a int);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"sqlite_fdw",children:"sqlite_fdw"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/pgspider/sqlite_fdw",children:"pgspider/sqlite_fdw"})}),"\n",(0,r.jsx)(n.li,{children:"\u4E0D\u652F\u6301 COPY"}),"\n",(0,r.jsx)(n.li,{children:"\u4E0D\u652F\u6301\u5206\u7247\u8868"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE EXTENSION sqlite_fdw;\n\nCREATE SERVER sqlite_server FOREIGN DATA WRAPPER sqlite_fdw OPTIONS (database '/tmp/test.db');\nCREATE FOREIGN TABLE t1(a integer, b text) SERVER sqlite_server OPTIONS (table 't1_sqlite');\n-- \u9700\u8981 key \u652F\u6301\u66F4\u65B0\nCREATE FOREIGN TABLE t1(a integer OPTIONS (key 'true'), b text) SERVER sqlite_server OPTIONS (table 't1_sqlite');\n-- int \u8F6C timestamp\nCREATE FOREIGN TABLE t1(a integer, b text, c timestamp without time zone OPTIONS (column_type 'INT')) SERVER sqlite_server OPTIONS (table 't1_sqlite');\n\nIMPORT FOREIGN SCHEMA public FROM SERVER sqlite_server INTO public;\n"})})]})}function E(e={}){let{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},17776:function(e,n,t){t.d(n,{R:()=>i,x:()=>d});var s=t(7378);let r={},l=s.createContext(r);function i(e){let n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);