"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["49363"],{94344:function(e,n,s){s.r(n),s.d(n,{frontMatter:()=>o,toc:()=>c,default:()=>p,metadata:()=>r,assets:()=>l,contentTitle:()=>i});var r=JSON.parse('{"id":"devops/kubernetes/app/zalando-postgres-operator","title":"zalando/postgres-operator","description":"- zalando/postgres-operator","source":"@site/../notes/devops/kubernetes/app/zalando-postgres-operator.md","sourceDirName":"devops/kubernetes/app","slug":"/devops/kubernetes/app/zalando-postgres-operator","permalink":"/notes/devops/kubernetes/app/zalando-postgres-operator","draft":false,"unlisted":false,"editUrl":"https://github.com/wenerme/wener/edit/master/notes/../notes/devops/kubernetes/app/zalando-postgres-operator.md","tags":[],"version":"current","lastUpdatedBy":"wener","lastUpdatedAt":1660268591000,"frontMatter":{"title":"zalando/postgres-operator"},"sidebar":"docs","previous":{"title":"tekton","permalink":"/notes/devops/kubernetes/app/tekton"},"next":{"title":"CNCF","permalink":"/notes/devops/kubernetes/cncf"}}'),a=s(86106),t=s(17776);let o={title:"zalando/postgres-operator"},i="zalando/postgres-operator",l={},c=[{value:"OperatorConfiguration",id:"operatorconfiguration",level:2},{value:"PostgresTeam",id:"postgresteam",level:2},{value:"postgresql",id:"postgresql",level:2},{value:"S3 \u76F8\u5173\u73AF\u5883\u53D8\u91CF",id:"s3-\u76F8\u5173\u73AF\u5883\u53D8\u91CF",level:2},{value:"WAL-E \u914D\u7F6E",id:"wal-e-\u914D\u7F6E",level:2},{value:"\u4F7F\u7528 wal-e \u800C\u4E0D\u662F wal-g",id:"\u4F7F\u7528-wal-e-\u800C\u4E0D\u662F-wal-g",level:2},{value:"\u903B\u8F91\u5907\u4EFD\u6CE8\u610F\u4E8B\u9879",id:"\u903B\u8F91\u5907\u4EFD\u6CE8\u610F\u4E8B\u9879",level:2},{value:"The request signature we calculated does not match the signature you provided. Check your key and signing method.",id:"the-request-signature-we-calculated-does-not-match-the-signature-you-provided-check-your-key-and-signing-method",level:2},{value:"Server side encryption specified but KMS is not configured",id:"server-side-encryption-specified-but-kms-is-not-configured",level:2},{value:"cannot perform switch over before re-creating the pod: no replicas",id:"cannot-perform-switch-over-before-re-creating-the-pod-no-replicas",level:2},{value:"\u6E05\u7406\u5DF2\u5220\u9664\u96C6\u7FA4",id:"\u6E05\u7406\u5DF2\u5220\u9664\u96C6\u7FA4",level:2},{value:"operator-ui backup \u9519\u8BEF",id:"operator-ui-backup-\u9519\u8BEF",level:2},{value:"TypeError: expected string or bytes-like object",id:"typeerror-expected-string-or-bytes-like-object",level:3},{value:"OSError: [Errno 101] Network unreachable",id:"oserror-errno-101-network-unreachable",level:3},{value:"No snapshots found",id:"no-snapshots-found",level:3},{value:"pg_hba.conf rejects connection for host",id:"pg_hbaconf-rejects-connection-for-host",level:2},{value:"\u5176\u4ED6\u95EE\u9898",id:"\u5176\u4ED6\u95EE\u9898",level:2}];function d(e){let n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"zalandopostgres-operator",children:"zalando/postgres-operator"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://github.com/zalando/postgres-operator",children:"zalando/postgres-operator"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"MIT, Go"}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/notes/db/relational/postgresql/patroni",children:"Patroni"})," - Streaming replication"]}),"\n",(0,a.jsxs)(n.li,{children:["PITR - ",(0,a.jsx)(n.a,{href:"/notes/db/relational/postgresql/spilo",children:"Spilo"})," - pg_basebackup/WAL-E"]}),"\n",(0,a.jsx)(n.li,{children:"Preload - bg_mon, pg_stat_statements, pgextwlist, pg_auth_mon"}),"\n",(0,a.jsx)(n.li,{children:"Extensions - decoderbufs, hypopg, pg_cron, pg_partman, pg_stat_kcache, pgq, plpgsql_check, postgis, set_user, timescaledb"}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://postgres-operator.readthedocs.io/en/latest/",children:"\u6587\u6863"})}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Operator \u53EF\u901A\u8FC7 ConfigMap \u6216 CRD \u914D\u7F6E - \u63A8\u8350 CRD \u914D\u7F6E\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"CRD \u8981\u6C42\u7C7B\u578B\u5339\u914D - Helm values \u9700\u8981\u8C03\u6574"}),"\n",(0,a.jsx)(n.li,{children:"ConfigMap \u503C\u5747\u4E3A\u5B57\u7B26\u4E32"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\u6BCF\u4E2A\u7528\u6237\u4F1A\u521B\u5EFA\u4E00\u4E2A secret \u5B58\u50A8\u8D26\u53F7\u5BC6\u7801\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"{username}.{team}-{clustername}.credentials.postgresql.acid.zalan.do"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"username"}),"\n",(0,a.jsx)(n.li,{children:"password"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["CRD\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"OperatorConfiguration - CRD \u914D\u7F6E Operator"}),"\n",(0,a.jsx)(n.li,{children:"postgresql - \u5B9A\u4E49 PostgreSQL \u96C6\u7FA4"}),"\n",(0,a.jsx)(n.li,{children:"PostgresTeam - \u5B9A\u4E49\u56E2\u961F"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\u7279\u6027\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"WAL \u5907\u4EFD"}),"\n",(0,a.jsx)(n.li,{children:"\u903B\u8F91\u5907\u4EFD - SQL dump"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Patroni \u548C Spilo \u4E5F\u662F zalando \u5F00\u53D1\u7684\uFF0C\u56E0\u6B64\u8FD9\u4E2A operator \u76F8\u5BF9\u66F4\u6709\u4FDD\u969C"}),"\n"]})}),"\n",(0,a.jsx)(n.admonition,{type:"caution",children:(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["cluster-name \u5FC5\u987B\u5339\u914D {TEAM}-{NAME} \u683C\u5F0F\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"\u5373 postgresql crd \u7684\u540D\u5B57"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\u6570\u636E\u5E93\u540D\u5B57\u9650\u5236\u548C PG \u4E0D\u540C - \u5FC5\u987B ",(0,a.jsx)(n.code,{children:"^[a-zA-Z_][a-zA-Z0-9_]*$"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\u6570\u636E\u5E93\u540D\u5B57\u4E0D\u53EF\u4EE5\u5305\u542B ",(0,a.jsx)(n.code,{children:"-"})," - \u9700\u8981 quote"]}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://github.com/zalando/postgres-operator/issues/667",children:"#667"})}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\u7528\u6237\u540D\u4E0D\u8981\u5305\u542B ",(0,a.jsx)(n.code,{children:"_"})," - \u56E0\u4E3A\u751F\u6210 secret \u4E0D\u652F\u6301\u540D\u5B57\u5305\u542B ",(0,a.jsx)(n.code,{children:"_"})]}),"\n",(0,a.jsxs)(n.li,{children:["pgroot/pg_log\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\u4F1A\u5360\u7528\u8F83\u5927\u7A7A\u95F4 - ",(0,a.jsx)(n.a,{href:"https://github.com/zalando/postgres-operator/issues/431",children:"#431"})]}),"\n",(0,a.jsx)(n.li,{children:"\u9ED8\u8BA4 7 \u5929\u5185\u5FAA\u73AF\u5199\u5165"}),"\n",(0,a.jsx)(n.li,{children:"\u5982\u679C\u5360\u7528\u4E86\u5F88\u5927\u7684\u7A7A\u95F4\u591A\u534A\u662F\u51FA\u4E86\u4EC0\u4E48\u95EE\u9898"}),"\n"]}),"\n"]}),"\n"]})}),"\n",(0,a.jsx)(n.admonition,{title:"\u5907\u4EFD\u6CE8\u610F\u4E8B\u9879",type:"caution",children:(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"S3 bukect \u662F\u5168\u5C40\u7684\uFF0C\u4E0D\u652F\u6301\u6BCF\u4E2A\u96C6\u7FA4\u72EC\u7ACB\u914D\u7F6E"}),"\n",(0,a.jsxs)(n.li,{children:["pod_environment_secret \u76EE\u524D\u53EA\u6302\u8F7D\u5728\u4E86 operator \u4E0A\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"\u903B\u8F91\u5907\u4EFD\u65E0\u6CD5\u4F7F\u7528\u8BE5\u914D\u7F6E"}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://github.com/zalando/postgres-operator/issues/1348",children:"#1348"})}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\u975E AWS S3 \u53EA\u80FD\u4F7F\u7528 WAL-G - \u56E0\u4E3A WAL-E \u5F00\u542F\u4E86 SSE\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"\u4F8B\u5982 Minio"}),"\n"]}),"\n"]}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# {team}-{name}\nCLUSTER_NAME=acid-minimal-cluster\n# Master Host\nPGMASTER=$(kubectl get pods -o jsonpath={.items..metadata.name} -l application=spilo,cluster-name=${CLUSTER_NAME},spilo-role=master)\n# \u7AEF\u53E3\u8F6C\u53D1\nkubectl port-forward $PGMASTER 6432:5432\n\n# \u83B7\u53D6\u5BC6\u7801\u8FDE\u63A5\u6570\u636E\u5E93\nexport PGUSER=postgres\nexport PGPASSWORD=$(kubectl get secret ${PGUSER}.${CLUSTER_NAME}.credentials.postgresql.acid.zalan.do -o 'jsonpath={.data.password}' | base64 -d)\nexport PGSSLMODE=require\npsql -h localhost -p 6432\n\n# \u8F6C\u53D1 operator-ui\nkubectl port-forward -n postgres-operator svc/postgres-operator-ui 8080:80\n"})}),"\n",(0,a.jsx)(n.h2,{id:"operatorconfiguration",children:"OperatorConfiguration"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"kind: OperatorConfiguration\napiVersion: acid.zalan.do/v1\nconfiguration:\n  # \u901A\u7528\u914D\u7F6E\n  enable_crd_validation: true\n  enable_lazy_spilo_upgrade: false\n  enable_pgversion_env_var: true\n  enable_spilo_wal_path_compat: false\n  # \u9ED8\u8BA4\u4F7F\u7528 DCS\n  etcd_host:\n  kubernetes_use_configmaps: false\n  docker_image:\n  sidecars: []\n  enable_shm_volume: true\n  # operator create/update/delete/sync\n  workers: 8\n  max_instances: -1\n  min_instances: -1\n  resync_period: 30m\n  repair_period: 5m\n  set_memory_request_to_limit: false\n\n  # Postgres \u7528\u6237\u914D\u7F6E\n  users:\n    super_username: postgres\n    replication_username: stanby\n  load_balancer:\n  # AWS \u548C GCP \u914D\u7F6E\n  aws_or_gcp:\n    wal_s3_bucket:\n    log_s3_bucket:\n\n    aws_region: eu-central-1\n    additional_secret_mount:\n    additional_secret_mount_path:\n\n    wal_gs_bucket:\n    gcp_credentials:\n\n    # \u5B9E\u9645\u4F7F\u7528 AWS S3 \u5173\u5FC3\u7684\u914D\u7F6E\n    enable_ebs_gp3_migration: false\n    enable_ebs_gp3_migration_max_size: 1000\n    # AWS IAM role - https://github.com/jtblin/kube2iam\n    # Pod annotation iam.amazonaws.com/role\n    kube_iam_role:\n  # \u903B\u8F91\u526F\u672C\n  logical_backup:\n    logical_backup_docker_image: registry.opensource.zalan.do/acid/logical-backup\n    logical_backup_job_prefix: logical-backup-\n    logical_backup_provider: s3\n    logical_backup_s3_bucket:\n    logical_backup_s3_endpoint:\n    logical_backup_s3_region:\n    # AWS_ACCESS_KEY_ID\n    logical_backup_s3_access_key_id:\n    # AWS_SECRET_ACCESS_KEY\n    logical_backup_s3_secret_access_key:\n    logical_backup_schedule: \"30 00 * * *\"\n\n    logical_backup_google_application_credentials:\n  # Operator \u8C03\u8BD5\u914D\u7F6E\n  debug:\n    debug_logging: true\n    enable_database_access: true\n  # \u65E5\u5FD7\u63A5\u53E3\n  logging_rest_api:\n    api_port: 8080\n    ring_log_lines: 100\n    cluster_history_entries: 1000\n  # Team API \u53EF\u7528\u4E8E\u670D\u52A1\u96C6\u6210\n  teams_api:\n    enable_teams_api: true\n    # https://github.com/mkabilov/fake-teams-api\n    teams_api_url:\n    team_api_role_configuration: log_statement:all\n    enable_team_superuser: false\n    team_admin_role: admin\n    enable_admin_role_for_users: true\n    pam_role_name: zalandos\n    # https://github.com/CyberDem0n/pam-oauth2\n    pam_configuration:\n    protected_role_names: admin\n    postgres_superuser_teams:\n    # \u76D1\u542C PostgresTeam CRD\n    enable_postgres_team_crd: false\n    enable_postgres_team_crd_superusers: false\n  # \u8D1F\u8F7D\u5747\u8861\u914D\u7F6E\n  load_balancer:\n    custom_service_annotations: {}\n    # DNS Zone\n    # \u4F7F\u7528 https://github.com/kubernetes-sigs/external-dns\n    db_hosted_zone: db.example.com\n    enable_master_load_balancer: true\n    enable_replica_load_balancer: false\n    # Cluster, Local\n    external_traffic_policy: Cluster\n    master_dns_name_format: \"{cluster}.{team}.{hostedzone}\"\n    replica_dns_name_format: \"{cluster}-repl.{team}.{hostedzone}\"\n  # \u8D85\u65F6\u76F8\u5173\u914D\u7F6E\n  timeouts:\n  # \u94FE\u63A5\u6C60\u914D\u7F6E\n  connection_pooler:\n    connection_pooler_number_of_instances: 2\n    connection_pooler_schema: pooler\n    connection_pooler_user: pooler\n    connection_pooler_image: registry.opensource.zalan.do/acid/pgbouncer\n    connection_pooler_max_db_connections: 60\n    connection_pooler_mode: transaction\n    connection_pooler_default_cpu_request: 500m\n    connection_pooler_default_memory_reques: 100Mi\n    connection_pooler_default_cpu_limit: 1\n    connection_pooler_default_memory_limit: 100Mi\n  # Kubernetes \u8D44\u6E90\u914D\u7F6E\n  kubernetes:\n    # \u521B\u5EFA\u57FA\u7840\u8BBE\u65BD\u8D26\u53F7\u4FE1\u606F - \u81EA\u5B9A\u4E49\u5BC6\u7801\u548C\u7528\u6237\u89D2\u8272 - \u9ED8\u8BA4\u5BC6\u7801\u662F\u751F\u6210\u7684\n    infrastructure_roles_secrets:\n      - secretname: 'postgresql-infrastructure-roles'\n        userkey: 'user1'\n        passwordkey: 'password1'\n        rolekey: 'inrole1'\n    # pod_environment_configmap: \"postgres-operator-system/pod-env-overrides\"\n    pod_environment_configmap:\n    # \u81EA\u5B9A\u4E49\u73AF\u5883\u53D8\u91CF secret - \u7528\u4E8E\u643A\u5E26 s3 \u5BC6\u94A5\u4FE1\u606F\n    pod_environment_secret:\n\n  # \u8D44\u6E90\u914D\u7F6E\n  postgres_pod_resources:\n    default_cpu_request: 100m\n    default_memory_request: 100Mi\n    default_cpu_limit: 1\n    default_memory_limit: 500Mi\n    min_cpu_limit: 250m\n    min_memory_limit: 250Mi\n"})}),"\n",(0,a.jsx)(n.h2,{id:"postgresteam",children:"PostgresTeam"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Team \u7531\u4E8E\u51CF\u5C11 cluster-name \u51B2\u7A81\uFF0C\u5212\u5206\u56E2\u961F\uFF0C\u8BBE\u7F6E\u9ED8\u8BA4\u89D2\u8272\u8D26\u53F7"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: "acid.zalan.do/v1"\nkind: PostgresTeam\nmetadata:\n  name: custom-team-membership\nspec:\n  # \u9644\u52A0\u56E2\u961F\n  additionalTeams:\n    # a \u4F5C\u4E3A b \u7684\u9644\u52A0\u56E2\u961F\n    # \u6548\u679C\u7B49\u540C\u4E8E\u5C06 a \u91CD\u547D\u540D\u4E3A b - \u91CD\u547D\u540D\u901A\u8FC7 \u8BE5\u529F\u80FD\u5B9E\u73B0 - teamdID \u5728 postgresql \u5185\u4E0D\u53EF\u53D8\n    a-team:\n    - "b-team"\n    # \u53EF\u4E92\u76F8\u4E3A\u9644\u52A0\u56E2\u961F\n    b-team:\n    - "a-team"\n\n    # \u865A\u62DF\u56E2\u961F\u53EF\u7528\u4E8E\u6253\u5305\u56E2\u961F\n    virtual-team:\n    - "c-team"\n    - "d-team"\n    a-team:\n    - "virtual-team"\n    b-team:\n    - "virtual-team"\n  # \u9644\u52A0\u6210\u5458\n  additionalMembers:\n    # \u5728\u6240\u6709 a \u56E2\u961F\u7684\u96C6\u7FA4\u4E2D\u521B\u5EFA tia \u53EF\u767B\u9646\u8D26\u6237\n    a-team:\n    - "tia"\n    virtual-team:\n    - "flynch"\n    - "rdecker"\n'})}),"\n",(0,a.jsx)(n.h2,{id:"postgresql",children:"postgresql"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://github.com/zalando/postgres-operator/blob/master/manifests/minimal-postgres-manifest.yaml",children:"manifests/minimal-postgres-manifest.yaml"})}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'kind: \'postgresql\'\napiVersion: \'acid.zalan.do/v1\'\n\nmetadata:\n  name: \'acid-demo\'\n  namespace: \'default\'\n  labels:\n    team: acid\n  # \u5B9E\u4F8B\u5BF9\u5E94 ID - \u4F1A\u7528\u4E8E\u5907\u4EFD\u548C\u514B\u9686\n  uid: efd12e58-5786-11e8-b5a7-06148230260c\nspec:\n  # \u6240\u5C5E\u56E2\u961F - \u521B\u5EFA\u540E\u4E0D\u53EF\u53D8\n  teamId: \'acid\'\n  postgresql:\n    version: \'13\'\n    # \u5176\u4ED6\u53C2\u6570\n    parameters:\n      # \u9ED8\u8BA4 100\n      max_connections: 200\n  # \u53D7 operator \u7684 max_instances min_instances \u53C2\u6570\u5F71\u54CD\n  numberOfInstances: 1\n  volume:\n    # \u652F\u6301\u589E\u52A0 - \u4E0D\u652F\u6301\u51CF\u5C11\n    size: \'10Gi\'\n  # \u7528\u6237\u5217\u8868\n  users:\n    # \u652F\u6301 flags\n    # SUPERUSER, REPLICATION, INHERIT, LOGIN, NOLOGIN, CREATEROLE, CREATEDB, BYPASSURL\n    # \u9ED8\u8BA4 LOGIN\n    demo: []\n  # \u6570\u636E\u5E93\u5217\u8868 - \u4E0D\u4F1A\u521B\u5EFA\u5173\u8054\u89D2\u8272\n  databases:\n    # \u6570\u636E\u5E93: owner\n    demo: demo\n  allowedSourceRanges:\n    # IP ranges to access your cluster go here\n\n  # \u6700\u5C0F 200m 250Mi\n  resources:\n    requests:\n      cpu: 100m\n      memory: 100Mi\n    limits:\n      cpu: 500m\n      memory: 500Mi\n  # \u63A7\u5236\u8C03\u5EA6\n  tolerations:\n  - key: postgres\n    operator: Exists\n    effect: NoSchedule\n\n  nodeAffinity:\n    requiredDuringSchedulingIgnoredDuringExecution:\n      nodeSelectorTerms:\n      - matchExpressions:\n        - key: environment\n          operator: In\n          values:\n          - pci\n  podPriorityClassName:\n  podAnnotations:\n  serviceAnnotations:\n  # \u9ED8\u8BA4\u5F00\u542F\n  enableShmVolume: true\n  additionalVolumes: [ ]\n\n  # \u51C6\u5907\u6570\u636E\u5E93\u548C schema - \u4F1A\u521B\u5EFA\u5BF9\u5E94\u7684\u89D2\u8272\u548C\u7528\u6237\n  preparedDatabases:\n    # \u521B\u5EFA foo_{owner,reader,writer} \u89D2\u8272\n    # \u521B\u5EFA foo_{owner,reader,writer}_user \u7528\u6237\n    foo:\n      # \u662F\u5426\u521B\u5EFA\u9ED8\u8BA4\u7528\u6237\n      defaultUsers: true\n      schemas:\n        # \u521B\u5EFA foo_bar_{owner,reader,writer} \u89D2\u8272\n        # \u521B\u5EFA foo_bar_{owner,reader,writer}_user \u7528\u6237\n        bar:\n          # \u53EF\u6307\u5B9A\u4E0D\u521B\u5EFA\u9ED8\u8BA4\u89D2\u8272\n          defaultRoles: false\n          defaultUsers: true\n        # public \u4E0B\u4E0D\u521B\u5EFA\u9ED8\u8BA4\u89D2\u8272 - \u8BA9 search_path \u5305\u542B public\n        public:\n          defaultRoles: false\n      # \u6269\u5C55\u914D\u7F6E\n      # https://github.com/dimitri/pgextwlist\n      # SHOW extwlist.extensions;\n      # btree_gin,btree_gist,citext,hstore,intarray,ltree,pgcrypto,pgq,pg_trgm,postgres_fdw,tablefunc,uuid-ossp,hypopg,timescaledb,pg_partman\n      extensions:\n        pg_partman: public\n        postgis: data\n  # \u4ECE S3 \u514B\u9686\n  clone:\n    uid: "efd12e58-5786-11e8-b5a7-06148230260c"\n    cluster: "acid-batman"\n    timestamp: "2017-12-19T12:40:33+01:00"\n    s3_endpoint: https://s3.acme.org\n    s3_access_key_id: 0123456789abcdef0123456789abcdef\n    s3_secret_access_key: 0123456789abcdef0123456789abcdef\n    s3_force_path_style: true\n    # \u76F4\u63A5\u514B\u9686 - pg_basebackup \u751F\u6210\u5907\u4EFD\n    # \u76F8\u540C namespace\n    cluster: "acid-batman"\n\n  # \u70ED\u5907\u96C6\u7FA4 - \u4F5C\u4E3A\u53E6\u5916\u4E00\u4E2A\u96C6\u7FA4\u7684 standby\n  # \u5EFA\u8BAE\u96C6\u7FA4\u4E3A\u5355 Pod numberOfInstances: 1, \u56E0\u4E3A\u76EE\u524D\u53EA\u6709 master \u4ECE S3 \u63A5\u53D7 WAL\n  # https://github.com/zalando/postgres-operator/blob/master/manifests/standby-manifest.yaml\n  standby:\n    # \u901A\u8FC7 S3 WAL \u73B0\u6210\u70ED\u5907\u5173\u7CFB\n    s3_wal_path: "s3://path/to/bucket/containing/wal/of/source/cluster/"\n  # \u63D0\u5347 standby \u4E3A\u4F7F\u7528\u96C6\u7FA4\n  # \u5728\u5BB9\u5668\u5185\u64CD\u4F5C patronictl edit-config\n  # \u5220\u9664\u4E0B\u5217\u914D\u7F6E\n  # \u5B8C\u6210\u540E\u5220\u9664\u4E0A\u8FF0 standby \u914D\u7F6E\n  # \u6B63\u5E38\u96C6\u7FA4\u8F6C standby \u53EF\u5728\u5BB9\u5668\u5185\u6DFB\u52A0\u914D\u7F6E\n  standby_cluster:\n    create_replica_methods:\n      - bootstrap_standby_with_wale\n      - basebackup_fast_xlog\n    restore_command: envdir "/home/postgres/etc/wal-e.d/env-standby" /scripts/restore_command.sh\n      "%f" "%p"\n\n  # Sidebar\n  # enable_sidecars\n  sidecars:\n    - name: "container-name"\n      image: "company/image:tag"\n      resources:\n        limits:\n          cpu: 500m\n          memory: 500Mi\n        requests:\n          cpu: 100m\n          memory: 100Mi\n      # POD_NAME\n      # POD_NAMESPACE\n      # POSTGRES_USER\n      # POSTGRES_PASSWORD\n      # PG \u6570\u636E\u76EE\u5F55 /home/postgres/pgdata\n      env:\n        - name: "ENV_VAR_NAME"\n          value: "any-k8s-env-things"\n  # \u521D\u59CB\u5316\u5BB9\u5668\n  # enable_init_containers\n  initContainers:\n    - name: "container-name"\n      image: "company/image:tag"\n      env:\n        - name: "ENV_VAR_NAME"\n          value: "any-k8s-env-things"\n\n  enableMasterLoadBalancer: false\n  enableReplicaLoadBalancer: false\n  # \u5141\u8BB8\u8BBF\u95EE LB \u7684\u5730\u5740\u8303\u56F4\n  allowedSourceRanges:\n\n  # \u5F00\u542F\u903B\u8F91\u5907\u4EFD\n  # \u901A\u8FC7\u521B\u5EFA k8s cronjob \u8FDB\u884C\u5907\u4EFD\n  # \u53EF\u80FD\u5931\u8D25\uFF0C\u6CE8\u610F\u76D1\u63A7 - \u53D7 cronjob \u9650\u5236 https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/#cron-job-limitations\n  enableLogicalBackup: true\n  logicalBackupSchedule: "30 00 * * *"\n  # \u94FE\u63A5\u6C60 - pgbouncer\n  # Service {cluster-name}-pooler\n  enableConnectionPooler: true\n  # \u526F\u672C\u94FE\u63A5\u6C60\n  enableReplicaConnectionPooler: true\n\n  # \u94FE\u63A5\u6C60\u914D\u7F6E\n  # \u5982\u679C\u914D\u7F6E\u4E86\u8BE5\u53C2\u6570\u5219\u9ED8\u8BA4 enableConnectionPooler=true\n  connectionPooler:\n    numberOfInstances: 2\n    # session, transaction\n    mode: "transaction"\n    # \u521B\u5EFA\u51FD\u6570\u548C\u7528\u6237\u7684 schema\n    schema: "pooler"\n    # \u7528\u6237\n    user: "pooler"\n    resources:\n      requests:\n        cpu: 500m\n        memory: 100Mi\n      limits:\n        # \u5EFA\u8BAE limit \u4E3A 1 \u5373\u53EF\n        cpu: "1"\n        memory: 100Mi\n  # \u81EA\u5B9A\u4E49 TLS \u914D\u7F6E\n  # \u53EF\u901A\u8FC7 cert-manager \u751F\u6210\n  tls:\n    secretName: "pg-tls"    # this should hold tls.key and tls.crt\n    caSecretName: "pg-tls-ca" # this should hold ca.crt\n    caFile: "ca.crt" # add this if the secret is configured with a CA\n\n  dockerImage:\n  schedulerName: default-scheduler\n  spiloRunAsUser: root\n  spiloRunAsGroup: root\n  # \u5982\u679C\u975E root \u8FD0\u884C - \u9700\u8981\u81EA\u5B9A\u4E49 image\n  # spiloFSGroup:\n\n  # Patroni \u76F8\u5173\u914D\u7F6E\n  # https://patroni.readthedocs.io/en/latest/SETTINGS.html\n  patroni:\n'})}),"\n",(0,a.jsx)(n.h1,{id:"faq",children:"FAQ"}),"\n",(0,a.jsx)(n.h2,{id:"s3-\u76F8\u5173\u73AF\u5883\u53D8\u91CF",children:"S3 \u76F8\u5173\u73AF\u5883\u53D8\u91CF"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["WAL_BUCKET_SCOPE_SUFFIX\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"/{uid}"})}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["LOG_BUCKET_SCOPE_SUFFIX\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"/{uid}"})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:"WAL_BUCKET_SCOPE_PREFIX"}),"\n",(0,a.jsx)(n.li,{children:"LOG_BUCKET_SCOPE_PREFIX"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: pod-var-custom\ndata:\n  BACKUP_NUM_TO_RETAIN: '5'\n  BACKUP_SCHEDULE: '00 01 * * *'\n  AWS_ACCESS_KEY_ID: '****'\n  AWS_SECRET_ACCESS_KEY: '****'\n  # AWS_ENDPOINT: \"s3.eu-west-1.amazonaws.com\"\n  AWS_REGION: 'eu-west-1'\n  WAL_S3_BUCKET: 'somebucket'\n\n  USE_WALG_BACKUP: 'false'\n  USE_WALG_RESTORE: 'false'\n  WALG_DOWNLOAD_CONCURRENCY: '1'\n  WALG_DISABLE_S3_SSE: 'true'\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"$HOME/pgdata/pgroot/pg_log/postgres-?.log"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'archive_command:  `envdir "{WALE_ENV_DIR}" {WALE_BINARY} wal-push "%p"`\nrestore_command:  `envdir "{{WALE_ENV_DIR}}" /scripts/restore_command.sh "%f" "%p"`\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'# \u624B\u52A8\u89E6\u53D1\n# \u5982\u679C\u51FA\u73B0 root \u4E0D\u5B58\u5728\n# export PGUSER=postgres\nenvdir "/run/etc/wal-e.d/env" /scripts/postgres_backup.sh "/home/postgres/pgdata/pgroot/data"\n# \u67E5\u770B wal-e \u53D8\u91CF\ngrep . /run/etc/wal-e.d/env/*\n# \u903B\u8F91\u5907\u4EFD\ngrep . /run/etc/log.d/env/*\n\ntail -f -n 100 /home/postgres/pgdata/pgroot/pg_log/postgresql-?.log\n\n# \u6D4B\u8BD5\u914D\u7F6E\u662F\u5426\u6B63\u786E\n# \u5982\u679C hang \u4F4F \u53EF\u80FD\u662F\u56E0\u4E3A\u57DF\u540D\u6216 endpoint \u9519\u8BEF\n# minio \u5982\u679C\u6CA1\u914D\u7F6E\u5B50\u57DF\u540D\uFF0C\u9700\u8981\u8BBE\u7F6E AWS_S3_FORCE_PATH_STYLE=true\nenvdir /run/etc/wal-e.d/env wal-g backup-list --detail\n'})}),"\n",(0,a.jsx)(n.h2,{id:"wal-e-\u914D\u7F6E",children:"WAL-E \u914D\u7F6E"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# \u914D\u7F6E\u73AF\u5883\u53D8\u91CF\nAWS_ENDPOINT='https://s3.eu-central-1.amazonaws.com:443'\nWALE_S3_ENDPOINT='https+path://s3.eu-central-1.amazonaws.com:443'\n# \u672A\u8BBE\u7F6E prefix \u5219\u901A\u8FC7 WAL_S3_BUCKET \u751F\u6210\n# SCOPE \u4E3A cluster \u540D\u5B57\nWALE_S3_PREFIX=$WAL_S3_BUCKET/spilo/{WAL_BUCKET_SCOPE_PREFIX}{SCOPE}{WAL_BUCKET_SCOPE_SUFFIX}/wal/{PGVERSION}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"\u4F7F\u7528-wal-e-\u800C\u4E0D\u662F-wal-g",children:"\u4F7F\u7528 wal-e \u800C\u4E0D\u662F wal-g"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: pod-env-overrides\n  namespace: postgres-operator-system\ndata:\n  # \u73AF\u5883\u53D8\u91CF\u63A7\u5236\n  USE_WALG_BACKUP: 'true'\n  USE_WALG_RESTORE: 'true'\n  CLONE_USE_WALG_RESTORE: 'true'\n  # minio \u9700\u8981\n  AWS_S3_FORCE_PATH_STYLE: 'true'\n"})}),"\n",(0,a.jsx)(n.h2,{id:"\u903B\u8F91\u5907\u4EFD\u6CE8\u610F\u4E8B\u9879",children:"\u903B\u8F91\u5907\u4EFD\u6CE8\u610F\u4E8B\u9879"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"\u4E0D\u80FD\u4ECE\u903B\u8F91\u5907\u4EFD\u6062\u590D - \u4E0D\u80FD\u4F5C\u4E3A point-in-time recovery"}),"\n",(0,a.jsx)(n.li,{children:"\u53EA\u662F\u5F53\u4F5C\u6570\u636E\u5FEB\u7167"}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://github.com/zalando/postgres-operator/tree/master/docker/logical-backup/Dockerfile",children:"\u955C\u50CF"}),"\u5185\u5305\u542B pg_dumpall \u5DE5\u5177 - dump \u540E\u538B\u7F29\u4E0A\u4F20 s3"]}),"\n",(0,a.jsx)(n.li,{children:"\u4F9D\u8D56 cronjob - \u4E0D\u592A\u7A33\u5B9A"}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.strong,{children:"\u4E0D\u4F1A\u5220\u9664\u65E7\u7684\u5907\u4EFD"})}),"\n",(0,a.jsxs)(n.li,{children:["\u81EA\u5B9A\u4E49\u955C\u50CF\u8981\u5904\u7406\u597D\u91CD\u542F\u548C\u5E76\u53D1\u8BF7\u6C42 - ",(0,a.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/workloads/controllers/job/#handling-pod-and-container-failures",children:"Handling Pod and container failures"})]}),"\n",(0,a.jsxs)(n.li,{children:["RBAC \u6DFB\u52A0 batch \u63A5\u53E3 cronjobs \u8D44\u6E90\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://github.com/zalando/postgres-operator/blob/master/manifests/operator-service-account-rbac.yaml",children:"operator-service-account-rbac"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"the-request-signature-we-calculated-does-not-match-the-signature-you-provided-check-your-key-and-signing-method",children:"The request signature we calculated does not match the signature you provided. Check your key and signing method."}),"\n",(0,a.jsx)(n.p,{children:"\u540C\u6B65\u5230 S3 \u5F02\u5E38\u3002\u53EF\u80FD\u662F access_key \u9519\u8BEF\u3002"}),"\n",(0,a.jsx)(n.h2,{id:"server-side-encryption-specified-but-kms-is-not-configured",children:"Server side encryption specified but KMS is not configured"}),"\n",(0,a.jsx)(n.p,{children:"\u540C\u6B65\u5230 S3 \u5F02\u5E38\u3002\u53D6\u6D88\u53C2\u6570 logical_backup_s3_sse"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["wal-e \u9ED8\u8BA4\u5F00\u542F sse\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"\u65E0\u6CD5\u5173\u95ED"}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://github.com/wal-e/wal-e/issues/404",children:"wal-e/wal-e#404"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://github.com/wal-e/wal-e/pull/410",children:"wal-e/wal-e#410"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"cannot-perform-switch-over-before-re-creating-the-pod-no-replicas",children:"cannot perform switch over before re-creating the pod: no replicas"}),"\n",(0,a.jsx)(n.p,{children:"\u53EF\u80FD\u7531\u4E8E secret \u51B2\u7A81\u6216\u8005\u4E0D\u540C\u6B65\u5BFC\u81F4\u5F02\u5E38"}),"\n",(0,a.jsx)(n.h2,{id:"\u6E05\u7406\u5DF2\u5220\u9664\u96C6\u7FA4",children:"\u6E05\u7406\u5DF2\u5220\u9664\u96C6\u7FA4"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["operator \u53EF\u80FD\u4F1A\u5220\u9664 sts\uFF0C\u53EF\u80FD\u6709\u8D44\u6E90\u4E0D\u4F1A\u88AB\u5220\u9664\u3002\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"\u53D6\u51B3\u4E8E\u5220\u9664\u96C6\u7FA4\u65F6\u7684\u72B6\u6001\u3002"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"CLUSTER_NAME=acid-demo\n\nkubectl delete secret -l cluster-name=$CLUSTER_NAME\nkubectl delete pdb -l cluster-name=$CLUSTER_NAME\nkubectl delete svc -l cluster-name=$CLUSTER_NAME\nkubectl delete ep -l cluster-name=$CLUSTER_NAME\nkubectl delete pvc -l cluster-name=$CLUSTER_NAME\n"})}),"\n",(0,a.jsx)(n.h2,{id:"operator-ui-backup-\u9519\u8BEF",children:"operator-ui backup \u9519\u8BEF"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://github.com/zalando/postgres-operator/blob/master/ui/operator_ui/main.py#L73",children:"ui/operator_ui/main.py#L73"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"\u652F\u6301\u7684\u914D\u7F6E\u53C2\u6570"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://github.com/zalando/postgres-operator/issues/937",children:"#937"})}),"\n",(0,a.jsx)(n.li,{children:"operator ui helm \u4E0D\u652F\u6301\u81EA\u5B9A\u4E49 env - \u6BD4\u8F83\u9EBB\u70E6"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'# Minio \u73AF\u5883\u53D8\u91CF\u914D\u7F6E\n- name: "TARGET_NAMESPACE"\n  value: "*"\n- name: "AWS_ENDPOINT"\n  value: "http://minio-service:9000"\n- name: "AWS_ACCESS_KEY_ID"\n  value: "access"\n- name: "AWS_SECRET_ACCESS_KEY"\n  value: "secret"\n- name: "SPILO_S3_BACKUP_BUCKET"\n  value: "bucket-name"\n- name: "SPILO_S3_BACKUP_PREFIX"\n  value: "spilo/"\n- name: "WALE_S3_ENDPOINT"\n  value: "http+path://minio-service:9000\n'})}),"\n",(0,a.jsx)(n.h3,{id:"typeerror-expected-string-or-bytes-like-object",children:"TypeError: expected string or bytes-like object"}),"\n",(0,a.jsx)(n.p,{children:"\u53EF\u80FD\u662F\u56E0\u4E3A operator-ui \u6CA1\u6709\u914D\u7F6E S3 \u76F8\u5173\u73AF\u5883\u53D8\u91CF\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-log",children:'operator_ui.main ERROR    Exception on /stored_clusters [GET]\n          File "/usr/lib/python3.8/site-packages/botocore/handlers.py", line 205, in validate_bucket_name\n            if not VALID_BUCKET.search(bucket) and not VALID_S3_ARN.search(bucket):\n        TypeError: expected string or bytes-like object\n'})}),"\n",(0,a.jsx)(n.h3,{id:"oserror-errno-101-network-unreachable",children:"OSError: [Errno 101] Network unreachable"}),"\n",(0,a.jsx)(n.p,{children:"\u5E94\u8BE5\u662F S3 \u5730\u5740\u914D\u7F6E\u9519\u8BEF\u3002\u540C\u65F6\u914D\u7F6E AWS_ENDPOINT \u548C WALE_S3_ENDPOINT"}),"\n",(0,a.jsx)(n.p,{children:"\u6CE8\u610F WALE_S3_ENDPOINT schema \u662F https+path"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"WALE_S3_ENDPOINT=https+path://minio.example.com:443\n"})}),"\n",(0,a.jsx)(n.h3,{id:"no-snapshots-found",children:"No snapshots found"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"\u76EE\u524D\u65E0\u89E3\uFF0C\u9700\u8981\u4FEE\u6539\u6E90\u7801"}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://github.com/zalando/postgres-operator/issues/1365",children:"#1365"})}),"\n"]}),"\n",(0,a.jsx)(n.h1,{id:"\u5BB9\u5668\u5185\u5BB9",children:"\u5BB9\u5668\u5185\u5BB9"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["/home/postgres/\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["pgdata/\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["pgroot/\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["data/\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"pg_hba.conf"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"pg_hbaconf-rejects-connection-for-host",children:"pg_hba.conf rejects connection for host"}),"\n",(0,a.jsx)(n.h2,{id:"\u5176\u4ED6\u95EE\u9898",children:"\u5176\u4ED6\u95EE\u9898"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\u5F02\u5E38 resync \u91CD\u542F\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"\u65E5\u5FD7\u67E5\u770B resync \u539F\u56E0"}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://github.com/zalando/postgres-operator/issues/927",children:"#927"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"resync_period \u95F4\u9694\u91CD\u542F"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://github.com/zalando/postgres-operator/issues/1397",children:"#1397"})}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://github.com/zalando/postgres-operator/issues/1377",children:"#1377"})," Rolling restart/update at every sync cycle since v1.6.1\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["v1.6.1 \u6709\u95EE\u9898 - \u5DF2 fix ",(0,a.jsx)(n.a,{href:"https://github.com/zalando/postgres-operator/pull/1380",children:"#1380"})]}),"\n",(0,a.jsxs)(n.li,{children:["\u4FEE\u590D ",(0,a.jsx)(n.code,{children:"configKubernetes.additional_pod_capabilities=SYS_NICE"})]}),"\n",(0,a.jsx)(n.li,{children:"\u7A7A capabilities \u4F1A\u6DFB\u52A0 SYS_NICE\uFF0C\u5BFC\u81F4\u6BCF\u6B21\u540C\u6B65 security context \u90FD\u4E0D\u4E00\u81F4"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["pod_environment_secret \u76EE\u524D\u53EA\u6302\u8F7D\u5728\u4E86 operator \u4E0A\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"\u903B\u8F91\u5907\u4EFD\u65E0\u6CD5\u4F7F\u7528\u8BE5\u914D\u7F6E - cronjob, backup \u955C\u50CF"}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://github.com/zalando/postgres-operator/issues/1348",children:"#1348"})}),"\n",(0,a.jsx)(n.li,{children:"\u5728\u95EE\u9898\u4FEE\u590D\u4E4B\u524D\u53EA\u80FD\u4F7F\u7528 pod_environment_configmap"}),"\n"]}),"\n"]}),"\n"]})]})}function p(e={}){let{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},17776:function(e,n,s){s.d(n,{R:()=>o,x:()=>i});var r=s(7378);let a={},t=r.createContext(a);function o(e){let n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);