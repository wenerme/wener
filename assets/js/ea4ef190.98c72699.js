"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["95353"],{12478:function(e,t,n){n.r(t),n.d(t,{frontMatter:()=>i,toc:()=>p,default:()=>d,metadata:()=>a,assets:()=>o,contentTitle:()=>r});var a=JSON.parse('{"id":"os/linux/network/iptables-rule","title":"iptables \u89C4\u5219","description":"* \u53C2\u8003","source":"@site/../notes/os/linux/network/iptables-rule.md","sourceDirName":"os/linux/network","slug":"/os/linux/network/iptables-rule","permalink":"/notes/os/linux/network/iptables-rule","draft":false,"unlisted":false,"editUrl":"https://github.com/wenerme/wener/edit/master/notes/../notes/os/linux/network/iptables-rule.md","tags":[],"version":"current","lastUpdatedBy":"wener","lastUpdatedAt":1603205276000,"frontMatter":{"id":"iptables-rule","title":"iptables \u89C4\u5219"},"sidebar":"docs","previous":{"title":"iptables \u53C2\u8003","permalink":"/notes/os/linux/network/iptables-ref"},"next":{"title":"IPTables","permalink":"/notes/os/linux/network/iptables"}}'),s=n(86106),l=n(17776);let i={id:"iptables-rule",title:"iptables \u89C4\u5219"},r="iptables \u89C4\u5219",o={},p=[{value:"Multi WAN",id:"multi-wan",level:2}];function c(e){let t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"iptables-\u89C4\u5219",children:"iptables \u89C4\u5219"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\u53C2\u8003\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://making.pusher.com/per-ip-rate-limiting-with-iptables/",children:"Per-IP rate limiting with iptables"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"# %50 \u5305\u4E22\u5F03\n-A INPUT -i eth0 -m statistic --mode random --probability 0.5000 -j DROP\n\n# DOCKER\n# https://docs.docker.com/network/iptables/\n# \u4E0D\u5141\u8BB8 eth0 \u6D41\u91CF\u8BBF\u95EE docker \u66B4\u9732\u7684 443\n-I DOCKER-USER -i eth0 -p tcp -m tcp --dport 443 -j DROP\n# \u53EA\u5141\u8BB8 443 \u548C 80\n-I DOCKER-USER 1 -i eth0 -p tcp -m state --state NEW -m multiport ! --dports 443,80 -j DROP;\n\n# syn \u9650\u6D41\n-A INPUT -p tcp  --syn -m limit --limit 30/s --limit-burst 30 -j ACCEPT\n# \u4F7F\u7528 hashlimit \u4F1A\u66F4\u5408\u7406 - \u6BCF\u4E2A ip 15/s\n-A INPUT -p tcp --syn -m hashlimit --hashlimit 15/s --hashlimit-burst 30 --hashlimit-mode srcip --hashlimit-srcmask 32 --hashlimit-name synattack -j ACCEPT\n# \u9ED8\u8BA4\u4E22\u5F03\n-A INPUT -p tcp --syn -j DROP\n\n# \u7ACB\u5373 REJECT \u800C\u4E0D\u662F\u7B49\u5F85\u8D85\u65F6\n-A INPUT -p tcp -s 192.168.1.0/24 --dport 443 -j REJECT --reject-with tcp-reset\n\n# \u5982\u679C\u60F3\u8981\u9650\u5B9A forward \u89C4\u5219\uFF0C\u53EF\u4EE5\u5728\u6700\u540E\u6DFB\u52A0\u4E00\u4E2A accept \u6765\u5224\u65AD\u662F\u5426\u8FD8\u6709\u672A\u5141\u8BB8\u7684\n-A FORWARD  -j ACCEPT\n"})}),"\n",(0,s.jsx)(t.h2,{id:"multi-wan",children:"Multi WAN"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://unix.stackexchange.com/a/87999/47774",children:"https://unix.stackexchange.com/a/87999/47774"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://unix.stackexchange.com/a/71834/47774",children:"https://unix.stackexchange.com/a/71834/47774"})}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"# reset\niptables -t mangle -F\niptables -t mangle -X\n\n# fwmark\niptables -t mangle -A PREROUTING -j CONNMARK --restore-mark\n# \u5982\u679C\u672A\u8BBE\u7F6E\niptables -t mangle -A PREROUTING -m mark ! --mark 0 -j RETURN\niptables -t mangle -A PREROUTING -i wan      -j MARK --set-mark $MARK_CAVTEL\niptables -t mangle -A PREROUTING -i comcast  -j MARK --set-mark $MARK_COMCAST\niptables -t mangle -A PREROUTING -i vz-dsl   -j MARK --set-mark $MARK_VZDSL\n\niptables -t mangle -A POSTROUTING -o wan     -j MARK --set-mark $MARK_CAVTEL\niptables -t mangle -A POSTROUTING -o comcast -j MARK --set-mark $MARK_COMCAST\niptables -t mangle -A POSTROUTING -o vz-dsl  -j MARK --set-mark $MARK_VZDSL\niptables -t mangle -A POSTROUTING -j CONNMARK --save-mark\n\n##### NAT ######\niptables -t nat -F\niptables -t nat -X\nfor local in \xablist of internal IP/netmask combos\xbb; do\n    iptables -t nat -A POSTROUTING -s $local -o wan     -j SNAT --to-source \xabIP\xbb\n    iptables -t nat -A POSTROUTING -s $local -o comcast -j SNAT --to-source \xabIP\xbb\n    iptables -t nat -A POSTROUTING -s $local -o vz-dsl  -j SNAT --to-source \xabIP\xbb\ndone\n\n# this is an example of what the incoming traffic rules look like\nfor extip in \xablist of external IPs\xbb; do\n    iptables -t nat -A PREROUTING   -p tcp -d $extip --dport \xabport\xbb -j DNAT --to-destination \xabinternal-IP\xbb:443\ndone\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"ip rule flush\nip rule add from all               pref 1000  lookup main \nip rule add from A.B.C.D/29        pref 1500  lookup comcast # these IPs are the external ranges (we have multiple IPs on each connection)\nip rule add from E.F.G.H/29        pref 1501  lookup cavtel\nip rule add from I.J.K.L/31        pref 1502  lookup vzdsl\nip rule add from M.N.O.P/31        pref 1502  lookup vzdsl # yes, you can have multiple ranges\nip rule add fwmark $MARK_COMCAST   pref 2000  lookup comcast\nip rule add fwmark $MARK_CAVTEL    pref 2001  lookup cavtel\nip rule add fwmark $MARK_VZDSL     pref 2002  lookup vzdsl\nip rule add                        pref 2500  lookup comcast # the pref order here determines the default\u2014we default to Comcast.\nip rule add                        pref 2501  lookup cavtel\nip rule add                        pref 2502  lookup vzdsl\nip rule add                        pref 32767 lookup default\n"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"/etc/networking/interfaces"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"iface comcast inet static\n    address A.B.C.Q\n    netmask 255.255.255.248\n    up ip route add table comcast default via A.B.C.R dev comcast\n    down ip route flush table comcast\n"})})]})}function d(e={}){let{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},17776:function(e,t,n){n.d(t,{R:()=>i,x:()=>r});var a=n(7378);let s={},l=a.createContext(s);function i(e){let t=a.useContext(l);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(l.Provider,{value:t},e.children)}}}]);