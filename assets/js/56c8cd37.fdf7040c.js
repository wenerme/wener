"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["4977"],{33848:function(n,e,s){s.r(e),s.d(e,{frontMatter:()=>t,toc:()=>d,default:()=>u,metadata:()=>i,assets:()=>a,contentTitle:()=>c});var i=JSON.parse('{"id":"service/bi/cubejs/cubejs-schema","title":"CubeJS Schema","description":"- dimensions","source":"@site/../notes/service/bi/cubejs/cubejs-schema.md","sourceDirName":"service/bi/cubejs","slug":"/service/bi/cubejs/schema","permalink":"/notes/service/bi/cubejs/schema","draft":false,"unlisted":false,"editUrl":"https://github.com/wenerme/wener/edit/master/notes/../notes/service/bi/cubejs/cubejs-schema.md","tags":[],"version":"current","lastUpdatedBy":"wener","lastUpdatedAt":1702440128000,"frontMatter":{"title":"CubeJS Schema"},"sidebar":"docs","previous":{"title":"Modeling","permalink":"/notes/service/bi/cubejs/model"},"next":{"title":"cubestore","permalink":"/notes/service/bi/cubejs/store"}}'),r=s(86106),l=s(17776);let t={title:"CubeJS Schema"},c="CubeJS Schema",a={},d=[{value:"\u9884\u805A\u5408",id:"\u9884\u805A\u5408",level:2}];function o(n){let e={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"cubejs-schema",children:"CubeJS Schema"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["dimensions\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\u5355\u4E2A\u6570\u636E\u70B9\u7684 ",(0,r.jsx)(e.strong,{children:"\u5C5E\u6027"})]}),"\n",(0,r.jsx)(e.li,{children:"Time Dimension"}),"\n",(0,r.jsxs)(e.li,{children:["type:\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"time, string, number, boolean, geo"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["format:\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"imageUrl, link, currency, percent"}),"\n",(0,r.jsx)(e.li,{children:"id - \u907F\u514D\u9488\u5BF9 number \u52A0\u5206\u9694\u7B26"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["measures\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"set of data points"}),"\n",(0,r.jsxs)(e.li,{children:["type:\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"number - \u7528\u4E8E\u8BA1\u7B97 measure"}),"\n",(0,r.jsx)(e.li,{children:"count - \u4E0D\u9700\u8981\u5199 sql\uFF0C\u4E00\u822C\u4F1A\u914D\u5408\u4E0B\u94BB"}),"\n",(0,r.jsxs)(e.li,{children:["countDistinct - ",(0,r.jsx)(e.code,{children:"COUNT DISTINCT"})]}),"\n",(0,r.jsxs)(e.li,{children:["countDistinctApprox\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u80FD\u4F7F\u7528 rollup pre-aggregations"}),"\n",(0,r.jsx)(e.li,{children:"\u53EF\u80FD\u4F7F\u7528 HyperLogLog"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.li,{children:"sum, avg, min, max, runningTotal"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.li,{children:"format: percent, currency"}),"\n",(0,r.jsxs)(e.li,{children:["drillMembers:\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u4E0B\u94BB\u7EAC\u5EA6 - \u4F1A\u9ED8\u8BA4\u5305\u542B\u8FD9\u4E9B\u4E0B\u94BB\u5C5E\u6027"}),"\n",(0,r.jsx)(e.li,{children:"\u53EF\u7528\u4E8E\u6784\u5EFA\u66F4\u4E30\u5BCC\u7684\u5BA2\u6237\u7AEF"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["joins\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"relationship: belongsTo,hasMany,hasOne"}),"\n",(0,r.jsx)(e.li,{children:"sql"}),"\n",(0,r.jsxs)(e.li,{children:["\u5747\u4E3A LEFT JOIN\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\u901A\u8FC7 ",(0,r.jsx)(e.code,{children:"IS NOT NULL"})," \u8FBE\u5230 INNER JOIN"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["segments\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u9884\u5B9A\u4E49\u5728 schema \u4E2D\u7684\u8FC7\u6EE4\u6761\u4EF6"}),"\n",(0,r.jsx)(e.li,{children:"\u5EFA\u8BAE\u7528\u4E8E\u590D\u6742\u67E5\u8BE2\uFF0C\u7B80\u5355\u573A\u666F\u4F7F\u7528 filter"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["preAggregations\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u9884\u805A\u5408"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\u4E0A\u4E0B\u6587\u53D8\u91CF\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["FILTER_PARAMS - ",(0,r.jsx)(e.code,{children:"FILTER_PARAMS.<CUBE_NAME>.<FILTER_NAME>.filter(expression)"})]}),"\n",(0,r.jsxs)(e.li,{children:["SECURITY_CONTEXT\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u63A8\u8350\u5C3D\u91CF\u4F7F\u7528 queryRewrite"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["SQL_UTILS\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.code,{children:"convertTz('created_at')"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.li,{children:"COMPILE_CONTEXT - \u7F16\u8BD1\u4E0A\u4E0B\u6587"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["partition\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"rollup \u57FA\u4E8E\u5206\u7247"}),"\n",(0,r.jsx)(e.li,{children:"\u5206\u7247\u901A\u5E38\u662F\u65F6\u95F4\u7EAC\u5EA6"}),"\n",(0,r.jsx)(e.li,{children:"\u65F6\u95F4\u7EF4\u5EA6+\u65F6\u95F4\u7CBE\u5EA6\u4EA7\u751F\u4E0D\u540C\u7C92\u5EA6\u7684\u5206\u7247"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-js",children:"cube(`Users`, {\n  sql: `select * from public.users`,\n  title: `\u7528\u6237`,\n  description: '\u6240\u6709\u7684\u7CFB\u7EDF\u7528\u6237',\n  // extends: BaseEntity // \u7EE7\u627F\n  // sqlAlias: `usr`,\n\n  joins: {\n    // key \u5FC5\u9700\u4E3A Cube \u540D\u5B57\n    // \u610F\u5473\u7740\u76F8\u540C\u5173\u7CFB\u53EA\u80FD join \u4E00\u4E2A\uFF0C\u9664\u975E\u521B\u5EFA\u591A\u4E2A\u76F8\u540C cube\n    Teams: {\n      relationship: `belongsTo`,\n      sql: `${Users}.team_id = ${Teams}.id`,\n    },\n  },\n  segments: {\n    activitiedUsers: {\n      sql: `${CUBE}.state = 'activitied'`,\n    },\n  },\n  preAggregations: {\n    usersByStatus: {\n      // rollup - \u9ED8\u8BA4 - count, sum, min, max, countDistinctApprox\n      // originalSql - \u7279\u6B8A\u60C5\u51B5\u4F7F\u7528  - \u4F8B\u5982 \u6F0F\u6597\uFF0C\u5F88\u590D\u6742\u7684 SQL\n      // rollupJoin - \u652F\u6301 join\n      type: 'rollup',\n      dimensions: [CUBE.status],\n      measures: [CUBE.count],\n      timeDimension: CUBE.createdAt,\n      // hour, day, week, month, quarter, year\n      granularity: `day`,\n      segments: [CUBE.activitiedUsers],\n      // \u5206\u533A\u7C92\u5EA6\n      partitionGranularity: `month`,\n      // \u5237\u65B0 key\n      refreshKey: {\n        // \u65E0 sql \u9ED8\u8BA4 1 hour\n        // \u6709 sql \u9ED8\u8BA4 10 seconds\n        every: `1 day`,\n        // \u6574\u7406 rollup - \u9ED8\u8BA4 true\n        incremental: true,\n        // \u589E\u91CF\u7A97\u53E3\n        updateWindow: `7 day`,\n      },\n      useOriginalSqlPreAggregations: true,\n      // \u5B9A\u65F6\u5237\u65B0\n      scheduledRefresh: false,\n      // \u8303\u56F4\u5B9A\u4E49\n      buildRangeStart: {\n        sql: `SELECT NOW() - interval '300 day'`,\n      },\n      buildRangeEnd: {\n        sql: `SELECT NOW()`,\n      },\n      //\n      indexes: {\n        categoryIndex: {\n          columns: [CUBE.category],\n        },\n        timestampIndex: {\n          columns: ['timestamp'],\n        },\n      },\n    },\n    // rollup join\n    usersRollup: {\n      type: 'rollupJoin',\n      dimensions: [Teams.teamsRollup, CUBE.usersByStatus],\n    },\n    // sql\n    main: {\n      type: `originalSql`,\n    },\n  },\n  measures: {\n    count: {\n      sql: `id`,\n      type: `count`,\n      title: '\u603B\u6570',\n      description: '\u7528\u6237\u6570\u91CF',\n      shown: true, // \u662F\u5426\u53EF\u89C1\n      // \u81EA\u5B9A\u4E49\u8FC7\u6EE4\u67E5\u8BE2\n      filters: [{ sql: `${CUBE}.status = 'activited'` }],\n      // \u6EDA\u52A8\u7A97\u53E3\n      rollingWindow: {\n        // (-?\\d+) (minute|hour|day|week|month|year)\n        // unbounded\n        trailing: `1 month`,\n        leading: '',\n        offset: '', // start|end\n      },\n      // \u4E0B\u94BB\u7EAC\u5EA6\n      drillMembers: [id, status, Products.name, Users.email],\n      // \u4F20\u9012\u5230\u524D\u7AEF\u7684\u81EA\u5B9A\u4E49\u4FE1\u606F\n      meta: {\n        any: 'value',\n      },\n    },\n\n    payingCount: {\n      sql: `id`,\n      type: `count`,\n      filters: [{ sql: `${CUBE}.paying = 'true'` }],\n    },\n\n    payingPercentage: {\n      // \u8BA1\u7B97\u503C\n      sql: `100.0 * ${payingCount} / ${count}`,\n      type: `number`,\n      format: `percent`,\n    },\n\n    // \u5F15\u7528 subquery\n    averageTeamsScore: {\n      sql: `${teamsScore}`,\n      type: `avg`,\n    },\n  },\n  // \u7EAC\u5EA6\n  dimensions: {\n    id: {\n      sql: `id`,\n      type: `string`,\n      // \u4F1A\u7528\u4E8E\u53BB\u91CD\uFF0Cjoin\n      // shown \u4F1A\u9ED8\u8BA4\u4E3A false\n      primaryKey: true,\n    },\n    age: {\n      sql: 'age',\n      type: 'number',\n      title: '\u5E74\u9F84',\n      description: '\u7528\u6237\u6D3B\u4E86\u51E0\u591A\u5E74',\n      shown: true,\n      case: {\n        when: [\n          { sql: `${CUBE}.age < 2`, label: `baby` },\n          { sql: `${CUBE}.age < 18`, label: `young` },\n          { sql: `${CUBE}.age < 60`, label: { sql: `${CUBE}.job` } }, // label \u4E5F\u53EF\u4EE5\u5F15\u7528\n        ],\n        else: { label: `\u8001\u4EBA` },\n      },\n      meta: {\n        any: 'value',\n      },\n    },\n\n    // \u65F6\u95F4\u7EF4\u5EA6\n    createdAt: {\n      sql: `created_at`,\n      type: `time`,\n    },\n\n    completedAt: {\n      sql: `completed_at`,\n      type: `time`,\n    },\n    // \u5B50\u67E5\u8BE2\n    // - \u5FC5\u9700\u5148\u5B9A\u4E49 join\n    // - \u5F15\u7528 measure\n    teamsScore: {\n      sql: `${Teams.score}`,\n      type: `number`,\n      subQuery: true, // \u58F0\u660E\u5B50\u67E5\u8BE2\n      propagateFiltersToSubQuery: true, //  \u4F20\u9012\u67E5\u8BE2\u5230\u5B50\u67E5\u8BE2\n    },\n  },\n\n  // SQL \u751F\u6210\u540E\u662F\u5426\u5141\u8BB8 cube \u91CD\u5199\u67E5\u8BE2 - \u53EF\u8FDB\u884C\u4E00\u5B9A\u4F18\u5316\n  rewriteQueries: false,\n  // \u7F13\u5B58\u5237\u65B0 key\n  refreshKey: {\n    // 1. evert interval\n    every: '2 minute', // \u9ED8\u8BA4 BigQuery, Athena, Snowflake, Presto\n    every: '10 second', // \u5176\u4ED6 DB \u9ED8\u8BA4\n    // 2. \u81EA\u5B9A\u4E49\n    sql: `SELECT MAX(update_at) FROM users`,\n    // 3. corn\n    every: '30 5 * * 5',\n    timezone: 'Asia/Shanghai',\n  },\n  // \u6570\u636E\u6E90\n  dataSource: `default`,\n});\n\n// \u62BD\u8C61 Cube - \u7528\u4E8E extends\nconst Users = cube({\n  sql: `select * from users`,\n\n  dimensions: {\n    // primary key,\n    name: {\n      sql: `${CUBE}.name`,\n      type: `string`,\n    },\n  },\n});\n\ncube(`BaseEvents`, {\n  sql: `select * from events`,\n});\n\n// \u7EE7\u627F sql, joins, measures, dimensions\ncube(`PageViews`, {\n  sql: `select * from page_views`,\n  extends: BaseEvents,\n\n  dimensions: {\n    pagePath: {\n      sql: `page_path`,\n      type: `string`,\n    },\n  },\n});\n\n// Data Blending/\u6570\u636E\u6DF7\u5408 - \u878D\u5408\u591A\u7EC4\u6570\u636E\ncube(`AllSales`, {\n  sql: `\nSELECT\n  amount,\n  user_id AS customer_id,\n  created_at,\n  'OnlineOrders' AS row_type\nFROM ${OnlineOrders.sql()}\nUNION ALL\nSELECT\n  amount,\n  customer_id,\n  created_at,\n  'Orders' AS row_type\nFROM ${RetailOrders.sql()}\n `,\n});\n"})}),"\n",(0,r.jsx)(e.h2,{id:"\u9884\u805A\u5408",children:"\u9884\u805A\u5408"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["additive rollup\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"count, sum, min, max, countDistinctApprox"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"https://en.wikipedia.org/wiki/OLAP_cube",children:"https://en.wikipedia.org/wiki/OLAP_cube"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"https://en.wikipedia.org/wiki/Aggregate_function",children:"https://en.wikipedia.org/wiki/Aggregate_function"})}),"\n",(0,r.jsx)(e.li,{children:"CUBEJS_ROLLUP_ONLY - \u8981\u6C42\u6240\u6709\u8BF7\u6C42\u90FD\u8D70\u9884\u805A\u5408"}),"\n",(0,r.jsxs)(e.li,{children:["\u805A\u5408\u8868\u540D - ",(0,r.jsx)(e.code,{children:"<CUBE>_<ROLLUP><date partation>_23jnqarg_uiyfxd0f_1gifflf"})]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-js",children:"cube(`Users`, {\n  preAggregations: {\n    main: {\n      measures: [CUBE.count],\n      refreshKey: {\n        every: `1 hour`,\n        incremental: true,\n        updateWindow: `7 day`,\n      },\n    },\n  },\n});\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-ini",metastring:'title="external db"',children:"CUBEJS_EXT_DB_HOST=YOUR_DB_HOST_HERE\nCUBEJS_EXT_DB_PORT=YOUR_DB_PORT_HERE\nCUBEJS_EXT_DB_NAME=YOUR_DB_NAME_HERE\nCUBEJS_EXT_DB_USER=YOUR_DB_USER_HERE\nCUBEJS_EXT_DB_PASS=YOUR_DB_PASS_HERE\nCUBEJS_EXT_DB_TYPE=SUPPORTED_DB_TYPE_HERE\n"})})]})}function u(n={}){let{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(o,{...n})}):o(n)}},17776:function(n,e,s){s.d(e,{R:()=>t,x:()=>c});var i=s(7378);let r={},l=i.createContext(r);function t(n){let e=i.useContext(l);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:t(n.components),i.createElement(l.Provider,{value:e},n.children)}}}]);