"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["45176"],{71661:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>l,toc:()=>o,default:()=>h,metadata:()=>r,assets:()=>c,contentTitle:()=>d});var r=JSON.parse('{"id":"service/password/bitwarden","title":"bitwarden","description":"- bitwarden","source":"@site/../notes/service/password/bitwarden.md","sourceDirName":"service/password","slug":"/service/password/bitwarden","permalink":"/notes/service/password/bitwarden","draft":false,"unlisted":false,"editUrl":"https://github.com/wenerme/wener/edit/master/notes/../notes/service/password/bitwarden.md","tags":[],"version":"current","lastUpdatedBy":"wener","lastUpdatedAt":1737815601000,"frontMatter":{"title":"bitwarden"},"sidebar":"docs","previous":{"title":"\u5BC6\u7801\u7BA1\u7406","permalink":"/notes/service/password/"},"next":{"title":"vaultwarden","permalink":"/notes/service/password/vaultwarden"}}'),i=t(86106),s=t(17776);let l={title:"bitwarden"},d="bitwarden",c={},o=[{value:"cli",id:"cli",level:2}];function a(e){let n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"bitwarden",children:"bitwarden"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["bitwarden\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u5BC6\u7801\u7BA1\u7406\u5668"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/bitwarden/clients",children:"bitwarden/clients"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"GPL-3.0, TypeScript"}),"\n",(0,i.jsx)(n.li,{children:"\u53EA\u652F\u6301\u4E00\u4E2A\u8D26\u53F7"}),"\n",(0,i.jsx)(n.li,{children:"web, browser extension, desktop, cli"}),"\n",(0,i.jsx)(n.li,{children:"cli - NodeJS"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/bitwarden/directory-connector",children:"bitwarden/directory-connector"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"bitwarden <-> AD, LDAP, Azure, G Suite, Okta"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/bitwarden/server",children:"bitwarden/server"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"AGPLv3.0, Bitwarden License v1.0, C#"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/bitwarden/mobile",children:"bitwarden/mobile"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"GPLv3, C#"}),"\n",(0,i.jsx)(n.li,{children:"Xamarin Android, Xamarin iOS, Xamarin Forms"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"passkey"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"cli",children:"cli"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm install -g @bitwarden/cli\n\n# for Self-hosted\nbw config server https://vault.bitwarden.com\nbw login\n\nbw status\n\n# items, folders, collections, org-collections, org-members, organizations\nbw list organizations --pretty\n\n# local web API\n# https://bitwarden.com/help/vault-management-api/\n# --disable-origin-protection\nbw serve --port 8087\n\nbw list items | jq '.[] | select(.name==\"my-secret\")'\n\nITEM_ID=$(bw list items | jq '.[] | select(.name==\"my-secret\") | .id' | tr -d '\"')\nbw get item $ITEM_ID --pretty\nbw get item $ITEM_ID | jq '.notes=\"TEST\"' | bw encode | bw edit item $ITEM_ID\nbw get item $ITEM_ID | jq --argfile content ./notes.txt '.notes = $content' | bw encode | bw edit item $ITEM_ID\n\n"})}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Environment Variable"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"BITWARDENCLI_APPDATA_DIR"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"BITWARDENCLI_DEBUG"}),(0,i.jsx)(n.td,{children:"debug"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"BW_CLIENTID"}),(0,i.jsx)(n.td,{children:"client_id"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"BW_CLIENTSECRET"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"BW_SESSION"}),(0,i.jsx)(n.td,{children:"for unlock"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"BW_PASSWORD"}),(0,i.jsx)(n.td,{children:"--passwordenv"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"NODE_EXTRA_CA_CERTS"}),(0,i.jsx)(n.td,{children:"for self-signed certificate"})]})]})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["object\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"item"}),"\n",(0,i.jsx)(n.li,{children:"username"}),"\n",(0,i.jsx)(n.li,{children:"password"}),"\n",(0,i.jsx)(n.li,{children:"uri"}),"\n",(0,i.jsx)(n.li,{children:"totp"}),"\n",(0,i.jsx)(n.li,{children:"exposed"}),"\n",(0,i.jsx)(n.li,{children:"attachment"}),"\n",(0,i.jsx)(n.li,{children:"folder"}),"\n",(0,i.jsx)(n.li,{children:"collection"}),"\n",(0,i.jsx)(n.li,{children:"organization"}),"\n",(0,i.jsx)(n.li,{children:"org-collection"}),"\n",(0,i.jsx)(n.li,{children:"template"}),"\n",(0,i.jsx)(n.li,{children:"fingerprint"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://bitwarden.com/help/cli/",children:"https://bitwarden.com/help/cli/"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/bitwarden/clients/releases",children:"https://github.com/bitwarden/clients/releases"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:'# backupVaults.sh\necho "Logging into vault"\nexport CODE="$(bash /backups/_internal/decode.sh "$(< /backups/_internal/encoded-credentials.txt)")" # I use a custom openssl scripts to decode my encoded vault password\nexport BW_SESSION=$(bw unlock --passwordenv CODE --raw $1)\nunset CODE\n\necho "Removing leftover exports"\nrm bitwarden_org_export*.json\nrm bitwarden_org_export*.enc\n\necho "Backing up org: Primary"\nbw export --organizationid 93601111-af11-4fd4-8307-06dc2a11a9cf --format json\nbash /backups/_internal/encryptFile.sh bitwarden_org_export*.json $MY_SECRET # custom openssl script to encode the unencrypted json with MY_SECRET\nrm bitwarden_org_export*.json\nmv bitwarden_org_export*.enc /backups/primary\n\n# repeat for all orgs...\n\necho "Clearing session token"\nunset BW_SESSION\necho "Done"\n'})})]})}function h(e={}){let{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},17776:function(e,n,t){t.d(n,{R:()=>l,x:()=>d});var r=t(7378);let i={},s=r.createContext(i);function l(e){let n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);