"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["25605"],{50062:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>r,toc:()=>o,default:()=>d,metadata:()=>a,assets:()=>c,contentTitle:()=>i});var a=JSON.parse('{"id":"service/forge/gitlab/gitlab-k8s","title":"GitLab K8S \u96C6\u6210","description":"Kubernetes Agent","source":"@site/../notes/service/forge/gitlab/gitlab-k8s.md","sourceDirName":"service/forge/gitlab","slug":"/service/forge/gitlab/k8s","permalink":"/notes/service/forge/gitlab/k8s","draft":false,"unlisted":false,"editUrl":"https://github.com/wenerme/wener/edit/master/notes/../notes/service/forge/gitlab/gitlab-k8s.md","tags":[],"version":"current","lastUpdatedBy":"wener","lastUpdatedAt":1672817159000,"frontMatter":{"title":"GitLab K8S \u96C6\u6210"},"sidebar":"docs","previous":{"title":"Gitlab Get Started","permalink":"/notes/service/forge/gitlab/get-started"},"next":{"title":"Gitlab Repository","permalink":"/notes/service/forge/gitlab/repo"}}'),s=t(86106),l=t(17776);let r={title:"GitLab K8S \u96C6\u6210"},i="GitLab K8S",c={},o=[{value:"Kubernetes Agent",id:"kubernetes-agent",level:2},{value:"\u5B89\u88C5",id:"\u5B89\u88C5",level:3},{value:"Gitlab Managed",id:"gitlab-managed",level:2},{value:"\u5B89\u88C5\u53C2\u6570",id:"\u5B89\u88C5\u53C2\u6570",level:3},{value:"FAQ",id:"faq",level:2},{value:"\u5E38\u89C1\u5B89\u88C5\u95EE\u9898",id:"\u5E38\u89C1\u5B89\u88C5\u95EE\u9898",level:3},{value:"Error: Could not get apiVersions from Kubernetes: unable to retrieve the complete list of server APIs: custom.metrics.k8s.io/v1beta1: the server is currently unable to handle the request",id:"error-could-not-get-apiversions-from-kubernetes-unable-to-retrieve-the-complete-list-of-server-apis-custommetricsk8siov1beta1-the-server-is-currently-unable-to-handle-the-request",level:4},{value:"Containers with unready status: [autoscaler] / Containers with unready status: [activator]",id:"containers-with-unready-status-autoscaler--containers-with-unready-status-activator",level:4},{value:"Neither --kubeconfig nor --master was specified. Using the inClusterConfig. This might not work.",id:"neither---kubeconfig-nor---master-was-specified-using-the-inclusterconfig-this-might-not-work",level:4},{value:"pod is not yet backed by activator, cannot scale to zero",id:"pod-is-not-yet-backed-by-activator-cannot-scale-to-zero",level:4},{value:"Ingress \u548C Knative Endpoint \u4E00\u76F4\u7B49\u5F85",id:"ingress-\u548C-knative-endpoint-\u4E00\u76F4\u7B49\u5F85",level:3},{value:"\u5220\u9664\u96C6\u6210",id:"\u5220\u9664\u96C6\u6210",level:3},{value:"\u624B\u52A8\u5B89\u88C5 Helm",id:"\u624B\u52A8\u5B89\u88C5-helm",level:3},{value:"install-helm",id:"install-helm",level:3},{value:"uninstall-helm",id:"uninstall-helm",level:3},{value:"install-knative",id:"install-knative",level:3},{value:"install-prometheus",id:"install-prometheus",level:3},{value:"node pages",id:"node-pages",level:2}];function m(e){let n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",del:"del",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"gitlab-k8s",children:"GitLab K8S"})}),"\n",(0,s.jsx)(n.h2,{id:"kubernetes-agent",children:"Kubernetes Agent"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://gitlab.com/gitlab-org/cluster-integration/gitlab-agent",children:"gitlab-agent"})}),"\n",(0,s.jsx)(n.li,{children:"14.5 \u57FA\u7840 free"}),"\n",(0,s.jsx)(n.li,{children:"\u652F\u6301\u6700\u8FD1\u4E09\u4E2A\u7248\u672C"}),"\n",(0,s.jsx)(n.li,{children:"GitLab.com wss://kas.gitlab.com"}),"\n",(0,s.jsxs)(n.li,{children:["Pull based, \u57FA\u4E8E ",(0,s.jsx)(n.a,{href:"https://github.com/argoproj/gitops-engine",children:"argoproj/gitops-engine"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"\u5B89\u88C5",children:"\u5B89\u88C5"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u4ED3\u5E93\u4E2D\u6DFB\u52A0\u914D\u7F6E ",(0,s.jsx)(n.code,{children:".gitlab/agents/<agent-name>/config.yaml"})]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"gitops:\n  manifest_projects:\n    # The `id` is the path to the Git repository holding your manifest files\n    - id: 'path/to/your-manifest-project-1'\n      paths:\n        - glob: '/**/*.{yaml,yml,json}'\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"helm repo add gitlab https://charts.gitlab.io\nhelm repo update\nhelm upgrade --install wenlab-agent gitlab/gitlab-agent \\\n    --namespace gitlab-agent-wenlab-agent \\\n    --create-namespace \\\n    --set image.tag=v15.7.0 \\\n    --set config.token=$TOKEN \\\n    --set config.kasAddress=wss://kas.gitlab.com\n"})}),"\n",(0,s.jsx)(n.h2,{id:"gitlab-managed",children:"Gitlab Managed"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"\u5DF2\u7ECF\u5E9F\u5F03"}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u96C6\u6210 Helm 3\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.del,{children:[(0,s.jsx)(n.a,{href:"https://gitlab.com/gitlab-org/gitlab/issues/29037",children:"#29037"})," - Remove use of tiller from Kubernetes integration (Helm v3)"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u4E0D\u5728\u76F4\u63A5\u4F7F\u7528 Helm"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://gitlab.com/groups/gitlab-org/charts/-/epics/1",children:"Support Helm 3"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://gitlab.com/gitlab-org/charts/gitlab/-/issues/2121",children:"#2121"})," KOTS \u96C6\u6210"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\u90E8\u7F72\u5230 istio ",(0,s.jsx)(n.a,{href:"https://gitlab.com/gitlab-org/charts/gitlab/issues/743",children:"gitlab-org/charts#743"})]}),"\n",(0,s.jsxs)(n.li,{children:["\u4F7F\u7528\u73B0\u6709\u7684 Knative ",(0,s.jsx)(n.a,{href:"https://gitlab.com/gitlab-org/gitlab-foss/merge_requests/27173",children:"#27173"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://gitlab.com/gitlab-org/gitlab/issues/20556",children:"#41614"})," - Kubernetes cluster integration shall only install Helm Tiller or Ingress if not available already\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u5982\u679C\u96C6\u7FA4\u91CC\u5DF2\u7ECF\u6709 Tiller \u518D\u6B21\u5B89\u88C5\u4F1A\u6709\u95EE\u9898"}),"\n"]}),"\n"]}),"\n"]})}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"k8s \u7A7A\u95F4\u4E3A gitlab-managed-apps"}),"\n",(0,s.jsx)(n.li,{children:"helmv2 \u5B89\u88C5 tiller \u9700\u8981\u4FEE\u6539\u955C\u50CF - \u9ED8\u8BA4\u662F gcr.io"}),"\n",(0,s.jsx)(n.li,{children:"\u5B89\u88C5\u5668\u662F\u4F7F\u7528\u7684 registry.gitlab.com/gitlab-org/cluster-integration \u4E0B\u9762\u7684\u955C\u50CF"}),"\n",(0,s.jsx)(n.li,{children:"\u9700\u8981\u5916\u7F51\u80FD\u8BBF\u95EE - agent \u4E0D\u9700\u8981"}),"\n"]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# \u4FEE\u6539 namespace \u4E3A gitlab-managed-apps\nkubectl config set-context --current --namespace=gitlab-managed-apps\n\n# tiller \u53EF\u80FD\u4F1A\u90E8\u7F72\u5931\u8D25 - \u5982\u679C\u6CA1\u6709\u4FEE\u6539\u8FC7\u955C\u50CF - \u9ED8\u8BA4\u662F gcr \u955C\u50CF - \u53EF\u4EE5\u8003\u8651\u4FEE\u6539\u955C\u50CF\nkubectl edit $(kubectl get pods -o name | grep tiller-deploy)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"\u5B89\u88C5\u53C2\u6570",children:"\u5B89\u88C5\u53C2\u6570"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# \u62F7\u8D1D API - sed \u7528\u4E8E\u79FB\u9664\u989C\u8272\nkubectl cluster-info | grep 'Kubernetes master' | awk '/http/ {print $NF}' | sed -r \"s/\\x1B\\[([0-9]{1,2}(;[0-9]{1,2})?)?[mGK]//g\" | pbcopy\n# \u62F7\u8D1D CA Cert\nkubectl get secret default-token-gt956  -o jsonpath=\"{['data']['ca\\.crt']}\" | base64 --decode | pbcopy\n# \u521B\u5EFA\u8D26\u53F7\nkubectl apply -f- <<YAML\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: gitlab-admin\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: gitlab-admin\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n- kind: ServiceAccount\n  name: gitlab-admin\n  namespace: kube-system\nYAML\n\n# \u62F7\u8D1D Token\nkubectl -n kube-system get secret $(kubectl -n kube-system get secret | grep gitlab-admin-token | awk '{print $1}') -o jsonpath='{.data.token}' | base64 --decode | pbcopy\n"})}),"\n",(0,s.jsx)(n.h2,{id:"faq",children:"FAQ"}),"\n",(0,s.jsx)(n.h3,{id:"\u5E38\u89C1\u5B89\u88C5\u95EE\u9898",children:"\u5E38\u89C1\u5B89\u88C5\u95EE\u9898"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Helm \u5B89\u88C5\u5931\u8D25\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\u7ED9 default \u7A7A\u95F4\u53BB\u6389 istio \u6CE8\u5165\u6807\u7B7E"})," - ",(0,s.jsx)(n.code,{children:"istio-injection"})]}),"\n",(0,s.jsxs)(n.li,{children:["\u5B89\u88C5\u5931\u8D25 ",(0,s.jsx)(n.a,{href:"https://gitlab.com/gitlab-org/cluster-integration/helm-install-image/issues/3",children:"cluster-integration/helm-install-image#3"})," - is not a valid chart repository or cannot be reached"]}),"\n",(0,s.jsxs)(n.li,{children:["epics ",(0,s.jsx)(n.a,{href:"https://gitlab.com/groups/gitlab-org/-/epics/1202#note_163944373",children:"#1202"})," - Make all GitLab K8s/Auto DevOps/Serverless features compatible with Cloud Run"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# hostname \u4E3A install/uninstall-\u670D\u52A1\u540D\n# \u8BC1\u4E66\u548C\u914D\u7F6E\u76EE\u5F55\ncd /data/helm/$(hostname|cut -d- -f2)/config\n# \u9A8C\u8BC1 helm \u662F\u901A\u7684\nhelm version --tls --tls-ca-cert ca.pem --tls-cert cert.pem --tls-key\n key.pem\n"})}),"\n",(0,s.jsx)(n.h4,{id:"error-could-not-get-apiversions-from-kubernetes-unable-to-retrieve-the-complete-list-of-server-apis-custommetricsk8siov1beta1-the-server-is-currently-unable-to-handle-the-request",children:"Error: Could not get apiVersions from Kubernetes: unable to retrieve the complete list of server APIs: custom.metrics.k8s.io/v1beta1: the server is currently unable to handle the request"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# API \u5F02\u5E38\nkubectl get apiservice\n# v1beta1.custom.metrics.k8s.io               knative-serving/autoscaler          False (MissingEndpoints)   13h\n\nkubectl get apiservice v1beta1.custom.metrics.k8s.io -o yaml\n# endpoints for service/autoscaler in "knative-serving" have no addresses with port name "custom-metrics"\n\n# \u5C06\u8BE5 api \u5220\u9664\u540E\u518D\u4ECE\u65B0\u64CD\u4F5C\u5373\u53EF\nkubectl delete apiservice v1beta1.custom.metrics.k8s.io\n'})}),"\n",(0,s.jsx)(n.h4,{id:"containers-with-unready-status-autoscaler--containers-with-unready-status-activator",children:"Containers with unready status: [autoscaler] / Containers with unready status: [activator]"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/knative/serving/issues/4407",children:"knative/serving#4407"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# \u4F1A\u53D1\u73B0 autoscaler \u548C activator \u72B6\u6001\u4E0D\u6B63\u5E38\nkubectl -n knative-serving get pods\n\npod=$(kubectl -n knative-serving get pods -o name | grep autoscaler- | head -1)\n\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"activator"})," \u9519\u8BEF\u4FE1\u606F"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u5E94\u8BE5\u662F\u4E0E autoscaler \u5EFA\u7ACB websoket \u5931\u8D25"}),"\n",(0,s.jsx)(n.li,{children:"\u5982\u679C autoscaler \u5931\u8D25\u90A3\u4E48 activator \u4E5F\u4F1A\u5931\u8D25"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "level": "error",\n  "ts": "2019-11-30T06:15:36.850Z",\n  "logger": "activator",\n  "caller": "websocket/connection.go:158",\n  "msg": "Failed to send ping message",\n  "knative.dev/controller": "activator",\n  "error": "connection has not yet been established",\n  "stacktrace": "github.com/knative/serving/vendor/github.com/knative/pkg/websocket.NewDurableConnection.func3\\n\\t/home/prow/go/src/github.com/knative/serving/vendor/github.com/knative/pkg/websocket/connection.go:158"\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"neither---kubeconfig-nor---master-was-specified-using-the-inclusterconfig-this-might-not-work",children:"Neither --kubeconfig nor --master was specified. Using the inClusterConfig. This might not work."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"knative \u5BB9\u5668\u542F\u52A8\u7684\u65F6\u5019\u53EF\u80FD\u6709\u8FD9\u4E2A\u5F02\u5E38\u4FE1\u606F"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pod-is-not-yet-backed-by-activator-cannot-scale-to-zero",children:"pod is not yet backed by activator, cannot scale to zero"}),"\n",(0,s.jsx)(n.h3,{id:"ingress-\u548C-knative-endpoint-\u4E00\u76F4\u7B49\u5F85",children:"Ingress \u548C Knative Endpoint \u4E00\u76F4\u7B49\u5F85"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u662F\u56E0\u4E3A LoadBalancer \u6CA1\u6709\u83B7\u53D6\u5230 IP"}),"\n",(0,s.jsx)(n.li,{children:"\u5982\u679C\u662F\u79C1\u6709\u96C6\u7FA4\uFF0C\u9700\u8981\u8003\u8651\u4F7F\u7528 metallb \u6765\u5B9E\u73B0 LoadBalancer \u63A7\u5236\u5668"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# gitlab knative\nkubectl get service --namespace=gitlab-managed-apps ingress-nginx-ingress-controller -o jsonpath='{.status.loadBalancer.ingress[0].ip}'\n\n# istio/knative\nkubectl get svc --namespace=istio-system knative-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].ip}'\n\n# all\nkubectl get svc --all-namespaces -o jsonpath='{range.items[?(@.status.loadBalancer.ingress)]}{.status.loadBalancer.ingress[*].ip}'\n"})}),"\n",(0,s.jsx)(n.h3,{id:"\u5220\u9664\u96C6\u6210",children:"\u5220\u9664\u96C6\u6210"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# \u79FB\u9664\u7A7A\u95F4\nkubectl delete all --all -n gitlab-managed-apps\n# \u5220\u9664\u8D26\u53F7\nkubectl delete sa gitlab gitlab-admin -n kube-system\nkubectl delete ClusterRoleBinding gitlab-admin\n# \u5220\u9664 Token\n# kubectl delete Secret gitlab-token\n\n# tiller\nkubectl delete sa tiller -n kube-system\nkubectl delete ClusterRoleBinding tiller-admin\n"})}),"\n",(0,s.jsx)(n.h3,{id:"\u624B\u52A8\u5B89\u88C5-helm",children:"\u624B\u52A8\u5B89\u88C5 Helm"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'export TILLER_NAMESPACE=gitlab-managed-apps\nexport HELM_VERSION=2.16.1\n# \u5BFC\u51FA\u8BC1\u4E66\nmkdir gitlab-tiller\nfor i in ca cert key; do kubectl -n gitlab-managed-apps get cm values-content-configuration-helm -o jsonpath="{.data.$i\\.pem}" > gitlab-tiller/$i.pem ;done\n\n# \u521B\u5EFA\u8D26\u53F7\nkubectl -n gitlab-managed-apps create serviceaccount tiller\n# \u7ED1\u5B9A\u6743\u9650\nkubectl create clusterrolebinding tiller-admin \\\n  --clusterrole=cluster-admin \\\n  --serviceaccount=gitlab-managed-apps:tiller\n\n# \u624B\u52A8\u5B89\u88C5\nhelm init --tiller-tls --tiller-tls-verify --tls-ca-cert gitlab-tiller/ca.pem --tiller-tls-cert gitlab-tiller/cert.pem --tiller-tls-key gitlab-tiller/key.pem --service-account tiller\n# \u7A7A\u95F4\u4E0B helm \u76F8\u5173\u8D44\u6E90\nkubectl get all -l app=helm\n# \u9A8C\u8BC1\nhelm version --tls --tls-verify --tls-ca-cert gitlab-tiller/ca.pem --tls-cert gitlab-tiller/cert.pem --tls-key gitlab-tiller/key.pem\n\n# \u5B89\u88C5\u540E tiller-deploy \u7684\u8BC1\u4E66\u4F4D\u4E8E /etc/certs\n# /helm version --tls --tls-verify --tls-ca-cert /etc/certs/ca.crt --tls-cert /etc/certs/tls.crt --tls-key /etc/certs/tls.key --host\n\n# \u5220\u9664 Helm \u76F8\u5173\u8D44\u6E90\nkubectl delete all -l app=helm\n'})}),"\n",(0,s.jsx)(n.h3,{id:"install-helm",children:"install-helm"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://gitlab.com/gitlab-org/cluster-integration/helm-install-image",children:"cluster-integration/helm-install-image"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"set -xeo pipefail\nhelm init --tiller-tls --tiller-tls-verify --tls-ca-cert /data/helm/helm/config/ca.pem --tiller-tls-cert /data/helm/helm/config/cert.pem --tiller-tls-key /data/helm/helm/config/key.pem --service-account tiller\n"})}),"\n",(0,s.jsx)(n.h3,{id:"uninstall-helm",children:"uninstall-helm"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"set -xeo pipefail\nhelm reset --tls --tls-ca-cert /data/helm/helm/config/ca.pem --tls-cert /data/helm/helm/config/cert.pem --tls-key /data/helm/helm/config/key.pem\nkubectl delete replicaset -n gitlab-managed-apps -l name\\=tiller\nkubectl delete clusterrolebinding tiller-admin\n"})}),"\n",(0,s.jsx)(n.h3,{id:"install-knative",children:"install-knative"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'set -xeo pipefail\nhelm init --upgrade\nfor i in $(seq 1 30); do helm version --tls --tls-ca-cert /data/helm/knative/config/ca.pem --tls-cert /data/helm/knative/config/cert.pem --tls-key /data/helm/knative/config/key.pem && s=0 && break || s=$?; sleep 1s; echo "Retrying ($i)..."; done; (exit $s)\nhelm repo add knative https://storage.googleapis.com/triggermesh-charts\nhelm repo update\nhelm upgrade knative knative/knative --install --reset-values --tls --tls-ca-cert /data/helm/knative/config/ca.pem --tls-cert /data/helm/knative/config/cert.pem --tls-key /data/helm/knative/config/key.pem --version 0.7.0 --set rbac.create\\=true,rbac.enabled\\=true --namespace gitlab-managed-apps -f /data/helm/knative/config/values.yaml\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"value.yaml"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"domain: knative.wener.me\n"})}),"\n",(0,s.jsx)(n.h3,{id:"install-prometheus",children:"install-prometheus"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'set -xeo pipefail\nhelm init --upgrade\nfor i in $(seq 1 30); do helm version --tls --tls-ca-cert /data/helm/prometheus/config/ca.pem --tls-cert /data/helm/prometheus/config/cert.pem --tls-key /data/helm/prometheus/config/key.pem && s=0 && break || s=$?; sleep 1s; echo "Retrying ($i)..."; done; (exit $s)\nhelm repo update\nhelm upgrade prometheus stable/prometheus --install --reset-values --tls --tls-ca-cert /data/helm/prometheus/config/ca.pem --tls-cert /data/helm/prometheus/config/cert.pem --tls-key /data/helm/prometheus/config/key.pem --version 6.7.3 --set rbac.create\\=true,rbac.enabled\\=true --namespace gitlab-managed-apps -f /data/helm/prometheus/config/values.yaml\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"values.yaml"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"alertmanager:\n  enabled: false\n  image:\n    tag: v0.15.2\n\nkubeStateMetrics:\n  enabled: true\n\nnodeExporter:\n  enabled: false\n\npushgateway:\n  enabled: false\n\nserver:\n  fullnameOverride: 'prometheus-prometheus-server'\n  image:\n    tag: v2.4.3\n\nserverFiles:\n  alerts: {}\n  rules: {}\n\n  prometheus.yml:\n    rule_files:\n      - /etc/config/rules\n      - /etc/config/alerts\n    scrape_configs:\n      - job_name: prometheus\n        static_configs:\n          - targets:\n              - localhost:9090\n      - job_name: kubernetes-cadvisor\n        scheme: https\n        tls_config:\n          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n          insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n        kubernetes_sd_configs:\n          - role: node\n        relabel_configs:\n          - action: labelmap\n            regex: __meta_kubernetes_node_label_(.+)\n          - target_label: __address__\n            replacement: kubernetes.default.svc:443\n          - source_labels:\n              - __meta_kubernetes_node_name\n            regex: '(.+)'\n            target_label: __metrics_path__\n            replacement: '/api/v1/nodes/${1}/proxy/metrics/cadvisor'\n        metric_relabel_configs:\n          - source_labels:\n              - pod_name\n            target_label: environment\n            regex: '(.+)-.+-.+'\n      - job_name: 'kubernetes-service-endpoints'\n        kubernetes_sd_configs:\n          - role: endpoints\n        relabel_configs:\n          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]\n            action: keep\n            regex: true\n          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]\n            action: replace\n            target_label: __scheme__\n            regex: (https?)\n          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\n            action: replace\n            target_label: __metrics_path__\n            regex: (.+)\n          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]\n            action: replace\n            target_label: __address__\n            regex: (.+)(?::\\d+);(\\d+)\n            replacement: $1:$2\n          - action: labelmap\n            regex: __meta_kubernetes_service_label_(.+)\n          - source_labels: [__meta_kubernetes_namespace]\n            action: replace\n            target_label: kubernetes_namespace\n          - source_labels: [__meta_kubernetes_service_name]\n            action: replace\n            target_label: kubernetes_name\n      - job_name: kubernetes-nodes\n        scheme: https\n        tls_config:\n          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n          insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n        kubernetes_sd_configs:\n          - role: node\n        relabel_configs:\n          - action: labelmap\n            regex: __meta_kubernetes_node_label_(.+)\n          - target_label: __address__\n            replacement: kubernetes.default.svc:443\n          - source_labels:\n              - __meta_kubernetes_node_name\n            regex: '(.+)'\n            target_label: __metrics_path__\n            replacement: '/api/v1/nodes/${1}/proxy/metrics'\n        metric_relabel_configs:\n          - source_labels:\n              - pod_name\n            target_label: environment\n            regex: '(.+)-.+-.+'\n      - job_name: kubernetes-pods\n        tls_config:\n          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n          insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n        kubernetes_sd_configs:\n          - role: pod\n        relabel_configs:\n          - source_labels:\n              - __meta_kubernetes_pod_annotation_prometheus_io_scrape\n            action: keep\n            regex: 'true'\n          - source_labels:\n              - __meta_kubernetes_pod_annotation_prometheus_io_path\n            action: replace\n            target_label: __metrics_path__\n            regex: '(.+)'\n          - source_labels:\n              - __address__\n              - __meta_kubernetes_pod_annotation_prometheus_io_port\n            action: replace\n            regex: '([^:]+)(?::[0-9]+)?;([0-9]+)'\n            replacement: '$1:$2'\n            target_label: __address__\n          - action: labelmap\n            regex: __meta_kubernetes_pod_label_(.+)\n          - source_labels:\n              - __meta_kubernetes_namespace\n            action: replace\n            target_label: kubernetes_namespace\n          - source_labels:\n              - __meta_kubernetes_pod_name\n            action: replace\n            target_label: kubernetes_pod_name\n      # Sourced from Knative monitoring config: https://github.com/knative/serving/blob/master/config/monitoring/metrics/prometheus/100-prometheus-scrape-config.yaml\n      - job_name: autoscaler\n        scrape_interval: 3s\n        scrape_timeout: 3s\n        kubernetes_sd_configs:\n          - role: pod\n        relabel_configs:\n          # Scrape only the the targets matching the following metadata\n          - source_labels:\n              [__meta_kubernetes_namespace, __meta_kubernetes_pod_label_app, __meta_kubernetes_pod_container_port_name]\n            action: keep\n            regex: knative-serving;autoscaler;metrics\n          # Rename metadata labels to be reader friendly\n          - source_labels: [__meta_kubernetes_namespace]\n            target_label: namespace\n          - source_labels: [__meta_kubernetes_pod_name]\n            target_label: pod\n          - source_labels: [__meta_kubernetes_service_name]\n            target_label: service\n      - job_name: activator\n        scrape_interval: 3s\n        scrape_timeout: 3s\n        kubernetes_sd_configs:\n          - role: pod\n        relabel_configs:\n          # Scrape only the the targets matching the following metadata\n          - source_labels:\n              [__meta_kubernetes_namespace, __meta_kubernetes_pod_label_app, __meta_kubernetes_pod_container_port_name]\n            action: keep\n            regex: knative-serving;activator;metrics-port\n          # Rename metadata labels to be reader friendly\n          - source_labels: [__meta_kubernetes_namespace]\n            target_label: namespace\n          - source_labels: [__meta_kubernetes_pod_name]\n            target_label: pod\n          - source_labels: [__meta_kubernetes_service_name]\n            target_label: service\n      # Istio mesh\n      - job_name: istio-mesh\n        scrape_interval: 5s\n        kubernetes_sd_configs:\n          - role: endpoints\n        relabel_configs:\n          # Scrape only the the targets matching the following metadata\n          - source_labels:\n              [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n            action: keep\n            regex: istio-system;istio-telemetry;prometheus\n          # Rename metadata labels to be reader friendly\n          - source_labels: [__meta_kubernetes_namespace]\n            target_label: namespace\n          - source_labels: [__meta_kubernetes_pod_name]\n            target_label: pod\n          - source_labels: [__meta_kubernetes_service_name]\n            target_label: service\n      - job_name: istio-policy\n        scrape_interval: 5s\n        kubernetes_sd_configs:\n          - role: endpoints\n        relabel_configs:\n          # Scrape only the the targets matching the following metadata\n          - source_labels:\n              [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n            action: keep\n            regex: istio-system;istio-policy;http-monitoring\n          # Rename metadata labels to be reader friendly\n          - source_labels: [__meta_kubernetes_namespace]\n            target_label: namespace\n          - source_labels: [__meta_kubernetes_pod_name]\n            target_label: pod\n          - source_labels: [__meta_kubernetes_service_name]\n            target_label: service\n      # Istio telemetry\n      - job_name: istio-telemetry\n        scrape_interval: 5s\n        kubernetes_sd_configs:\n          - role: endpoints\n        relabel_configs:\n          # Scrape only the the targets matching the following metadata\n          - source_labels:\n              [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n            action: keep\n            regex: istio-system;istio-telemetry;http-monitoring\n          # Rename metadata labels to be reader friendly\n          - source_labels: [__meta_kubernetes_namespace]\n            target_label: namespace\n          - source_labels: [__meta_kubernetes_pod_name]\n            target_label: pod\n          - source_labels: [__meta_kubernetes_service_name]\n            target_label: service\n      # Istio pilot\n      - job_name: istio-pilot\n        scrape_interval: 5s\n        kubernetes_sd_configs:\n          - role: endpoints\n        relabel_configs:\n          # Scrape only the the targets matching the following metadata\n          - source_labels:\n              [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n            action: keep\n            regex: istio-system;istio-pilot;http-monitoring\n          # Rename metadata labels to be reader friendly\n          - source_labels: [__meta_kubernetes_namespace]\n            target_label: namespace\n          - source_labels: [__meta_kubernetes_pod_name]\n            target_label: pod\n          - source_labels: [__meta_kubernetes_service_name]\n            target_label: service\n"})}),"\n",(0,s.jsx)(n.h2,{id:"node-pages",children:"node pages"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"image: node\n\nbefore_script:\n  - npm install\n\ncache:\n  paths:\n    - node_modules/\n\npages:\n  script:\n    - npm run generate\n  artifacts:\n    paths:\n      - public\n  only:\n    - master\n"})})]})}function d(e={}){let{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},17776:function(e,n,t){t.d(n,{R:()=>r,x:()=>i});var a=t(7378);let s={},l=a.createContext(s);function r(e){let n=a.useContext(l);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(l.Provider,{value:n},e.children)}}}]);