"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["3687"],{6565:function(n,e,r){r.r(e),r.d(e,{frontMatter:()=>t,toc:()=>o,default:()=>h,metadata:()=>s,assets:()=>a,contentTitle:()=>d});var s=JSON.parse('{"id":"devops/infra/nomad","title":"Nomad","description":"- hashicorp/nomad \u662F\u4EC0\u4E48\uFF1F","source":"@site/../notes/devops/infra/nomad.md","sourceDirName":"devops/infra","slug":"/devops/infra/nomad","permalink":"/notes/devops/infra/nomad","draft":false,"unlisted":false,"editUrl":"https://github.com/wenerme/wener/edit/master/notes/../notes/devops/infra/nomad.md","tags":[],"version":"current","lastUpdatedBy":"wener","lastUpdatedAt":1704307832000,"frontMatter":{"title":"Nomad"},"sidebar":"docs","previous":{"title":"jumpserver","permalink":"/notes/devops/infra/jumpserver/"},"next":{"title":"Packer","permalink":"/notes/devops/infra/packer"}}'),i=r(86106),l=r(17776);let t={title:"Nomad"},d="Nomad",a={},o=[{value:"job",id:"job",level:2},{value:"server",id:"server",level:2},{value:"\u914D\u7F6E",id:"\u914D\u7F6E",level:2}];function c(n){let e={a:"a",admonition:"admonition",code:"code",del:"del",h1:"h1",h2:"h2",header:"header",li:"li",pre:"pre",ul:"ul",...(0,l.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"nomad",children:"Nomad"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.a,{href:"https://github.com/hashicorp/nomad",children:"hashicorp/nomad"})," \u662F\u4EC0\u4E48\uFF1F\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"BSL, Go"}),"\n",(0,i.jsx)(e.li,{children:"\u5206\u5E03\u5F0F\u8C03\u5EA6\u5668"}),"\n",(0,i.jsx)(e.li,{children:"\u5DE5\u4F5C\u8D1F\u8F7D\u7F16\u6392"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.li,{children:"\u6838\u5FC3\u5356\u70B9\uFF1A \u6DF7\u5408\u5DE5\u4F5C\u8D1F\u8F7D\u7F16\u6392"}),"\n",(0,i.jsxs)(e.li,{children:["\u7279\u70B9\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Agent \u65B9\u5F0F\u8FD0\u884C"}),"\n",(0,i.jsx)(e.li,{children:"UI \u63D0\u4F9B\u57FA\u672C\u4FE1\u606F\u548C\u64CD\u4F5C"}),"\n",(0,i.jsx)(e.li,{children:"\u58F0\u660E\u5F0F\u4EFB\u52A1\u5B9A\u4E49"}),"\n",(0,i.jsx)(e.li,{children:"\u4E3B\u8981\u8C03\u5EA6 \u5DE5\u4F5C\u8D1F\u8F7D/Workload - \u4E0D\u5305\u542B\u7F51\u7EDC\u3001\u5B58\u50A8\u3001\u670D\u52A1\u3001\u914D\u7F6E\u7B49"}),"\n",(0,i.jsx)(e.li,{children:"\u652F\u6301 CSI \u5B58\u50A8\u63D2\u4EF6"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["Driver\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"docker"}),"\n",(0,i.jsxs)(e.li,{children:["exec - \u9694\u79BB\u6267\u884C\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"pid, ipc \u9694\u79BB"}),"\n",(0,i.jsx)(e.li,{children:"chroot, host, group"}),"\n",(0,i.jsx)(e.li,{children:"caps"}),"\n",(0,i.jsx)(e.li,{children:"cgroups"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.li,{children:"raw_exec - \u4E0D\u9694\u79BB\uFF0C\u76F4\u63A5\u6267\u884C"}),"\n",(0,i.jsx)(e.li,{children:"java"}),"\n",(0,i.jsx)(e.li,{children:"podman"}),"\n",(0,i.jsx)(e.li,{children:"qemu"}),"\n",(0,i.jsx)(e.li,{children:"remote - ecs"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\u793E\u533A Driver\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Containerd"}),"\n",(0,i.jsx)(e.li,{children:"Firecracker"}),"\n",(0,i.jsx)(e.li,{children:"Jailtask"}),"\n",(0,i.jsx)(e.li,{children:"lightrun"}),"\n",(0,i.jsx)(e.li,{children:"LXC"}),"\n",(0,i.jsx)(e.li,{children:"Pot"}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.del,{children:"Rtk"})}),"\n",(0,i.jsx)(e.li,{children:"rookout"}),"\n",(0,i.jsx)(e.li,{children:"Sigularity"}),"\n",(0,i.jsx)(e.li,{children:"Systemd nspawn"}),"\n",(0,i.jsx)(e.li,{children:"Windows IIS"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\u7AEF\u53E3\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"4646/HTTP"}),"\n",(0,i.jsx)(e.li,{children:"4647/RPC"}),"\n",(0,i.jsx)(e.li,{children:"4648/Serf"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\u751F\u6001\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Nomad - \u8C03\u5EA6\u5668"}),"\n",(0,i.jsx)(e.li,{children:"consul - \u670D\u52A1\u53D1\u73B0\u3001\u6CE8\u518C\u3001\u5065\u5EB7\u68C0\u67E5"}),"\n",(0,i.jsx)(e.li,{children:"consul connect - \u7F51\u7EDC"}),"\n",(0,i.jsx)(e.li,{children:"vault - \u5BC6\u94A5"}),"\n",(0,i.jsx)(e.li,{children:"packer - \u6784\u5EFA"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\u53C2\u8003\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.a,{href:"https://github.com/hashicorp/go-getter",children:"hashicorp/go-getter"})," - \u83B7\u53D6 artifact"]}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://www.hashicorp.com/resources/why-hashicorp-customers-choose-nomad/",children:"Why HashiCorp Customers Choose Nomad"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://www.nomadproject.io/downloads/",children:"https://www.nomadproject.io/downloads/"})}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.a,{href:"https://developer.hashicorp.com/nomad/docs/install/production/requirements",children:"https://developer.hashicorp.com/nomad/docs/install/production/requirements"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Server 4C16G+"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.admonition,{title:"\u9002\u7528\u573A\u666F",type:"tip",children:(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Windows, macOS \u8C03\u5EA6"}),"\n",(0,i.jsx)(e.li,{children:"EDGE \u573A\u666F - \u8282\u70B9\u591A\uFF0C\u6BCF\u4E2A\u8282\u70B9\u90E8\u7F72 kube node \u8017\u8D39\u989D\u5916\u8D44\u6E90\uFF0C\u7F51\u7EDC\u590D\u6742"}),"\n",(0,i.jsx)(e.li,{children:"\u91CD\u8BA1\u7B97\u91CF \u573A\u666F - \u5BB9\u5668\u3001\u7F51\u7EDC\u62BD\u8C61\u5E26\u6765\u989D\u5916\u6D88\u8017"}),"\n",(0,i.jsx)(e.li,{children:"\u5206\u5E03\u5F0F supervisor"}),"\n",(0,i.jsx)(e.li,{children:"\u975E\u6807\u51C6\u8D44\u6E90\u8C03\u5EA6 - GPU\u3001\u5916\u90E8\u8BBE\u5907"}),"\n",(0,i.jsx)(e.li,{children:"\u975E\u6807\u51C6 CPU arch \u8C03\u5EA6"}),"\n"]})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"# macOS\nbrew install nomad\n\n# apk add nomad -X https://mirrors.aliyun.com/alpine/edge/community/\napk add nomad -u -X https://mirrors.tuna.tsinghua.edu.cn/alpine/edge/community/\n\n# http://0.0.0.0:4646/ui/\nnomad agent -dev -bind 0.0.0.0\n\n# Bash \u8865\u5168\ncomplete -C $(which nomad) nomad\n\nnomad node status\nnomad server members\n\n# \u5982\u679C\u4E0D\u662F\u672C\u5730 export NOMAD_ADDR=http://192.168.1.1:4646\nnomad job init\nnomad job run example.nomad\nnomad status example\n# \u72B6\u6001 - \u53EF tab \u8865\u5168\nnomad alloc status deb1c863-cf72-80fd-9dd8-18729f1dd0c6\nnomad alloc logs deb1c863-cf72-80fd-9dd8-18729f1dd0c6 redis\n\nnomad job stop example\n"})}),"\n",(0,i.jsx)(e.h2,{id:"job",children:"job"}),"\n",(0,i.jsx)(e.h2,{id:"server",children:"server"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:'cat << HCL > server.hcl\n# Increase log verbosity\nlog_level = "DEBUG"\n\n# Setup data dir\ndata_dir = "/tmp/server1"\n\n# Enable the server\nserver {\n    enabled = true\n\n    # Self-elect, should be 3 or 5 for production\n    bootstrap_expect = 1\n}\nHCL\nnomad agent -config server.hcl\n'})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-hcl",children:'# Increase log verbosity\nlog_level = "DEBUG"\n\n# Setup data dir\ndata_dir = "/tmp/client1"\n\n# Give the agent a unique name. Defaults to hostname\nname = "client1"\n\n# Enable the client\nclient {\n    enabled = true\n\n    # For demo assume we are talking to server1. For production,\n    # this should be like "nomad.service.consul:4647" and a system\n    # like Consul used for service discovery.\n    servers = ["127.0.0.1:4647"]\n}\n\n# \u4FEE\u6539\u7AEF\u53E3\n# ports {\n#     http = 5656\n# }\n\n'})}),"\n",(0,i.jsx)(e.h2,{id:"\u914D\u7F6E",children:"\u914D\u7F6E"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://www.nomadproject.io/docs/configuration",children:"Nomad Configuration"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-hcl",children:'data_dir  = "/var/lib/nomad"\n\nbind_addr = "0.0.0.0" # the default\n\ndatacenter = "dc1"\nregion = "global"\n\nadvertise {\n  # Defaults to the first private IP address.\n  http = "1.2.3.4"\n  rpc  = "1.2.3.4"\n  serf = "1.2.3.4:5648" # non-default ports may be specified\n}\n\nserver {\n  enabled          = true\n  bootstrap_expect = 3\n  data_dir = "/opt/nomad/server"\n\n  enabled_schedulers = ["batch", "service"]\n  num_schedulers     = 7\n  server_join {\n    retry_join     = [ "1.1.1.1", "2.2.2.2" ]\n    retry_max      = 3\n    retry_interval = "15s"\n  }\n\n  default_scheduler_config {\n    scheduler_algorithm = "spread"\n\n    preemption_config {\n      batch_scheduler_enabled   = true\n      system_scheduler_enabled  = true\n      service_scheduler_enabled = true\n    }\n  }\n}\n\nclient {\n  enabled       = true\n  servers = ["1.2.3.4:4647", "5.6.7.8:4647"]\n  alloc_dir = [data_dir]/alloc\n\n  // \u4E0D\u8BBE\u7F6E\u4E3A\u9ED8\u8BA4\n  // \u4F8B\u5982\n  chroot_env {\n    "/bin/ls"           = "/bin/ls"\n    "/etc/ld.so.cache"  = "/etc/ld.so.cache"\n    "/etc/ld.so.conf"   = "/etc/ld.so.conf"\n    "/etc/ld.so.conf.d" = "/etc/ld.so.conf.d"\n    "/etc/passwd"       = "/etc/passwd"\n    "/lib"              = "/lib"\n    "/lib64"            = "/lib64"\n  }\n  max_kill_timeout = "30s"\n  disable_remote_exec = false\n  # map[string]string\n  meta = nil\n\n  # network_interface\n  network_speed = 0\n  cpu_total_compute=0\n  memory_total_mb=0\n\n  node_class=""\n  // \u5BA2\u6237\u7AEF\u9009\u9879\n  options = {\n    //\n    "driver.allowlist" = "docker,qemu"\n    "driver.denylist" = "docker,qemu"\n    # \u9ED8\u8BA4\n    # CONSUL_TOKEN\n    # CONSUL_HTTP_TOKEN\n    # VAULT_TOKEN\n    # AWS_ACCESS_KEY_ID\n    # AWS_SECRET_ACCESS_KEY\n    # AWS_SESSION_TOKEN\n    # GOOGLE_APPLICATION_CREDENTIALS\n    "env.denylist" = "MY_CUSTOM_ENVVAR"\n\n    # \u9ED8\u8BA4 root, Administrator\n    "user.denylist" = "root,ubuntu"\n    # \u9ED8\u8BA4 exec qemu java\n    "user.checked_drivers" = "exec,raw_exec"\n    "fingerprint.allowlist" = "network"\n    "fingerprint.denylist" = "network"\n    "fingerprint.network.disallow_link_local" = "true"\n  }\n  reserved {\n    # MHz\n    cpu = 0\n    memory = 0\n    disk = 0\n    reserved_ports = "22,80,8500-8600"\n  }\n\n  # Server Join \u65B9\u5F0F - \u7528\u4E8E\u670D\u52A1\u7AEF\u89D2\u8272\n  server_join {\n    retry_join = [ "1.1.1.1", "2.2.2.2" ]\n    retry_max = 3\n    retry_interval = "15s"\n  }\n  state_dir = [data_dir]/client\n\n  gc_interval = "1m"\n  gc_disk_usage_threshold=80\n  gc_inode_usage_threshold=70\n  gc_max_allocs=50\n  gc_parallel_destroys=2\n  no_host_uuid = true\n  cni_path = "/opt/cni/bin"\n  cni_config_dir = "/opt/cni/config"\n  bridge_network_name = "nomad"\n  bridge_network_subnet = "172.26.66.0/23"\n\n  template {}\n  host_volume "ca-certificates" {\n    path = "/etc/ssl/certs"\n    read_only = true\n  }\n  host_network "public" {\n    cidr = "203.0.113.0/24"\n    interface = ""\n    reserved_ports = "22,80"\n  }\n}\n\nconsul {\n  address = "127.0.0.1:8500"\n  auth    = "admin:password"\n  token   = "abcd1234"\n}\n\nacl {\n  enabled = true\n  token_ttl = "30s"\n  policy_ttl = "60s"\n  replication_token = ""\n}\n\nautopilot {\n  cleanup_dead_servers      = true\n  last_contact_threshold    = "200ms"\n  max_trailing_logs         = 250\n  server_stabilization_time = "10s"\n  // enterprise\n  enable_redundancy_zones   = false\n  disable_upgrade_migration = false\n  enable_custom_upgrades    = false\n}\n\ntls {}\n\nvault {\n  enabled = true\n  address = "https://vault.company.internal:8200"\n}\n\n\ndisable_anonymous_signature = false\ndisable_update_check = false\nenable_debug=false\nenable_syslog=false\nsyslog_facility="LOCAL0"\n\n# map[string]string\nhttp_api_response_headers=nil\nleave_on_interrupt=false\nleave_on_terminate=false\n\nlimits {\n  https_handshake_timeout="5s"\n  http_max_conns_per_client=100\n  rpc_handshake_timeout="5s"\n  rpc_max_conns_per_client=100\n}\n\nlog_level="INFO"\nlog_json-false\nlog_file=""\nlog_rotate_bytes=0\nlog_rotate_duration="24h"\nlog_rotate_max_files=0\n\n# hostname\nname=\n\nplugin_dir=$data_dir/plugins\nplugin "raw_exec" {\n  config {\n    enabled = true\n  }\n}\n\nports {\n  http = 4646\n  rpc  = 4647\n  serf = 4648\n}\n\ntelemetry {\n  publish_allocation_metrics = true\n  publish_node_metrics       = true\n\n  prometheus_metrics = true\n}\n'})})]})}function h(n={}){let{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(c,{...n})}):c(n)}},17776:function(n,e,r){r.d(e,{R:()=>t,x:()=>d});var s=r(7378);let i={},l=s.createContext(i);function t(n){let e=s.useContext(l);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:t(n.components),s.createElement(l.Provider,{value:e},n.children)}}}]);