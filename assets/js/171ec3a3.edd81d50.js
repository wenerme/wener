"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["44012"],{62040:function(n,e,r){r.r(e),r.d(e,{frontMatter:()=>l,toc:()=>a,default:()=>h,metadata:()=>s,assets:()=>d,contentTitle:()=>c});var s=JSON.parse('{"id":"service/network/coturn","title":"coturn","description":"- coturn/coturn","source":"@site/../notes/service/network/coturn.md","sourceDirName":"service/network","slug":"/service/network/coturn","permalink":"/notes/service/network/coturn","draft":false,"unlisted":false,"editUrl":"https://github.com/wenerme/wener/edit/master/notes/../notes/service/network/coturn.md","tags":[],"version":"current","lastUpdatedBy":"wener","lastUpdatedAt":1625926581000,"frontMatter":{"title":"coturn"},"sidebar":"docs","previous":{"title":"Avahi","permalink":"/notes/service/network/avahi"},"next":{"title":"curl","permalink":"/notes/service/network/curl"}}'),t=r(86106),i=r(17776);let l={title:"coturn"},c="coturn",d={},a=[{value:"\u914D\u7F6E\u793A\u4F8B",id:"\u914D\u7F6E\u793A\u4F8B",level:2},{value:"turn",id:"turn",level:3},{value:"\u914D\u7F6E",id:"\u914D\u7F6E",level:2},{value:"TURN REST API",id:"turn-rest-api",level:2},{value:"server stun returned an error with code=701",id:"server-stun-returned-an-error-with-code701",level:2},{value:"self-signed certificates for Turn Server",id:"self-signed-certificates-for-turn-server",level:2},{value:"incoming packet CREATE_PERMISSION processed, error 443: Peer Address Family Mismatch (4)",id:"incoming-packet-create_permission-processed-error-443-peer-address-family-mismatch-4",level:2}];function o(n){let e={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"coturn",children:"coturn"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.a,{href:"https://github.com/coturn/coturn",children:"coturn/coturn"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"BSD-3, C, RFC 3489/5389/5766/5780/6062/6156 STUN/TURN Server"}),"\n",(0,t.jsx)(e.li,{children:"\u5B9E\u73B0\u4E86\u975E\u5E38\u591A\u7684\u89C4\u8303 - \u6BD4 pion/turn \u5B9E\u73B0\u66F4\u591A"}),"\n",(0,t.jsx)(e.li,{children:"\u652F\u6301\u534F\u8BAE UDP, TCP, TLS, DTLS, SCTP"}),"\n",(0,t.jsx)(e.li,{children:"\u652F\u6301\u4E2D\u7EE7\u534F\u8BAE UDP, TCP"}),"\n",(0,t.jsx)(e.li,{children:"\u652F\u6301\u7528\u6237\u6570\u636E\u5E93 SQLite, MySQL, PostgreSQL, Redis, MongoDB"}),"\n",(0,t.jsxs)(e.li,{children:["prometheus metrics :9641\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["\u6784\u5EFA\u4F9D\u8D56 ",(0,t.jsx)(e.a,{href:"https://github.com/digitalocean/prometheus-client-c",children:"digitalocean/prometheus-client-c"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.li,{children:"\u652F\u6301\u591A\u5E73\u53F0- Linux, BSD, macOS, Windows/cygwin"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\u53C2\u8003\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://www.webrtc-experiment.com/docs/TURN-server-installation-guide.html",children:"TURN server installation Guide"})}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.a,{href:"https://webrtc.github.io/samples/src/content/peerconnection/trickle-ice/",children:"Trickle ICE"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u6D4B\u8BD5\u5DE5\u5177"}),"\n",(0,t.jsx)(e.li,{children:"\u6CE8\u610F\u9700\u8981\u5199\u7AEF\u53E3 \u4F8B\u5982 3478"}),"\n",(0,t.jsx)(e.li,{children:"turn \u9700\u8981\u6388\u6743\u4FE1\u606F"}),"\n",(0,t.jsxs)(e.li,{children:["turn \u6DFB\u52A0 ",(0,t.jsx)(e.code,{children:"?transport=tcp"})," \u4F7F\u7528 TCP \u534F\u8BAE"]}),"\n",(0,t.jsx)(e.li,{children:"turn \u4FEE\u6539\u7AEF\u53E3\u540E udp \u4F3C\u4E4E\u4E0D\u901A"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["bigbluebutton ",(0,t.jsx)(e.a,{href:"https://docs.bigbluebutton.org/admin/setup-turn-server.html",children:"Configure TURN"})]}),"\n",(0,t.jsxs)(e.li,{children:["nextcloud-talk ",(0,t.jsx)(e.a,{href:"https://nextcloud-talk.readthedocs.io/en/turn_doc/TURN/",children:"Configuring coTURN"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.li,{children:"SQLite DB \u4F4D\u7F6E /var/lib/turn/turndb, /usr/local/var/db/turndb"}),"\n"]}),"\n",(0,t.jsx)(e.admonition,{type:"caution",children:(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["chrome turn \u4E0D\u652F\u6301\u4E09\u65B9\u6388\u6743 - \u4E0D\u652F\u6301 oauth\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://bugs.chromium.org/p/webrtc/issues/detail?id=4907",children:"chromium/webrtc#4907"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://github.com/coturn/coturn/issues/448",children:"coturn/coturn#448"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["webrtc \u672C\u8EAB\u6CA1\u6709 realm \u6982\u5FF5 - \u662F\u901A\u8FC7\u6362\u53D6 token \u540E\u5305\u542B\u4E86 realm\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["realm \u65E0\u610F\u4E49 ",(0,t.jsx)(e.a,{href:"https://mailarchive.ietf.org/arch/msg/tram/rKb19tMU71Wn4BootKOOtIi0z54/",children:"stun-origin status is it dead?"})]}),"\n",(0,t.jsx)(e.li,{children:"TLS SNI \u53EF\u7528\u4E8E\u865A\u62DF\u4E3B\u673A"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.li,{children:"\u63A8\u8350\u4F7F\u7528 TURN REST API \u65B9\u5F0F\u6388\u6743"}),"\n"]})}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(e.table,{children:[(0,t.jsx)(e.thead,{children:(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.th,{children:"port"}),(0,t.jsx)(e.th,{children:"conf"})]})}),(0,t.jsxs)(e.tbody,{children:[(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"3478"}),(0,t.jsx)(e.td,{children:"listening-port"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"3479"}),(0,t.jsx)(e.td,{children:"alt-listening-port"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"5934"}),(0,t.jsx)(e.td,{children:"tls-listening-port"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"5935"}),(0,t.jsx)(e.td,{children:"alt-tls-listening-port"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"49152"}),(0,t.jsx)(e.td,{children:"min-port"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"65535"}),(0,t.jsx)(e.td,{children:"max-port"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"5766"}),(0,t.jsx)(e.td,{children:"cli-port"})]})]})]}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsx)(e.p,{children:"alt \u7AEF\u53E3\u662F\u6807\u51C6\u7AEF\u53E3+1"}),"\n"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(e.table,{children:[(0,t.jsx)(e.thead,{children:(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.th,{children:"protocol"}),(0,t.jsx)(e.th,{children:"port"}),(0,t.jsx)(e.th,{children:"desc"})]})}),(0,t.jsxs)(e.tbody,{children:[(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"stun"}),(0,t.jsx)(e.td,{children:"3478/udp"}),(0,t.jsx)(e.td,{children:"STUN"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"stun"}),(0,t.jsx)(e.td,{children:"3478/tcp"}),(0,t.jsx)(e.td,{children:"STUN/TLS - de-multiplex"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"turn"}),(0,t.jsx)(e.td,{children:"3478/tcp"}),(0,t.jsx)(e.td,{children:"TURN over TCP"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"turn"}),(0,t.jsx)(e.td,{children:"3478/udp"}),(0,t.jsx)(e.td,{children:"TURN over UDP"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"stun-behavior"}),(0,t.jsx)(e.td,{children:"3478/tcp"}),(0,t.jsx)(e.td,{children:"STUN Behavior Discovery over TCP"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"stun-behavior"}),(0,t.jsx)(e.td,{children:"3478/udp"}),(0,t.jsx)(e.td,{children:"STUN Behavior Discovery over UDP"})]})]})]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"PeerConnection \u53C2\u6570"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-json",children:'{\n  "iceServers": [\n    { "urls": ["stun:stun.l.google.com:19302"] },\n    { "urls": ["turn:192.168.1.2:3478"], "username": "test", "credential": "test" }\n  ],\n  "iceTransportPolicy": "all",\n  "iceCandidatePoolSize": "0"\n}\n'})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"# macOS\nbrew install coturn\n# AlpineLinux\napk add coturn\n\nturnserver\nturnutils_stunclient 127.0.0.1\n\n# \u5982\u679C\u6709\u5916\u7F51 IP\nturnserver -X $(curl icanhazip.com) -a -f -r example\n\n# \u6D4B\u8BD5\u670D\u52A1\nsudo turnadmin -a -r example -u test -p test\nsudo turnadmin -A -u admin -p admin\nsudo turnserver -L 0.0.0.0 -a -f -r example -v --web-admin --web-admin-ip 0.0.0.0 --cli-password test\n"})}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(e.table,{children:[(0,t.jsx)(e.thead,{children:(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.th,{children:"cli"}),(0,t.jsx)(e.th,{children:"desc"})]})}),(0,t.jsxs)(e.tbody,{children:[(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"turnadmin -> turnserver"}),(0,t.jsx)(e.td,{children:"TURN relay administration tool - \u7BA1\u7406 Server \u8D26\u6237"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"turnserver"}),(0,t.jsx)(e.td,{})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"turnutils_natdiscovery"}),(0,t.jsx)(e.td,{children:"RFC5780 nat \u53D1\u73B0"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"turnutils_oauth"}),(0,t.jsx)(e.td,{children:"\u751F\u6210\uFF0C\u6821\u9A8C access_token"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"turnutils_peer"}),(0,t.jsx)(e.td,{children:"UDP echo \u540E\u7AEF\u670D\u52A1, \u7528\u4E8E\u914D\u5408 turnutils_uclient \u6D4B\u8BD5"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"turnutils_rfc5769check"}),(0,t.jsx)(e.td,{children:"\u68C0\u6D4B STUN/TURN \u5B9E\u73B0\u51C6\u786E"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"turnutils_stunclient"}),(0,t.jsx)(e.td,{children:"STUN RFC 5389 UDP \u5BA2\u6237\u7AEF"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"turnutils_uclient"}),(0,t.jsx)(e.td,{children:"\u6D4B\u8BD5\u5E94\u7528"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"/etc/init.d/turnserver"}),(0,t.jsx)(e.td,{children:"OpenRC init"})]})]})]}),"\n",(0,t.jsx)(e.h2,{id:"\u914D\u7F6E\u793A\u4F8B",children:"\u914D\u7F6E\u793A\u4F8B"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"/etc/turnserver.conf"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-conf",children:"# you can listen ports 3478 and 5349 instead of 80/443\nlistening-port=80\ntls-listening-port=443\n\nlistening-ip=your-ip-address\n\nrelay-ip=your-ip-address\nexternal-ip=your-ip-address\n\nrealm=yourdomain.com\nserver-name=yourdomain.com\n\nlt-cred-mech\nuserdb=/etc/turnuserdb.conf\n\ncert=/etc/ssl/certificate.pem\npkey=/etc/ssl/private.key\n\nno-stdout-log\n"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"/etc/turnuserdb.conf"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-conf",children:"# pass\nyourName:yourPassword\n\n# db\nuserdb=/var/lib/turn/turndb\n\n# in this case, please add following:\n# lt-cred-mech             # remove or comment this one\noauth                      # add this\nuser=youruser:yourpassword # add this\n\n# source: askubuntu.com/a/819264\n"})}),"\n",(0,t.jsx)(e.h3,{id:"turn",children:"turn"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ini",children:'# \u5EFA\u8BAE\u4FEE\u6539\n#external-ip=\n#listening-ip=0.0.0.0\n#listening-port=\n#tls-listening-port=\n# \u770B\u60C5\u51B5\nweb-admin\nweb-admin-ip=127.0.0.1\n\nrealm=example.com\n# openssl rand -hex 16\nstatic-auth-secret = <secret_value>\n\nfingerprint\nlt-cred-mech\nuse-auth-secret\n\n# \u9ED8\u8BA4 - \u4F7F\u7528 selfsign \u6216 acme\n# cert=turn_server_cert.pem\n# pkey=turn_server_pkey.pem\n# From https://ssl-config.mozilla.org/ Intermediate, openssl 1.1.0g, 2020-01\ncipher-list="ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384"\n# openssl dhparam -dsaparam  -out /etc/coturn/dhp.pem 2048\ndh-file=/etc/coturn/dhp.pem\n\nkeep-address-family\nno-cli\nno-tlsv1\nno-tlsv1_1\nno-software-attribute\n\n# Block connections to IP ranges which shouldn\'t be reachable\n# no-loopback-peers\nno-multicast-peers\n\n# IPv4 Private-Use\ndenied-peer-ip=10.0.0.0-10.255.255.255\ndenied-peer-ip=172.16.0.0-172.31.255.255\ndenied-peer-ip=192.168.0.0-192.168.255.255\n# Other IPv4 Special-Purpose addresses\ndenied-peer-ip=100.64.0.0-100.127.255.255\ndenied-peer-ip=169.254.0.0-169.254.255.255\ndenied-peer-ip=192.0.0.0-192.0.0.255\ndenied-peer-ip=192.0.2.0-192.0.2.255\ndenied-peer-ip=198.18.0.0-198.19.255.255\ndenied-peer-ip=198.51.100.0-198.51.100.255\ndenied-peer-ip=203.0.113.0-203.0.113.255\n# IPv6 Unique-Local\ndenied-peer-ip=fc00::-fdff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\n# IPv6 Link-Local Unicast\ndenied-peer-ip=fe80::-febf:ffff:ffff:ffff:ffff:ffff:ffff:ffff\n# Other IPv6 Special-Purpose assignments\ndenied-peer-ip=::ffff:0:0-::ffff:ffff:ffff\ndenied-peer-ip=64:ff9b::-64:ff9b::ffff:ffff\ndenied-peer-ip=64:ff9b:1::-64:ff9b:1:ffff:ffff:ffff:ffff:ffff\ndenied-peer-ip=2001::-2001:1ff:ffff:ffff:ffff:ffff:ffff:ffff\ndenied-peer-ip=2001:db8::-2001:db8:ffff:ffff:ffff:ffff:ffff:ffff\ndenied-peer-ip=2002::-2002:ffff:ffff:ffff:ffff:ffff:ffff:ffff\n'})}),"\n",(0,t.jsx)(e.h2,{id:"\u914D\u7F6E",children:"\u914D\u7F6E"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u914D\u7F6E\u4E5F\u53EF\u4EE5\u901A\u8FC7\u547D\u4EE4\u884C\u53C2\u6570\u4F20\u9012\uFF0C\u90E8\u5206\u53C2\u6570\u6709\u77ED\u53C2\u6A21\u5F0F"}),"\n",(0,t.jsx)(e.li,{children:"\u63A8\u8350 TCP SSLv3, TLS 1.0,1.1,1.2\u3001UDP DTLSv1"}),"\n",(0,t.jsx)(e.li,{children:"-c \u914D\u7F6E\u6587\u4EF6 - \u9ED8\u8BA4 turnserver.conf"}),"\n",(0,t.jsx)(e.li,{children:"-n \u4E0D\u4F7F\u7528\u914D\u7F6E\u6587\u4EF6"}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://github.com/coturn/coturn/blob/master/examples/etc/turnserver.conf",children:"examples/etc/turnserver.conf"})}),"\n",(0,t.jsxs)(e.li,{children:["use-auth-secret \u4E0E lt-cred-mech \u51B2\u7A81\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u63A8\u8350 use-auth-secret\uFF0C\u4F46\u8981\u590D\u6742\u4E00\u70B9"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.li,{children:"AlpineLinux turndb /var/lib/coturn/turndb"}),"\n",(0,t.jsx)(e.li,{children:"prometheus \u9700\u8981\u542F\u7528\u4E86\u6A21\u5757\u624D\u80FD\u4F7F\u7528"}),"\n",(0,t.jsx)(e.li,{children:"4.5.1 no-loopback-peers \u66FF\u6362\u4E3A allow-loopback-peers"}),"\n",(0,t.jsx)(e.li,{children:"4.5.3 keep-address-family \u66FF\u6362\u4E3A allocation-default-address-family"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-conf",children:'# -d \u76D1\u542C\u8BBE\u5907 - \u4E0D\u5EFA\u8BAE\u4F7F\u7528 - linux \u7684 interface\n# listening-device=\n# -p \u76D1\u542C\u7AEF\u53E3\n# \u4E5F\u80FD\u63A5\u6536 TLS & DTLS \u4F1A\u8BDD\nlistening-port=3478\n# TLS & DTLS\n# \u4E5F\u80FD\u63A5\u6536 "plain" TCP & UDP \u4F1A\u8BDD - \u4F1A\u81EA\u52A8\u8BC6\u522B\ntls-listening-port=5349\n\n# \u7AEF\u53E3\u7684\u989D\u5916\u76D1\u542C\u7AEF\u53E3 - STUN CHANGE_REQUEST - RFC 5780\n# 0=listening-port+1\nalt-listening-port=0\nalt-tls-listening-port=0\n\n# tcp proxy \u534F\u8BAE - https://www.haproxy.org/download/1.8/doc/proxy-protocol.txt\n# \u7528\u4E8E\u652F\u6301\u8D1F\u8F7D\u5747\u8861\n# tcp-proxy-port=\n\n# -L \u76D1\u542C\u5730\u5740\uFF0C\u652F\u6301\u591A\u4E2A\n# \u9ED8\u8BA4\u76D1\u542C \u6240\u6709 IPv4 \u548C IPv6\n# listening-ip=0.0.0.0\n\n# \u8F85\u52A9\u670D\u52A1\u5730\u5740\n# \u8F85\u52A9\u670D\u52A1\u4E0D\u652F\u6301 alternative ports, \u4E0D\u652F\u6301 CHANGE REQUEST\n# aux-server = <ip:port>\n\n# \u4EC5\u7528\u4E8E\u65E7\u7684 Linux - \u81EA\u52A8\u4E0E auxiliary \u670D\u52A1\u5747\u8861 UDP \u6D41\u91CF\nudp-self-balance\n\n# -i \u4E2D\u7EE7\u8BBE\u5907 - \u4E0D\u63A8\u8350\n# relay-device = <device-name>\n# -E \u4E2D\u7EE7\u5730\u5740\n# relay-ip = <ip>\n\n# -X \u5916\u90E8\u5730\u5740\n# TURN Server \u5171\u79C1\u5730\u5740\u6620\u5C04\n# \u5982\u679C\u53EA\u6307\u5B9A\u4E86 public \u5730\u5740\uFF0C\u5219\u6240\u6709 relay \u90FD\u4F1A\u4F7F\u7528\u8BE5\u5730\u5740 - one single relay, no RFC5780 functionality is required\n# \u5730\u5740\u4F1A\u8FD4\u56DE\u4E3A XOR-RELAYED-ADDRESS \u5B57\u6BB5\n# external-ip = <public-ip[/private-ip]>\n\n# \u5141\u8BB8\u672C\u5730\u5730\u5740 - 127.x.x.x,::1\nallow-loopback-peers\n# \u4E0D\u5141\u8BB8\u5E7F\u64AD\u5730\u5740 - 224.0.0.0, FFXX:*\nno-multicast-peers\n# -m \u4E2D\u7EE7\u7EBF\u7A0B\u6570\u91CF - 0 \u4E3A\u5355\u7EBF\u7A0B\u6A21\u5F0F, \u9ED8\u8BA4\u4F1A\u4F7F\u7528 cpu \u6570\n# relay-threads = <number>\n\n# \u4E2D\u7EE7 UDP \u7AEF\u53E3\u8303\u56F4\nmin-port=49152\nmax-port=65535\n\n# Production mode - \u9690\u85CF\u670D\u52A1\u7AEF\u7248\u672C\n# \u4E4B\u524D\u662F prod\nno-software-attribute\n# -f \u5728 TURN \u6D88\u606F\u4E2D\u6DFB\u52A0\u6307\u7EB9\nfingerprint\n# -a long-term credential mechanism\nlt-cred-mech\n# \u65E0\u8BA4\u8BC1 - \u5141\u8BB8\u533F\u540D\u8BBF\u95EE\nno-auth\n# \u7528\u6237\u8D26\u53F7\n# user = <user:pwd>\n# \u9ED8\u8BA4\u57DF\n# realm = <realm>\n# \u8981\u6C42\u8BF7\u6C42\u7684 ORIGIN \u76F8\u540C\ncheck-origin-consistency\n\n# -q \u5355\u7528\u6237\u914D\u989D - \u4E00\u4E2A\u7528\u6237\u53EF\u4EE5\u521B\u5EFA\u591A\u5C11\u5E76\u53D1\n# user-quota = <number>\n# -Q \u603B\u914D\u989D - \u5168\u5C40\u5E76\u53D1\u9650\u5236\n# total-quota = <number>\n# TURN \u9650\u6D41 - sessoion bytes-per-second\n# max-bps = <number>\n# \u670D\u52A1\u5668\u6D41\u91CF - bytes-per-second\n# bps-capacity = <number>\n\n# -b,--userdb SQLite DB\n# /usr/local/var/db/turndb, /var/lib/turn/turndb.\n# db=/var/db/turndb\n# userdb=/var/db/turndb\n\n# -e, --psql-userdb, --sql-userdb\n# http://www.postgresql.org/docs/9.2/static/libpq-connect.html#LIBPQ-CONNSTRING\n# psql-userdb = "host=<host> dbname=<database-name> user=<database-user> password=<database-user-password> connect_timeout=30"\n\n# -N\n# host=<ip-addr> dbname=<db-number> password=<database-user-password> port=<db-port> connect_timeout=<seconds>\n# redis-userdb = <connection-string\n# -O redisl \u7EDF\u8BA1\u548C\u72B6\u6001 db\uFF0C\u652F\u6301\u4E8B\u4EF6\u8BA2\u9605\n# redis-statsdb = <connection-string>\n\n# TURN REST API\n#\n# Time Limited Long Term Credential\n#   sets a special authorization option that is based upon authentication secret\n# \u7528\u4E8E\u652F\u6301 TURN Server REST API\n# usercombo -> "timestamp:userid"\n# turn user -> usercombo\n# turn password -> base64(hmac(secret key, usercombo))\n#\n# allows TURN credentials to be accounted for a specific user id\n# turning on secret-based authentication - static-auth-secret \u6216 turn_secret \u8868\n# \u4F9D\u8D56 lt-cred-mech\uFF0C\u4F1A\u4FEE\u6539\u90E8\u5206\u914D\u7F6E\n# use-auth-secret\n# \u9759\u6001 secret - \u9ED8\u8BA4\u4F7F\u7528 turn_secret \u8868\u6570\u636E\n# static-auth-secret = <secret>\n# \u7528\u4E8E oAuth \u6D41\u7A0B - \u9ED8\u8BA4\u4E3A realm \u540D\u5B57\n# server-name\n# \u542F\u7528 oAuth\noauth\n\n# \u9759\u6001\u7528\u6237 - \u4E0D\u53EF\u4EE5\u7528\u4E8E TURN REST API\n# \u751F\u6210 key - turnadmin -k -u ninefingers -r north.gov -p youhavetoberealistic\n#user=usr:key\n#user=usr:pass\n\n# Disable periodic health checks to \'dynamic\' auth secret tables\nno-auth-pings\n# \u4E0D\u4F7F\u7528\u52A8\u6001\u7684 \u5141\u8BB8/\u62D2\u7EDD ip \u5217\u8868\nno-dynamic-ip-list\n# \u4E0D\u4F7F\u7528\u52A8\u6001 realm \u5C5E\u6027\nno-dynamic-realms\n\n\n# TLS\n# ====================\n# \u9ED8\u8BA4 turn_server_cert.pem\n# cert = <filename>\n# \u9ED8\u8BA4 turn_server_pkey.pem\n# pkey = <filename>\n# pkey-pwd = <password>\n# \u9ED8\u8BA4\u503C\u4E3A DEFAULT\n# cipher-list = <"cipher-string">\n# \u8BBE\u7F6E CA \u540E\u4F1A\u9A8C\u8BC1\u5BA2\u6237\u7AEF\u8BC1\u4E66\n# CA-file = <filename>\n# \u9ED8\u8BA4 prime256v1\n# ec-curve-name = <curve-name>\n# 566 bits predefined DH TLS key - \u9ED8\u8BA4 2066.\n# dh566\n# 1066 bits predefined DH TLS key - \u9ED8\u8BA4 2066.\n# dh1066\n# DH TLS key - pem \u683C\u5F0F\n# dh-file = <dh-file-name>\n\nno-tlsv1\nno-tlsv1_1\nno-tlsv1_2\n\n# \u534F\u8BAE\u914D\u7F6E\n# ====================\n# \u4E0D\u76D1\u542C \u534F\u8BAE\nno-udp\nno-udp\nno-tls\nno-dtls\n# \u7981\u6B62 udp relay - \u53EA\u4F7F\u7528 tcp\nno-udp-relay\n# \u7981\u6B62 tcp relay - \u53EA\u4F7F\u7528 udp\nno-tcp-relay\n# \u670D\u52A1\u7AEF\u4E2D\u7EE7 - \u975E\u6807\u51C6\u903B\u8F91 - \u4EC5\u7528\u4E8E\u7279\u6B8A\u573A\u666F\n# server-relay\n\n# \u7981\u7528 RFC5780 (NAT behavior discovery)\n# \u5982\u679C\u76D1\u542C\u4E86\u591A\u4E2A\u76F8\u540C\u5730\u5740\u65CF\u5219\u4F1A\u542F\u7528\u8BE5\u529F\u80FD\n# \u542F\u7528\u4F1A\u8FD4\u56DE\u66F4\u591A\u4FE1\u606F\uFF0C\u7981\u7528\u53EF\u4EE5\u51CF\u5C0F\u653B\u51FB\u653E\u5927\u98CE\u9669\n# \u5EFA\u8BAE\u5F00\u542F\u8BE5\u9009\u9879\nno-rfc5780\n\n# \u7981\u7528 MAPPED-ADDRESS, \u53EA\u4F7F\u7528 XOR-MAPPED-ADDRESS\n# \u542F\u7528\u53EF\u4EE5 decrease gain factor in STUN binding responses\n# \u5EFA\u8BAE\u5F00\u542F\u8BE5\u9009\u9879\nno-stun-backward-compatibility\n\n# \u5982\u679C\u5F00\u542F\u4E86 RFC5780 \u53EA\u53D1\u9001 RESPONSE-ORIGIN\n# \u542F\u7528\u53EF\u4EE5 decrease gain factor in STUN binding responses\n# \u5EFA\u8BAE\u5F00\u542F\u8BE5\u9009\u9879\nresponse-origin-only-with-rfc5780\n\n# \u65E5\u5FD7\u914D\u7F6E\n# ====================\n# -l \u6587\u4EF6\u540D\u53EF\u4EE5\u4F7F\u7528 syslog,stdout \u548C -\n# \u4F1A\u5C1D\u8BD5\u76EE\u5F55 /var/log/turnserver/, /var/log, /var/tmp, /tmp, .\n# log-file = <filename>\n# \u4E0D\u8F93\u51FA stdout - \u9ED8\u8BA4\u662F log \u6587\u4EF6+stdout\nno-stdout-log\nsyslog\n# log \u6587\u4EF6\u540D\u4E0D\u6DFB\u52A0 pid \u548C\u65E5\u671F\u4FE1\u606F\nsimple-log\n\n# ISO-8601\nnew-log-timestamp\n# strftime\n# new-log-timestamp-format = <format>\n# STUN binding request - \u9ED8\u8BA4\u5173\u95ED - \u907F\u514D DoS\n# log-binding\n\n# \u5931\u6548\u65F6\u95F4 - \u79D2\nstale-nonce=600\nmax-allocate-lifetime=3600\nchannel-lifetime=600\n# \u751F\u4EA7\u4E0D\u5EFA\u8BAE\u4FEE\u6539\npermission-lifetime=300\nmax-allocate-timeout=60\n\n# -S \u62D2\u7EDD\u6240\u6709 turn \u8BF7\u6C42\nstun-only\n# \u62D2\u7EDD\u6240\u6709 sturn \u8BF7\u6C42\nno-stun\n# stun \u8981\u6C42\u9A8C\u8BC1\nsecure-stun\n\n# \u7528\u4E8E\u8D1F\u8F7D\u7684\u670D\u52A1 - \u4F1A\u91CD\u5B9A\u5411\n# alternate-server = <ip:port>\n# tls-alternate-server = <ip:port>\n\n# -C timestamp/username \u5206\u5272\nrest-api-separator=:\n# \u91CD\u5B9A\u5411 ^/.well-known/acme-challenge/(.*)\n# acme-redirect = <URL>\n\n# allowed-peer-ip = <ip[-ip]>\n# denied-peer-ip = <ip[-ip]>\n\n# \u4F1A\u5C1D\u8BD5 /var/run/turnserver.pid, /var/tmp/turnserver.pid\n# pidfile = <"pid-file-name">\n# \u8FDB\u7A0B\u8FD0\u884C\u8EAB\u4EFD\n# proc-user = <user-name>\n# proc-group = <group-name>\n\n# \u652F\u6301 MICE - Mobility with ICE\nmobility\n# -K \u57FA\u4E8E\u901A\u8BAF\u9009\u62E9\u5730\u5740 - RFC6156 section-4.2 \u8981\u6C42\u9ED8\u8BA4 IPv4\n# keep-address-family\n\n# \u7981\u7528 CLI \u652F\u6301\n# no-cli\ncli-ip=127.0.0.1\ncli-port=5766\n# \u5EFA\u8BAE\u4F7F\u7528 turnadmin -P \u751F\u6210\u52A0\u5BC6\u5BC6\u94A5\n# cli-password = <password>\ncli-max-output-sessions\n\n# \u542F\u7528 web-admin - \u9700\u8981 cert\nweb-admin\nweb-admin-ip=127.0.0.1\nweb-admin-port=8080\n# \u51FA\u4E8E\u5B89\u5168\u8003\u8651\u9ED8\u8BA4\u5173\u95ED\nweb-admin-listen-on-workers\n\nprometheus\n'})}),"\n",(0,t.jsx)(e.h2,{id:"turn-rest-api",children:"TURN REST API"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u4F7F\u7528 use-auth-secret+static-auth-secret \u6388\u6743\u65B9\u5F0F\u76F8\u5BF9\u66F4\u5B89\u5168"}),"\n",(0,t.jsxs)(e.li,{children:["password=",(0,t.jsx)(e.code,{children:'base64(hmac(usercombo = "${timestamp}:${username}", secret))'})]}),"\n",(0,t.jsx)(e.li,{children:"timestamp \u4E3A\u5931\u6548\u65F6\u95F4"}),"\n",(0,t.jsx)(e.li,{children:"\u8BF7\u6C42 turn \u7684\u65F6\u5019 username \u9700\u8981\u4F7F\u7528 usercombo"}),"\n",(0,t.jsx)(e.li,{children:"\u652F\u6301\u914D\u7F6E\u591A\u4E2A shared-secret\uFF0C\u4F1A\u904D\u5386\uFF0C\u53EF\u4EE5\u6839\u636E realm \u914D\u7F6E"}),"\n",(0,t.jsxs)(e.li,{children:["\u6D41\u7A0B\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["\u5BA2\u6237\u7AEF\u5148\u548C\u81EA\u5DF1\u7684\u670D\u52A1\u7AEF\u4EA4\u4E92\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u670D\u52A1\u7AEF\u9A8C\u8BC1\u5BA2\u6237\u7AEF\uFF0C\u4ECE coturn \u751F\u6210 token"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.li,{children:"\u5BA2\u6237\u7AEF\u53D6\u5230 token \u8FDB\u884C turn \u64CD\u4F5C"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://datatracker.ietf.org/doc/html/draft-uberti-behave-turn-rest-00",children:"A REST API For Access To TURN Services"})}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-go",children:'func hashPassword(name, ts, secret string) (string, string) {\n	combo := fmt.Sprintf("%v:%v", ts, name)\n	hash := hmac.New(sha1.New, []byte(secret))\n	hash.Write([]byte(combo))\n	return combo, base64.StdEncoding.EncodeToString(hash.Sum(nil))\n}\n'})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"SECRET=<secret_value>\n\ntime=$(date +%s)\nexpiry=8400\nusername=$(( $time + $expiry )):${username}\necho username: ${username}\necho password:\necho -n $username | openssl dgst -binary -sha1 -hmac $SECRET | openssl base64\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-js",children:"var crypto = require('crypto');\n\nfunction getTURNCredentials(name, secret) {\n  var unixTimeStamp = parseInt(Date.now() / 1000) + 24 * 3600, // this credential would be valid for the next 24 hours\n    username = [unixTimeStamp, name].join(':'),\n    password,\n    hmac = crypto.createHmac('sha1', secret);\n  hmac.setEncoding('base64');\n  hmac.write(username);\n  hmac.end();\n  password = hmac.read();\n  return {\n    username: username,\n    password: password,\n  };\n}\n"})}),"\n",(0,t.jsx)(e.h1,{id:"faq",children:"FAQ"}),"\n",(0,t.jsx)(e.h2,{id:"server-stun-returned-an-error-with-code701",children:"server stun returned an error with code=701"}),"\n",(0,t.jsx)(e.p,{children:"701 - none of the ICE candidates were able to successfully make contact with the STUN or TURN server"}),"\n",(0,t.jsx)(e.h2,{id:"self-signed-certificates-for-turn-server",children:"self-signed certificates for Turn Server"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"openssl req -x509 -newkey rsa:2048 -keyout turn_server_pkey.pem -out turn_server_cert.pem -days 3650 -nodes\nturnserver -n -L 0.0.0.0 -v -a -f -r example -u test:test --cert turn_server_cert.pem --pkey turn_server_pkey.pem --oauth --web-admin\n"})}),"\n",(0,t.jsx)(e.h2,{id:"incoming-packet-create_permission-processed-error-443-peer-address-family-mismatch-4",children:"incoming packet CREATE_PERMISSION processed, error 443: Peer Address Family Mismatch (4)"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"1 - handle_turn_refresh"}),"\n",(0,t.jsx)(e.li,{children:"2 - handle_turn_connect"}),"\n",(0,t.jsx)(e.li,{children:"3 - handle_turn_channel_bind"}),"\n",(0,t.jsx)(e.li,{children:"4 - handle_turn_create_permission"}),"\n"]})]})}function h(n={}){let{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(o,{...n})}):o(n)}},17776:function(n,e,r){r.d(e,{R:()=>l,x:()=>c});var s=r(7378);let t={},i=s.createContext(t);function l(n){let e=s.useContext(i);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),s.createElement(i.Provider,{value:e},n.children)}}}]);