"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["63883"],{67605:function(n,e,i){i.r(e),i.d(e,{frontMatter:()=>l,toc:()=>o,default:()=>u,metadata:()=>t,assets:()=>d,contentTitle:()=>a});var t=JSON.parse('{"id":"os/ubuntu/README","title":"Ubuntu","description":"- Server","source":"@site/../notes/os/ubuntu/README.md","sourceDirName":"os/ubuntu","slug":"/os/ubuntu/","permalink":"/notes/os/ubuntu/","draft":false,"unlisted":false,"editUrl":"https://github.com/wenerme/wener/edit/master/notes/../notes/os/ubuntu/README.md","tags":[],"version":"current","lastUpdatedBy":"wener","lastUpdatedAt":1754277663000,"frontMatter":{"title":"Ubuntu"},"sidebar":"docs","previous":{"title":"Synology","permalink":"/notes/os/synology"},"next":{"title":"Ubuntu Version","permalink":"/notes/os/ubuntu/version"}}'),s=i(86106),r=i(17776);let l={title:"Ubuntu"},a="Ubuntu",d={},o=[{value:"Nvidia GPU Driver",id:"nvidia-gpu-driver",level:2},{value:"Nvidia cuDNN",id:"nvidia-cudnn",level:2},{value:"Docker",id:"docker",level:2},{value:"Nvidia Docker",id:"nvidia-docker",level:2}];function c(n){let e={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"ubuntu",children:"Ubuntu"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Server\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\u4E0B\u8F7D ",(0,s.jsx)(e.a,{href:"https://ubuntu.com/download/server",children:"https://ubuntu.com/download/server"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["docker image adoption\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"nvidia/cuda"}),"\n",(0,s.jsx)(e.li,{children:"vllm"}),"\n",(0,s.jsx)(e.li,{children:"PyTorch"}),"\n",(0,s.jsx)(e.li,{children:"Ollama"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["HWE Kernel\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://wiki.ubuntu.com/Kernel/LTSEnablementStack",children:"HWE Kernel"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://wiki.ubuntu.com/Kernel",children:"Kernel"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\u53C2\u8003\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"http://mirrors.aliyun.com/ubuntu-releases/",children:"http://mirrors.aliyun.com/ubuntu-releases/"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# \u4E0B\u8F7D, dd \u5230\u542F\u52A8\u76D8, \u7136\u540E\u542F\u52A8, \u5B89\u88C5\ncurl -LO https://releases.ubuntu.com/24.04.2/ubuntu-24.04.2-live-server-amd64.iso\n# \u5236\u4F5C Live USB\ndd if=./ubuntu-24.04.2-live-server-amd64.iso of=/dev/rdisk6 status=progress bs=4M\n\n# \u76F4\u63A5\u5B89\u88C5\u5230 USB\nqemu-system-x86_64 -m 8g -smp 4 -hda /dev/rdisk6 -cdrom ./ubuntu-24.04.2-live-server-amd64.iso -net nic,model=virtio,mac=52:54:00:12:34:56 -net user,hostfwd=tcp::2222-:22 -boot d\n\napt install -y btop build-essential curl dialog git htop iotop iputils-ping jq lsof nano pip pipx python3 python3-pip sysstat wget tree\n\ncurl -LO https://github.com/fastfetch-cli/fastfetch/releases/download/2.43.0/fastfetch-linux-amd64.deb\ndpkg -i fastfetch-linux-amd64.deb\n\n# UEFI\nbootctl status | grep SecureBoot\n\n# check firewall\nsudo ufw status\n"})}),"\n",(0,s.jsx)(e.h2,{id:"nvidia-gpu-driver",children:"Nvidia GPU Driver"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["nvidia-headless-no-dkms-XXX-server\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u5982\u679C\u4E0D\u9700\u8981 X11 \u6216 Wayland"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# for NVIDIA GPU\napt install -y nvtop\ncat /proc/driver/nvidia/version\n\nlspci | grep -i nvidia\nlspci -v | grep -A 7 NVIDIA\n\nubuntu-drivers list\nubuntu-drivers list --gpgpu\n\nubuntu-drivers install --gpgpu\n\napt install nvidia-driver-570-server\n\nnvidia-smi\n\nsystemctl status systemd-modules-load\n\ndmesg | grep -i nvidia\njournalctl -b 0 -k | grep -i nvidia\njournalctl -b 0 -u systemd-modules-load\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"\u7981\u7528 Nouveau"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"/etc/modprobe.d/blacklist-nouveau.conf"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"blacklist nouveau\noptions nouveau modeset=0\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"sudo update-initramfs -u\nsudo reboot\n"})}),"\n",(0,s.jsx)(e.h2,{id:"nvidia-cudnn",children:"Nvidia cuDNN"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://docs.nvidia.com/cuda/cuda-installation-guide-linux/#network-repo-installation-for-ubuntu",children:"https://docs.nvidia.com/cuda/cuda-installation-guide-linux/#network-repo-installation-for-ubuntu"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# ubuntu2204/x86_64\nwget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-keyring_1.1-1_all.deb\nsudo dpkg -i cuda-keyring_1.1-1_all.deb\n\nsudo apt update\n# cuda-toolkit\n# nvidia-gds\n# cuda-compat\n\napt install libcudnn9-cuda-12\n\n# \u7248\u672C\nnvcc --version\nnvidia-smi\n\napt list --installed | grep -i cuda\n\n# \u5347\u7EA7\u7248\u672C\nsudo apt remove nvidia-cuda-toolkit nvidia-cuda-dev\nsudo apt install cuda-toolkit-12-8\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-py",metastring:'title="cuda.py"',children:'import torch\n\n# \u68C0\u67E5 PyTorch \u7248\u672C\nprint(f"PyTorch Version: {torch.__version__}")\n\n# \u68C0\u67E5 CUDA \u662F\u5426\u53EF\u7528\nis_cuda_available = torch.cuda.is_available()\nprint(f"CUDA Available: {is_cuda_available}")\n\nif is_cuda_available:\n    # \u68C0\u67E5 PyTorch \u7F16\u8BD1\u65F6\u4F7F\u7528\u7684 CUDA \u7248\u672C\n    print(f"PyTorch CUDA Version: {torch.version.cuda}")\n    # \u83B7\u53D6\u5F53\u524D GPU \u7684\u540D\u79F0\n    print(f"GPU Name: {torch.cuda.get_device_name(0)}")\n    # \u83B7\u53D6\u5F53\u524D GPU \u7684 CUDA \u8BA1\u7B97\u80FD\u529B\n    print(f"GPU Compute Capability: {torch.cuda.get_device_capability(0)}")\nelse:\n    print("CUDA is not available to PyTorch. Please check your installation and drivers.")\n'})}),"\n",(0,s.jsx)(e.h2,{id:"docker",children:"Docker"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\u539F\u59CB\u7AD9\u70B9\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://download.docker.com/linux/ubuntu/",children:"https://download.docker.com/linux/ubuntu/"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\u955C\u50CF\u7AD9\u70B9\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://mirrors.aliyun.com/docker-ce/linux/ubuntu/",children:"https://mirrors.aliyun.com/docker-ce/linux/ubuntu/"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'sudo apt-get update\nsudo apt-get install ca-certificates curl\nsudo install -m 0755 -d /etc/apt/keyrings\nsudo curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc\nsudo chmod a+r /etc/apt/keyrings/docker.asc\n\necho "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://mirrors.aliyun.com/docker-ce/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" \\\n  | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\nsudo apt-get update\n\nsudo apt-get -y install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n\n#\nsudo usermod -aG docker $USER\nnewgrp docker\n'})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"\u4F7F\u7528 /data/docker \u4F5C\u4E3A Docker \u7684\u6570\u636E\u76EE\u5F55"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"sudo rsync -aqxP /var/lib/docker/ /data/docker/\n\nsudo nano /etc/docker/daemon.json\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "data-root": "/data/docker"\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"nvidia-docker",children:"Nvidia Docker"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/NVIDIA/nvidia-container-toolkit",children:"NVIDIA/nvidia-container-toolkit"})}),"\n",(0,s.jsxs)(e.li,{children:["\u539F\u59CB\u7AD9\u70B9\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://nvidia.github.io/nvidia-docker/",children:"https://nvidia.github.io/nvidia-docker/"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\u955C\u50CF\u7AD9\u70B9\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"https://mirrors.ustc.edu.cn/libnvidia-container/",children:"https://mirrors.ustc.edu.cn/libnvidia-container/"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://mirrors.ustc.edu.cn/help/libnvidia-container.html",children:"https://mirrors.ustc.edu.cn/help/libnvidia-container.html"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\u5B98\u65B9\u6587\u6863\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html",children:"https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/supported-platforms.html",children:"\u652F\u6301\u5E73\u53F0"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# \u6CA1\u6709 ubuntu24.04 \u76EE\u5F55\ndistribution=$(\n  . /etc/os-release\n  echo $ID$VERSION_ID\n) \\\n  && curl -fsSL https://mirrors.ustc.edu.cn/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \\\n  && curl -s -L https://mirrors.ustc.edu.cn/libnvidia-container/$distribution/nvidia-container-toolkit.list \\\n  | sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' \\\n    | sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list\n\n# \u53EF\u4EE5\u4F7F\u7528 stable \u76EE\u5F55\ncurl -fsSL https://mirrors.ustc.edu.cn/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \\\n  && curl -s -L https://mirrors.ustc.edu.cn/libnvidia-container/stable/deb/nvidia-container-toolkit.list \\\n  | sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' \\\n    | sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list\n\n# \u4FEE\u6539 nvidia-container-toolkit.list \u91CC\u7684\u5730\u5740\nnano /etc/apt/sources.list.d/nvidia-container-toolkit.list\n\napt update\napt install -y nvidia-container-toolkit\n\n# \u914D\u7F6E /etc/docker/daemon.json \u6DFB\u52A0 runtime\nsudo nvidia-ctk runtime configure --runtime=docker\n\nsystemctl restart docker\n\n# ensure nvidia-container-runtime is installed\ndocker run --rm -it --gpus all docker.m.daocloud.io/nvidia/cuda:12.9.0-base-ubuntu24.04 nvidia-smi\n\n# try ollama\ndocker run --rm -it --gpus all \\\n  -v /data/home/.ollama/:/root/.ollama/ \\\n  -p 11434:11434 \\\n  -e OLLAMA_CONTEXT_LENGTH=8192 \\\n  -e OLLAMA_FLASH_ATTENTION=1 \\\n  -e OLLAMA_KV_CACHE_TYPE=q4_0 \\\n  --name ollama docker.m.daocloud.io/ollama/ollama:0.7.1\n\n# try vllm\ndocker pull docker.m.daocloud.io/vllm/vllm-openai:v0.8.5\ndocker run --rm -it --gpus all \\\n  --runtime nvidia --gpus all \\\n  -p 8080:8080 \\\n  --ipc=host \\\n  -v /data/home/.cache/huggingface:/root/.cache/huggingface \\\n  --entrypoint bash \\\n  --name vllm docker.m.daocloud.io/vllm/vllm-openai:v0.8.5\n"})})]})}function u(n={}){let{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(c,{...n})}):c(n)}},17776:function(n,e,i){i.d(e,{R:()=>l,x:()=>a});var t=i(7378);let s={},r=t.createContext(s);function l(n){let e=t.useContext(r);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:l(n.components),t.createElement(r.Provider,{value:e},n.children)}}}]);