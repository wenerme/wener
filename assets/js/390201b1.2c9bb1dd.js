"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["52380"],{47644:function(e,o,t){t.r(o),t.d(o,{frontMatter:()=>a,toc:()=>d,default:()=>l,metadata:()=>n,assets:()=>c,contentTitle:()=>i});var n=JSON.parse('{"id":"devops/kubernetes/app/argo/workflow/argo-workflow-faq","title":"FAQ","description":"failed to save outputs timed out waiting for the condition","source":"@site/../notes/devops/kubernetes/app/argo/workflow/argo-workflow-faq.md","sourceDirName":"devops/kubernetes/app/argo/workflow","slug":"/devops/kubernetes/app/argo/workflow/faq","permalink":"/notes/devops/kubernetes/app/argo/workflow/faq","draft":false,"unlisted":false,"editUrl":"https://github.com/wenerme/wener/edit/master/notes/../notes/devops/kubernetes/app/argo/workflow/argo-workflow-faq.md","tags":[{"inline":true,"label":"FAQ","permalink":"/notes/tags/faq"}],"version":"current","lastUpdatedBy":"wener","lastUpdatedAt":1693804740000,"frontMatter":{"tags":["FAQ"]},"sidebar":"docs","previous":{"title":"Executor","permalink":"/notes/devops/kubernetes/app/argo/workflow/executor"},"next":{"title":"ArgoCD","permalink":"/notes/devops/kubernetes/app/argocd/"}}'),s=t(86106),r=t(17776);let a={tags:["FAQ"]},i="FAQ",c={},d=[{value:"failed to save outputs: Failed to establish pod watch: timed out waiting for the condition",id:"failed-to-save-outputs-failed-to-establish-pod-watch-timed-out-waiting-for-the-condition",level:2},{value:"failed to save outputs: unexpected non 200 status code: 403, body: Forbidden (user=system:serviceaccount:argo, verb=get, resource=nodes, subresource=proxy)",id:"failed-to-save-outputs-unexpected-non-200-status-code-403-body-forbidden-usersystemserviceaccountargo-verbget-resourcenodes-subresourceproxy",level:2}];function u(e){let o={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.header,{children:(0,s.jsx)(o.h1,{id:"faq",children:"FAQ"})}),"\n",(0,s.jsx)(o.h2,{id:"failed-to-save-outputs-failed-to-establish-pod-watch-timed-out-waiting-for-the-condition",children:"failed to save outputs: Failed to establish pod watch: timed out waiting for the condition"}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsxs)(o.li,{children:["argo \u4F7F\u7528 ns \u4E0B\u7684 default ServiceAccount\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsx)(o.li,{children:"\u4E00\u822C\u8BE5 sa \u6CA1\u6709 watch pod \u7684\u6743\u9650"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-bash",children:"# namespaced \u5B89\u88C5 - SA \u65E0\u6743\u9650\nkubectl auth can-i get pod --as=system:serviceaccount:argo:default\n"})}),"\n",(0,s.jsx)(o.p,{children:(0,s.jsx)(o.strong,{children:"\u6700\u5C0F\u6743\u9650"})}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-yaml",children:"apiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: workflow-role\nrules:\n  # pod get/watch is used to identify the container IDs of the current pod\n  # pod patch is used to annotate the step's outputs back to controller (e.g. artifact location)\n  - apiGroups:\n      - ''\n    resources:\n      - pods\n    verbs:\n      - get\n      - watch\n      - patch\n  # logs get/watch are used to get the pods logs for script outputs, and for log archival\n  - apiGroups:\n      - ''\n    resources:\n      - pods/log\n    verbs:\n      - get\n      - watch\n"})}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsxs)(o.li,{children:["\u53C2\u8003\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsx)(o.li,{children:(0,s.jsx)(o.a,{href:"https://github.com/argoproj/argo-workflows/issues/2522",children:"https://github.com/argoproj/argo-workflows/issues/2522"})}),"\n",(0,s.jsx)(o.li,{children:(0,s.jsx)(o.a,{href:"https://github.com/argoproj/argo-workflows/blob/master/docs/workflow-rbac.md",children:"https://github.com/argoproj/argo-workflows/blob/master/docs/workflow-rbac.md"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(o.h2,{id:"failed-to-save-outputs-unexpected-non-200-status-code-403-body-forbidden-usersystemserviceaccountargo-verbget-resourcenodes-subresourceproxy",children:"failed to save outputs: unexpected non 200 status code: 403, body: Forbidden (user=system:serviceaccount:argo:default, verb=get, resource=nodes, subresource=proxy)"}),"\n",(0,s.jsxs)(o.p,{children:[(0,s.jsx)(o.code,{children:"nodes/proxy"})," \u6743\u9650\u4E0D\u8DB3\uFF0C\u8BE5\u8D44\u6E90\u662F\u96C6\u7FA4\u8D44\u6E90"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-yaml",children:"---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: argo-executor\nrules:\n  # pod get/watch is used to identify the container IDs of the current pod\n  # pod patch is used to annotate the step's outputs back to controller (e.g. artifact location)\n  - apiGroups:\n      - ''\n    resources:\n      - pods\n    verbs:\n      - get\n      - watch\n      - patch\n  # logs get/watch are used to get the pods logs for script outputs, and for log archival\n  - apiGroups:\n      - ''\n    resources:\n      - pods/log\n      - nodes/proxy\n    verbs:\n      - get\n      - watch\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: argo-executor\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: argo-executor\nsubjects:\n  - kind: ServiceAccount\n    name: default\n    namespace: argo\n"})})]})}function l(e={}){let{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},17776:function(e,o,t){t.d(o,{R:()=>a,x:()=>i});var n=t(7378);let s={},r=n.createContext(s);function a(e){let o=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(o):{...o,...e}},[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(r.Provider,{value:o},e.children)}}}]);