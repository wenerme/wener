"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["78960"],{29413:function(e,n,s){s.r(n),s.d(n,{frontMatter:()=>l,toc:()=>d,default:()=>h,metadata:()=>r,assets:()=>c,contentTitle:()=>o});var r=JSON.parse('{"id":"service/api/xds","title":"xds","description":"\u6700\u65E9\u7531 Envoy \u5F00\u53D1\uFF0C\u7528\u4E8E\u6784\u5EFA ServiceMesh \u7EDF\u4E00\u7684 DP \u63A5\u53E3\u3002","source":"@site/../notes/service/api/xds.md","sourceDirName":"service/api","slug":"/service/api/xds","permalink":"/notes/service/api/xds","draft":false,"unlisted":false,"editUrl":"https://github.com/wenerme/wener/edit/master/notes/../notes/service/api/xds.md","tags":[],"version":"current","lastUpdatedBy":"wener","lastUpdatedAt":1659680046000,"frontMatter":{"title":"xds"},"sidebar":"docs","previous":{"title":"twirp","permalink":"/notes/service/api/twirp"},"next":{"title":"Auth","permalink":"/notes/service/auth/"}}'),i=s(86106),t=s(17776);let l={title:"xds"},o="xds",c={},d=[{value:"gRPC xDS",id:"grpc-xds",level:2}];function a(e){let n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"xds",children:"xds"})}),"\n",(0,i.jsx)(n.p,{children:"\u6700\u65E9\u7531 Envoy \u5F00\u53D1\uFF0C\u7528\u4E8E\u6784\u5EFA ServiceMesh \u7EDF\u4E00\u7684 DP \u63A5\u53E3\u3002"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["xDS API - \u4E00\u5957 DP API - Mesh CP <-> Proxies\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u7528\u4E8E gRPC Mesh - ",(0,i.jsx)(n.code,{children:"xds://pkg.service"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\u8D1F\u8F7D\u5747\u8861\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"LDS - Listener Discovery Service - type.googleapis.com/envoy.config.listener.v3.Listener"}),"\n",(0,i.jsx)(n.li,{children:"RDS - Route Discovery Service - type.googleapis.com/envoy.config.route.v3.RouteConfiguration"}),"\n",(0,i.jsx)(n.li,{children:"CDS - Cluster Discovery Service - type.googleapis.com/envoy.config.cluster.v3.Cluster"}),"\n",(0,i.jsx)(n.li,{children:"EDS - Endpoint Discovery Service - type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment"}),"\n",(0,i.jsx)(n.li,{children:"ADS - Aggregate Discovery Service - gRPC"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"\u8D1F\u8F7D\u62A5\u544A - LRS"}),"\n",(0,i.jsx)(n.li,{children:"xDSv3"}),"\n",(0,i.jsxs)(n.li,{children:["CP \u5B9E\u73B0\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"GCP Traffic Director"}),"\n",(0,i.jsx)(n.li,{children:"istio"}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/envoyproxy/go-control-plane",children:"envoyproxy/go-control-plane"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["UDPA - Universal Data Plane API\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u670D\u52A1\u53D1\u73B0\uFF0C\u8D1F\u8F7D\u5747\u8861\u5206\u914D\uFF0C\u8DEF\u7531\u53D1\u73B0\uFF0C\u76D1\u542C\u5668\u914D\u7F6E\uFF0C\u5B89\u5168\u53D1\u73B0\uFF0C\u8D1F\u8F7D\u62A5\u544A\uFF0C\u8FD0\u884C\u72B6\u51B5\u68C0\u67E5\u59D4\u6258"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\u53C2\u8003\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/envoyproxy/data-plane-api",children:"envoyproxy/data-plane-api"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.envoyproxy.io/docs/envoy/latest/api-docs/xds_protocol",children:"xDS REST and gRPC protocol"})}),"\n"]}),"\n"]}),"\n"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Role"}),(0,i.jsx)(n.th,{children:"For"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"gRPC"}),(0,i.jsx)(n.td,{children:"\u9AD8\u6027\u80FD\u901A\u4FE1"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Kubernetes"}),(0,i.jsx)(n.td,{children:"\u670D\u52A1\u6CE8\u518C\u3001\u670D\u52A1\u53D1\u73B0\u3001\u5065\u5EB7\u68C0\u6D4B"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Istio"}),(0,i.jsx)(n.td,{children:"\u8DEF\u7531\u3001\u8D1F\u8F7D\uFF0C\u670D\u52A1\u6CBB\u7406\uFF1A\u7194\u65AD\u3001\u91CD\u62FE\uFF0C\u5B89\u5168\uFF1A\u8BA4\u8BC1\u3001mTLS\uFF0C\u53EF\u89C2\u5BDF\u6027\uFF1Atrace\u3001log\u3001metrics"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"grpc-xds",children:"gRPC xDS"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"GRPC_XDS_BOOTSTRAP"}),"\n",(0,i.jsxs)(n.li,{children:["\u53C2\u8003\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/grpc-ecosystem/grpcdebug",children:"grpc-ecosystem/grpcdebug"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u53EF\u7528\u4E8E debug xds"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/salrashid123/grpc_xds",children:"salrashid123/grpc_xds"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://grpc.github.io/grpc/cpp/md_doc_grpc_xds_features.html",children:"xDS Features in gRPC"})}),"\n",(0,i.jsxs)(n.li,{children:["go grpc xds ",(0,i.jsx)(n.a,{href:"https://github.com/grpc/grpc-go/blob/master/examples/features/xds/README.md",children:"example"})]}),"\n",(0,i.jsxs)(n.li,{children:["gRPC ",(0,i.jsx)(n.a,{href:"https://github.com/grpc/proposal/blob/master/A27-xds-global-load-balancing.md",children:"A27: xDS-Based Global Load Balancing"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  // The xDS server to talk to.  The value is an array to allow for a\n  // future change to add support for failing over to a secondary xDS server\n  // if the primary is down, but for now, only the first entry in the\n  // array will be used.\n  "xds_servers": [\n    {\n      "server_uri": "", //<string containing URI of xds server>,\n      // List of channel creds; client will stop at the first type it\n      // supports.  This field is required and must contain at least one\n      // channel creds type that the client supports.\n      "channel_creds": [\n        {\n          "type": "", // google_default, insecure\n          // The "config" field is optional; it may be missing if the\n          // credential type does not require config parameters.\n          "config": "" //<JSON object containing config for the type>\n        }\n      ],\n      "server_features": ["xds_v3"]\n    }\n  ],\n  // JSON of proto\n  // https://github.com/envoyproxy/data-plane-api/blob/1adb5d54abb0e28ca409254d26fad1cf5535239b/envoy/api/v2/core/base.proto#L85-L118\n  "node": {\n    "id": "",\n    "cluster": "",\n    "metadata": {},\n    "locality": {\n      "region": "",\n      // https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html\n      // https://cloud.google.com/compute/docs/regions-zones/\n      "zone": "",\n      "sub_zone": ""\n    },\n    "build_version": ""\n  }\n}\n'})})]})}function h(e={}){let{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},17776:function(e,n,s){s.d(n,{R:()=>l,x:()=>o});var r=s(7378);let i={},t=r.createContext(i);function l(e){let n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);