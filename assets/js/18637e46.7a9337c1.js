"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["30260"],{8545:function(n,e,i){i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>d});var t=i(18525),s=i(86106),l=i(17776);let a={slug:"ml-first-try",title:"\u7B2C\u4E00\u6B21\u5C1D\u8BD5\u673A\u5668\u5B66\u4E60",tags:["Setup","Ubuntu","Debian"]},r="ML First Try",c={authorsImageUrls:[]},d=[{value:"GCP Deep Learning VM",id:"gcp-deep-learning-vm",level:2},{value:"Could not load library libcudnn_cnn_train.so.8",id:"could-not-load-library-libcudnn_cnn_trainso8",level:3},{value:"Debian",id:"debian",level:2},{value:"Ubuntu",id:"ubuntu",level:2},{value:"ENV",id:"env",level:2},{value:"nvtop",id:"nvtop",level:2},{value:"Non-monotonic DTS; previous: 22695088, current: 22695088; changing to 22695089. This may result in incorrect timestamps in the output file.",id:"non-monotonic-dts-previous-22695088-current-22695088-changing-to-22695089-this-may-result-in-incorrect-timestamps-in-the-output-file",level:2},{value:"cache",id:"cache",level:2}];function o(n){let e={a:"a",annotation:"annotation",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,l.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.p,{children:"\u7B2C\u4E00\u6B21\u5F00\u59CB\u6B63\u5F0F\u63A5\u89E6\u673A\u5668\u5B66\u4E60\u9886\u57DF\uFF0C\u8BB0\u5F55\u548C\u6574\u7406\u4E00\u4E9B\u4E2D\u95F4\u8FC7\u7A0B\u3002"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Linode\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["32 GB + RTX6000 GPU x1 + 8C 32GB\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsxs)(e.span,{className:"katex",children:[(0,s.jsx)(e.span,{className:"katex-mathml",children:(0,s.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,s.jsxs)(e.semantics,{children:[(0,s.jsxs)(e.mrow,{children:[(0,s.jsx)(e.mn,{children:"1000"}),(0,s.jsx)(e.mi,{mathvariant:"normal",children:"/"}),(0,s.jsx)(e.mi,{children:"m"}),(0,s.jsx)(e.mi,{children:"o"}),(0,s.jsx)(e.mo,{separator:"true",children:","})]}),(0,s.jsx)(e.annotation,{encoding:"application/x-tex",children:"1000/mo, "})]})})}),(0,s.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,s.jsxs)(e.span,{className:"base",children:[(0,s.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.jsx)(e.span,{className:"mord",children:"1000/"}),(0,s.jsx)(e.span,{className:"mord mathnormal",children:"m"}),(0,s.jsx)(e.span,{className:"mord mathnormal",children:"o"}),(0,s.jsx)(e.span,{className:"mpunct",children:","})]})})]}),"1.50/hr"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.li,{children:"\u53EA\u6709 eu-center \u5730\u533A\uFF0C\u592A\u6162\u592A\u6162\u4E86"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["GCP\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["NVIDIA Tesla L4 + 4 vCPU + 16 GB\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["US",(0,s.jsxs)(e.span,{className:"katex",children:[(0,s.jsx)(e.span,{className:"katex-mathml",children:(0,s.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,s.jsxs)(e.semantics,{children:[(0,s.jsxs)(e.mrow,{children:[(0,s.jsx)(e.mn,{children:"598.46"}),(0,s.jsx)(e.mi,{mathvariant:"normal",children:"/"}),(0,s.jsx)(e.mi,{children:"m"}),(0,s.jsx)(e.mi,{children:"o"}),(0,s.jsx)(e.mo,{separator:"true",children:","}),(0,s.jsx)(e.mi,{children:"U"}),(0,s.jsx)(e.mi,{children:"S"})]}),(0,s.jsx)(e.annotation,{encoding:"application/x-tex",children:"598.46/mo, US"})]})})}),(0,s.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,s.jsxs)(e.span,{className:"base",children:[(0,s.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.jsx)(e.span,{className:"mord",children:"598.46/"}),(0,s.jsx)(e.span,{className:"mord mathnormal",children:"m"}),(0,s.jsx)(e.span,{className:"mord mathnormal",children:"o"}),(0,s.jsx)(e.span,{className:"mpunct",children:","}),(0,s.jsx)(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,s.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10903em"},children:"U"}),(0,s.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.05764em"},children:"S"})]})})]}),"0.82/hr"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.li,{children:"\u6709\u4E9A\u592A\u5730\u533A - \u53F0\u6E7E"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"gcp-deep-learning-vm",children:"GCP Deep Learning VM"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\u5B58\u50A8\u81F3\u5C11 100 GB+\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"3854 \u5F20\u56FE\u7247\uFF0C\u7F13\u5B58\u4E3A .npy"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.li,{children:"\u57FA\u4E8E Debian 11 \u548C Ubuntu 22.04"}),"\n",(0,s.jsx)(e.li,{children:"SSH \u8FDB\u5165\u7684\u65F6\u5019\u4F1A\u63D0\u793A\u5B89\u88C5 driver"}),"\n",(0,s.jsxs)(e.li,{children:["\u9ED8\u8BA4\u73AF\u5883\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"conda"}),"\n",(0,s.jsx)(e.li,{children:"numpy"}),"\n",(0,s.jsx)(e.li,{children:"scipy"}),"\n",(0,s.jsx)(e.li,{children:"matplotlib"}),"\n",(0,s.jsx)(e.li,{children:"pandas"}),"\n",(0,s.jsx)(e.li,{children:"nltk"}),"\n",(0,s.jsx)(e.li,{children:"pillow"}),"\n",(0,s.jsx)(e.li,{children:"scikit-image"}),"\n",(0,s.jsx)(e.li,{children:"opencv-python"}),"\n",(0,s.jsx)(e.li,{children:"scikit-learn"}),"\n",(0,s.jsx)(e.li,{children:"CUDA, CuNN, NCCL"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://cloud.google.com/deep-learning-vm/docs/introduction",children:"https://cloud.google.com/deep-learning-vm/docs/introduction"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"sudo apt install -y neofetch ffmpeg libc-bin\n\n# python \u9ED8\u8BA4\u6765\u81EA\u4E8E /opt/conda/bin/python\npip install --upgrade pip\n\n# \u786E\u5B9A\u73AF\u5883\u9A71\u52A8\u6B63\u5E38\ncat /proc/driver/nvidia/version\nnvidia-smi\nsudo docker run --gpus all nvidia/cuda:12.5.0-base-ubuntu22.04 nvidia-smi\n\n#\nsudo apt install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev git\n#pip install nvidia-cublas-cu11 nvidia-cudnn-cu11\n\nsudo apt install -y docker-buildx-plugin docker-compose-plugin\n\n# ultralytics ->\n# py-cpuinfo, mpmath, triton, sympy, opencv-python, nvidia-nvtx-cu12, nvidia-nvjitlink-cu12, nvidia-nccl-cu12, nvidia-curand-cu12, nvidia-cufft-cu12, nvidia-cuda-runtime-cu12, nvidia-cuda-nvrtc-cu12, nvidia-cuda-cupti-cu12, nvidia-cublas-cu12, nvidia-cusparse-cu12, nvidia-cudnn-cu12, nvidia-cusolver-cu12, torch, ultralytics-thop, torchvision, ultralytics\n\n# better running in tmux\ntmux new -A -s main\n"})}),"\n",(0,s.jsx)(e.h3,{id:"could-not-load-library-libcudnn_cnn_trainso8",children:"Could not load library libcudnn_cnn_train.so.8"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"/opt/conda/lib/python3.10/site-packages/nvidia/cudnn/lib/libcudnn_cnn_train.so.8"}),"\n",(0,s.jsx)(e.li,{children:"/opt/conda/lib/python3.10/site-packages/torch/lib"}),"\n",(0,s.jsx)(e.li,{children:"/usr/local/cuda/lib64"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"Could not load library libcudnn_cnn_train.so.8. Error: /usr/local/cuda/lib64/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn5infer22queryClusterPropertiesERPhS3_, version libcudnn_cnn_infer.so.8\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"ldd /opt/conda/lib/python3.10/site-packages/nvidia/cudnn/lib/libcudnn_cnn_train.so.8\nldd /usr/local/cuda/lib64/libcudnn_cnn_train.so.8\n\n# \u4FEE\u6539\u540E\u5C31\u53EF\u4EE5\u4E86\nLD_LIBRARY_PATH=/opt/conda/lib/python3.10/site-packages/nvidia/cudnn/lib/:$LD_LIBRARY_PATH yolo\n\n#LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/conda/lib/python3.10/site-packages/torch/lib\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/pytorch/pytorch/issues/104591",children:"https://github.com/pytorch/pytorch/issues/104591"})}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"debian",children:"Debian"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'apt update\napt -y upgrade\n\napt install -y build-essential python3 python3-pip pipx htop curl wget git jq neofetch\n\n# Components \u589E\u52A0 contrib non-free non-free-firmware\nnano /etc/apt/sources.list.d/debian.sources\napt install -y firmware-misc-nonfree\n\n#\napt install -y nvidia-detect nvidia-driver\n\n# nvidia-cuda-toolkit - \u975E\u5E38\u5927\n\nnvidia-detect\n\n# Docker Debian\n# ====================\n# Add Docker\'s official GPG key:\nsudo apt-get update\nsudo apt-get install ca-certificates curl\nsudo install -m 0755 -d /etc/apt/keyrings\nsudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc\nsudo chmod a+r /etc/apt/keyrings/docker.asc\n\n# Add the repository to Apt sources:\necho "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \\\n  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" \\\n  | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\nsudo apt-get update\n\nsudo apt-get -y install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n'})}),"\n",(0,s.jsx)(e.h2,{id:"ubuntu",children:"Ubuntu"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Ubuntu 22.04 LTS"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'apt update\napt -y upgrade\n\napt install -y build-essential python3 python3-pip pipx htop curl wget git jq neofetch\npipx ensurepath\n#pipx install poetry\n#curl https://pyenv.run | bash\n\n# Nvdia Driver\n# ====================\nlspci -nn | grep -E -i "3d|display|vga"\n\n# https://ubuntu.com/server/docs/nvidia-drivers-installation\n# https://www.nvidia.com/download/index.aspx\n# https://www.nvidia.com/Download/Find.aspx\n# apt install -y ubuntu-drivers-common\n# ubuntu-drivers list --gpgpu # \u6240\u6709\u652F\u6301\u7684 GPU\n# ubuntu-drivers install # \u81EA\u52A8\u68C0\u6D4B\u5B89\u88C5\u6240\u6709\u9A71\u52A8\n# ubuntu-drivers install --gpgpu\n# ubuntu-drivers install --gpgpu nvidia:535-server\n# apt install nvidia-utils-535-server\n\n# nvidia-utils-535-server\napt install -y nvidia-driver-535\n\n# reboot # \u91CD\u542F\u540E\u624D\u80FD\u751F\u6548\n\nnvidia-smi\ncat /proc/driver/nvidia/version\n\n#sudo add-apt-repository ppa:graphics-drivers/ppa\n#sudo apt-get update\n\n# Docker Ubuntu\n# ====================\nsudo apt-get update\nsudo apt-get install ca-certificates curl\nsudo install -m 0755 -d /etc/apt/keyrings\nsudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc\nsudo chmod a+r /etc/apt/keyrings/docker.asc\n\n# Add the repository to Apt sources:\necho "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" \\\n  | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\nsudo apt-get update\n\nsudo apt-get -y install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n\n# Nvidia Container Toolkit\n# ====================\n# https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html\ncurl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \\\n  && curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list \\\n  | sed \'s#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g\' \\\n    | sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list\nsed -i -e \'/experimental/ s/^#//g\' /etc/apt/sources.list.d/nvidia-container-toolkit.list\n\nsudo apt-get update\nsudo apt-get install -y nvidia-container-toolkit nvidia-docker2\n\nsudo systemctl restart docker\n\n# \u6D4B\u8BD5\n# https://hub.docker.com/r/nvidia/cuda\nsudo docker run --gpus all nvidia/cuda:12.5.0-base-ubuntu22.04 nvidia-smi\n'})}),"\n",(0,s.jsx)(e.h2,{id:"env",children:"ENV"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# rclone for dataset sync\n# ====================\ncurl -Lo /tmp/rclone.deb https://github.com/rclone/rclone/releases/download/v1.67.0/rclone-v1.67.0-linux-amd64.deb\nsudo dpkg -i /tmp/rclone.deb\nrclone --version\n\n# Python\n# ====================\npython3 --version # \u5EFA\u8BAE 3.9-3.11\n\nsudo mkdir -p /data/ml\nsudo chown -R $USER:$USER /data/ml\ncd /data/ml\n\n# YoloV10\n# ====================\ngit clone https://github.com/THU-MIG/yolov10 /data/ml/yolov10\ncd /data/ml/yolov10\npython3 -m venv venv\nsource venv/bin/activate\npip3 install -r requirements.txt\n\n# Yolo\n# ====================\nmkdir -p /data/ml/yolo\ncd /data/ml/yolo\npython3 -m venv venv\nsource venv/bin/activate\npip3 install openvino==2023.2 'datumaro[default]'\npip3 install ultralytics torch torchvision\n\n# rclone for sync\n# ====================\n# \u63A5\u53D7 FTP \u4E0A\u4F20 - \u4FEE\u6539\u8D26\u53F7\u5BC6\u7801\nrclone serve ftp --addr 0.0.0.0:18080 /data/ --user USER --pass PASS\n# \u540C\u6B65 \u4FEE\u6539 IP\u3001\u8D26\u53F7\u5BC6\u7801\n# rclone sync /data/ds/ :ftp,host=127.0.0.1,port=18080,user=USER,pass=$(rclone obscure PASS):ds -P --stats-one-line --transfers 10 -M\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Nvdia Driver\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://www.nvidia.com/en-us/drivers/rtx-enterprise-and-quadro-driver-branch-history/",children:"NVIDIA RTX / Quadro Enterprise Driver Branch History for Windows"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'# for pyenv\napt install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev git\n\npyenv install 3.9\ncd /data/ml/yolov10\npyenv local 3.9\n\ncat << \'EOF\' >> ~/.bashrc\nexport PATH="$HOME/.pyenv/bin:$PATH"\neval "$(pyenv init --path)"\neval "$(pyenv init -)"\neval "$(pyenv virtualenv-init -)"\nEOF\nsource ~/.bashrc\n\n# \u624B\u52A8\nexport PYENV_ROOT="$HOME/.pyenv"\n[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"\neval "$(pyenv init -)"\n\n# \u81EA\u52A8\n# ~/.bashrc\neval "$(pyenv virtualenv-init -)"\n'})}),"\n",(0,s.jsx)(e.h2,{id:"nvtop",children:"nvtop"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"curl -o nvtop -L https://github.com/Syllo/nvtop/releases/download/3.2.0/nvtop-3.2.0-x86_64.AppImage\nchmod +x nvtop\n./nvtop\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"from source"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"git clone https://github.com/Syllo/nvtop.git /data/gits/nvtop\ncd /data/gits/nvtop\nmkdir build\ncd build\ncmake ..\nmake\nsudo make install\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/Syllo/nvtop",children:"https://github.com/Syllo/nvtop"})}),"\n"]}),"\n",(0,s.jsx)(e.h1,{id:"faq",children:"FAQ"}),"\n",(0,s.jsx)(e.h2,{id:"non-monotonic-dts-previous-22695088-current-22695088-changing-to-22695089-this-may-result-in-incorrect-timestamps-in-the-output-file",children:"Non-monotonic DTS; previous: 22695088, current: 22695088; changing to 22695089. This may result in incorrect timestamps in the output file."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"ffmpeg -fflags +genpts -i input.flv -c copy -vsync 1 output.mp4\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["flv -> mp4 \u51FA\u73B0\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u5B9E\u65F6\u89C6\u9891\u6D41\u6296\u52A8\u5BFC\u81F4"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.li,{children:"DTS - Decoding Time Stamp"}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"cache",children:"cache"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# clip gdown huggingface matplotlib pip torch\ndu -sh ~/.cache\n"})})]})}function u(n={}){let{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(o,{...n})}):o(n)}},17776:function(n,e,i){i.d(e,{R:()=>a,x:()=>r});var t=i(7378);let s={},l=t.createContext(s);function a(n){let e=t.useContext(l);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:a(n.components),t.createElement(l.Provider,{value:e},n.children)}},18525:function(n){n.exports=JSON.parse('{"permalink":"/story/ml-first-try","editUrl":"https://github.com/wenerme/wener/edit/master/story/../story/2024/2024-06-15-ml-first-try.md","source":"@site/../story/2024/2024-06-15-ml-first-try.md","title":"\u7B2C\u4E00\u6B21\u5C1D\u8BD5\u673A\u5668\u5B66\u4E60","description":"\u7B2C\u4E00\u6B21\u5F00\u59CB\u6B63\u5F0F\u63A5\u89E6\u673A\u5668\u5B66\u4E60\u9886\u57DF\uFF0C\u8BB0\u5F55\u548C\u6574\u7406\u4E00\u4E9B\u4E2D\u95F4\u8FC7\u7A0B\u3002","date":"2024-06-15T00:00:00.000Z","tags":[{"inline":true,"label":"Setup","permalink":"/story/tags/setup"},{"inline":true,"label":"Ubuntu","permalink":"/story/tags/ubuntu"},{"inline":true,"label":"Debian","permalink":"/story/tags/debian"}],"readingTime":6.21,"hasTruncateMarker":true,"authors":[],"frontMatter":{"slug":"ml-first-try","title":"\u7B2C\u4E00\u6B21\u5C1D\u8BD5\u673A\u5668\u5B66\u4E60","tags":["Setup","Ubuntu","Debian"]},"unlisted":false,"prevItem":{"title":"\u6211\u8BB0\u5F55\u601D\u8003\u7684\u65B9\u5F0F\u7B80\u5355\u603B\u7ED3","permalink":"/story/how-i-note"},"nextItem":{"title":"\u4E3A\u4EC0\u4E48\u9009\u62E9 Alpine Linux?","permalink":"/story/why-alpine"}}')}}]);