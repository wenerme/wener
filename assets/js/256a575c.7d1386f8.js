"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["30580"],{56865:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>o,toc:()=>l,default:()=>h,metadata:()=>i,assets:()=>d,contentTitle:()=>a});var i=JSON.parse('{"id":"voip/asterisk/chan_pjsip","title":"chan_pjsip","description":"- \u57FA\u4E8E pjproject \u5B9E\u73B0\u7684 sip \u901A\u9053","source":"@site/../notes/voip/asterisk/chan_pjsip.md","sourceDirName":"voip/asterisk","slug":"/voip/asterisk/chan_pjsip","permalink":"/notes/voip/asterisk/chan_pjsip","draft":false,"unlisted":false,"editUrl":"https://github.com/wenerme/wener/edit/master/notes/../notes/voip/asterisk/chan_pjsip.md","tags":[],"version":"current","lastUpdatedBy":"wener","lastUpdatedAt":1625926581000,"frontMatter":{"title":"chan_pjsip"},"sidebar":"docs","previous":{"title":"chan_iax","permalink":"/notes/voip/asterisk/chan_iax"},"next":{"title":"chan_sip","permalink":"/notes/voip/asterisk/chan_sip"}}'),s=t(86106),r=t(17776);let o={title:"chan_pjsip"},a="chan_pjsip",d={},l=[{value:"pjsip_wizard.conf",id:"pjsip_wizardconf",level:2},{value:"pjsip.conf",id:"pjsipconf",level:2},{value:"global",id:"global",level:3},{value:"system",id:"system",level:3},{value:"acl",id:"acl",level:3},{value:"transport",id:"transport",level:3},{value:"auth",id:"auth",level:3},{value:"phoneprovr",id:"phoneprovr",level:3},{value:"endpoint",id:"endpoint",level:3},{value:"registration",id:"registration",level:3},{value:"res_pjsip_outbound_registration.c:1061 handle_registration_response: Fatal response &#39;401&#39; received from &#39;sip:192.168.1.2&#39; on registration attempt to &#39;sip:6001@192.168.2.2&#39;, stopping outbound registration",id:"res_pjsip_outbound_registrationc1061-handle_registration_response-fatal-response-401-received-from-sip19216812-on-registration-attempt-to-sip600119216822-stopping-outbound-registration",level:2},{value:"pjproject: .Error sending STUN request: Network is unreachable",id:"pjproject-error-sending-stun-request-network-is-unreachable",level:2}];function c(e){let n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"chan_pjsip",children:"chan_pjsip"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u57FA\u4E8E pjproject \u5B9E\u73B0\u7684 sip \u901A\u9053"}),"\n",(0,s.jsx)(n.li,{children:"pjsip \u529F\u80FD\u5F88\u591A\uFF0C\u56E0\u6B64\u6709\u5F88\u591A\u7684 res_pjsip\uFF0C\u4E5F\u6709\u5F88\u591A\u914D\u7F6E\u9879"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# \u6240\u6709 pjproject \u76F8\u5173\u6A21\u5757\nls /usr/lib/asterisk/modules | grep pj | sort\n"})}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"type"}),(0,s.jsx)(n.th,{children:"meaning"}),(0,s.jsx)(n.th,{children:"desc"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"acl"}),(0,s.jsx)(n.td,{children:"Access Control List"}),(0,s.jsx)(n.td,{children:"res_pjsip_acl, acl.conf \u5F15\u7528"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"aor"}),(0,s.jsx)(n.td,{children:"Address of Record"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"auth"}),(0,s.jsx)(n.td,{children:"Authentication"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"contact"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"domain_alias"}),(0,s.jsx)(n.td,{children:"Domain Alias"}),(0,s.jsx)(n.td,{children:"\u57DF\u540D\u522B\u540D"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"endpoint"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"identify"}),(0,s.jsx)(n.td,{children:"Endpoint Identification"}),(0,s.jsx)(n.td,{children:"host to endpoint"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"phoneprov"}),(0,s.jsx)(n.td,{children:"Phone Provisioning"}),(0,s.jsx)(n.td,{children:"res_pjsip_phoneprov_provider,res_phoneprov"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"registration"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"outbound SIP"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"resource_list"}),(0,s.jsx)(n.td,{children:"Resource lists"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"transport"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"udp,tcp,tls,ws,wss,flow"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"wizard"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"\u805A\u5408\u914D\u7F6E,res_pjsip_config_wizard"})]})]})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u5339\u914D\u89C4\u5219\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"From in inbound SIP -> endpoint"}),"\n",(0,s.jsx)(n.li,{children:"To in inbound SIP REGISTER -> aor"}),"\n",(0,s.jsx)(n.li,{children:"IP \u5730\u5740\u5339\u914D"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["endpoint\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"-0..1-> auth"}),"\n",(0,s.jsx)(n.li,{children:"-1..N-> transport"}),"\n",(0,s.jsxs)(n.li,{children:["-N-> aor\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u5B9E\u9645\u5730\u5740\u4FE1\u606F"}),"\n",(0,s.jsx)(n.li,{children:"\u5173\u8054 MWI"}),"\n",(0,s.jsx)(n.li,{children:"-N-> contact"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["registration\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u6CE8\u518C\u5230\u5916\u90E8\u670D\u52A1 - \u76F8\u5F53\u4E8E Trunk"}),"\n",(0,s.jsx)(n.li,{children:"-0..1-> auth"}),"\n",(0,s.jsx)(n.li,{children:"-1..N-> transport"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"auth - \u7531 endpoint \u548C registration \u4F7F\u7528"}),"\n",(0,s.jsxs)(n.li,{children:["identify\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"-0..1-> endpoint"}),"\n",(0,s.jsx)(n.li,{children:"match"}),"\n",(0,s.jsx)(n.li,{children:"res_pjsip_endpoint_identifier_ip"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"acl"}),"\n",(0,s.jsx)(n.li,{children:"domain_alias"}),"\n",(0,s.jsxs)(n.li,{children:["resource_list - \u8D44\u6E90\u5217\u8868\u8BA2\u9605 - SIP \u8BBE\u5907\u8BA2\u9605 SIP \u670D\u52A1\u7AEF\u63D0\u4F9B\u7684\u8D44\u6E90\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Asterisk 13+"}),"\n",(0,s.jsx)(n.li,{children:"RFC 4662"}),"\n",(0,s.jsxs)(n.li,{children:["\u4E0D\u4F7F\u7528 resource_list \u5219\u662F\u6BCF\u4E2A\u7AEF\u76F4\u63A5\u8BA2\u9605\u72B6\u6001 - ",(0,s.jsx)(n.code,{children:"N*(N-1)"})," - \u670D\u52A1\u7AEF\u538B\u529B\u975E\u5E38\u5927"]}),"\n",(0,s.jsx)(n.li,{children:"resource_list \u5C06\u591A\u4E2A \u5BA2\u6237\u7AEF\u6216 resouece_list \u72B6\u6001\u805A\u5408\u4E3A\u4E00\u7EC4"}),"\n",(0,s.jsx)(n.li,{children:"\u4F8B\u5982 \u9500\u552E\u7EC4\u4E00\u4E2A\u8BA2\u9605\u3001\u670D\u52A1\u7EC4\u4E00\u4E2A\u8BA2\u9605"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"pjsip_wizardconf",children:"pjsip_wizard.conf"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"res_pjsip_config_wizard"}),"\n",(0,s.jsx)(n.li,{children:"\u805A\u5408\u914D\u7F6E endpoint, aor, auth, identify, registration, phoneprov"}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u4E0D\u652F\u6301 reload"}),"\n"]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ini",children:"[user](!)\ntype = wizard\naccepts_registrations = yes\naccepts_auth = yes\nendpoint/context = default\nendpoint/allow = !all,ulaw,gsm,g722\naor/max_contacts=5\n\n[6001](user)\ninbound_auth/username = 6001\ninbound_auth/password = 6001\n\n[trunk](!)\ntype = wizard\nsends_registrations = yes\nsends_auth = yes\nremote_hosts=192.168.1.1\nendpoint/context = default\nendpoint/allow = !all,ulaw,gsm,g722\naor/max_contacts=5\n\n[trunk-6003](trunk)\noutbound_auth/username = 6003\noutbound_auth/password = 6003\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ini",children:'[wizard]\n; outbound auth\nsends_auth=no\noutbound_auth/username=\noutbound_auth/password=\n\n; inbound auth\naccepts_auth=no\ninbound_auth/username=\ninbound_auth/password=\n\n; outbound registration\nsends_registrations=no\nsends_line_with_registrations=no\n\n; inbound registration\naccepts_registrations=no\n; accepts_registrations=yes - aor \u9759\u6001 contact\n; accepts_registrations=no - match/identify\n; remote_hosts=<ipaddress | hostname>[:port] [,<ipaddress | hostname>[:port] ]\n\noutbound_proxy=\n; endpoint/outbound_proxy\n; aor/outbound_proxy\n; registration/outbound_proxy\n\ntransport=\n\n; registrations\nserver_uri_pattern=sip:${REMOTE_HOST}\nclient_uri_pattern=sip:${USERNAME}@${REMOTE_HOST}\ncontact_pattern=sip:${REMOTE_HOST}\n\n; phoneprov\nhas_phoneprov=no\nphoneprov/MAC=\n\n; hint exten\nhas_hint=no\nhint_context=endpoint/context\n; PJSIP/<wizard_id>\nhint_exten=none\n; \u4F8B\u5982 Gosub(stdexten,${EXTEN},1(${HINT}))"\nhint_application=Dial(${HINT})\n\n; \u5B50\u5BF9\u8C61\n;endpoint/<param>\n;aor/<param>\n;inbound_auth/<param>\n;outbound_auth/<param>\n;identify/<param>\n;registration/<param>\n;phoneprov/<param>\n'})}),"\n",(0,s.jsx)(n.h2,{id:"pjsipconf",children:"pjsip.conf"}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"pjsip.conf.sample \u4E2D\u5E76\u4E0D\u5305\u542B\u5B8C\u6574\u914D\u7F6E"}),"\n"]})}),"\n",(0,s.jsx)(n.h3,{id:"global",children:"global"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-conf",children:'[global]\ntype=global\n; SIP Max Forwards header\nmax_forwards=70\n; \u9ED8\u8BA4 Asterisk PBX + \u7248\u672C\n;user_agent=Asterisk PBX\n; \u9ED8\u8BA4 \u51FA\u5C40 \u7EC8\u7AEF - \u672A\u6307\u5B9A\u65F6\u4F7F\u7528\ndefault_outbound_endpoint=default_outbound_endpoint\ndebug=no\n; \u53D1\u9001 \u53CC CRLF \u4F5C\u4E3A keep-alives \u7684\u95F4\u9694 - \u5355\u4F4D \u79D2\n; \u9762\u5411\u6709\u8FDE\u63A5\u4F20\u8F93\u534F\u8BAE - \u4F8B\u5982 tcp websocket\nkeep_alive_interval=90\n; contacts \u5931\u6548\u68C0\u6D4B - \u5355\u4F4D\u79D2\n;contact_expiration_check_interval=30\n; \u7981\u7528\u591A \u57DF\u540D \u652F\u6301\u53EF\u589E\u52A0 realtime \u5904\u7406\u6027\u80FD - \u51CF\u5C11 db \u8BF7\u6C42\ndisable_multi_domain=no\n; endpoint \u8BC6\u522B\u987A\u5E8F - ip,header,username,auth_username,anonymous\n; \u90E8\u5206\u901A\u8FC7\u6A21\u5757 res_pjsip_endpoint_identifier_* \u63D0\u4F9B\u652F\u6301\n; \u67E5\u770B\u5F53\u524D\u652F\u6301 pjsip show identifiers\nendpoint_identifier_order=ip,username,anonymous\n; \u542F\u52A8\u540E\u9A8C\u8BC1\u6240\u6709 contacts \u7684\u6700\u5927\u65F6\u95F4\n; \u5982\u679C\u5927\u4E8E qualify_frequency \u5219\u4F1A\u4F7F\u7528 qualify_frequency\n;max_initial_qualify_time=4\n; \u6307\u5B9A\u6CE8\u518C\u4E0A\u4E0B\u6587\u540E Asterisk \u4F1A\u4E3A endpoint \u7EF4\u62A4\u4E00\u4E2A NoOp \u7684 extension\n;regcontext=sipregistrations\n; \u9ED8\u8BA4\u8BED\u97F3\u90AE\u7BB1 extension - \u4F1A\u5728 NOTIFY Message-Account \u5934\u4E2D\u8FD4\u56DE\n;default_voicemail_extension=asterisk\n\n; unidentified_request_* \u4EC5\u7528\u4E8E endpoint_identifier_order \u542F\u7528\u4E86 auth_username \u573A\u666F\n;\n; \u5728 unidentified_request_period \u5185\u672A\u8BC6\u522B\u7684\u8BF7\u6C42\u6B21\u6570 - \u8D85\u8FC7\u4EA7\u751F\u5B89\u5168\u4E8B\u4EF6\nunidentified_request_count=5\n; \u5355\u4F4D \u79D2\nunidentified_request_period=5\n; \u68C0\u6D4B\u6E05\u9664 \u672A\u8BC6\u522B \u7684\u95F4\u9694 - \u8D85\u8FC7\u4E24\u500D unidentified_request_period \u5219\u4F1A\u88AB\u6E05\u9664\n;unidentified_request_prune_interval=30\n\n; \u9ED8\u8BA4 \u51FA\u5C40 SIP \u7684\u7528\u6237\u540D - \u4F18\u5148\u4F7F\u7528 CallerID \u548C endpoint/from_user\n;default_from_user=asterisk\n; \u751F\u6210 auth challenge \u65F6\u7684\u9ED8\u8BA4 realm\n;default_realm=asterisk\n\n                    ; Asterisk Task Processor Queue Size\n                    ; On heavy loaded system with DB storage you may need to increase\n                    ; taskprocessor queue.\n                    ; If the taskprocessor queue size reached high water level,\n                    ; the alert is triggered.\n                    ; If the alert is set the pjsip distibutor stops processing incoming\n                    ; requests until the alert is cleared.\n                    ; The alert is cleared when taskprocessor queue size drops to the\n                    ; low water clear level.\n                    ; The next options set taskprocessor queue levels for MWI.\n;mwi_tps_queue_high=500 ; Taskprocessor high water alert trigger level.\n;mwi_tps_queue_low=450  ; Taskprocessor low water clear alert level.\n                    ; The default is -1 for 90% of high water level.\n\n                    ; Unsolicited MWI\n                    ; If there are endpoints configured with unsolicited MWI\n                    ; then res_pjsip_mwi module tries to send MWI to all endpoints on startup.\n;mwi_disable_initial_unsolicited=no ; Disable sending unsolicited mwi to all endpoints on startup.\n                    ; If disabled then unsolicited mwi will start processing\n                    ; on the endpoint\'s next contact update.\n\n; \u79FB\u9664 URI \u4E2D ; \u540E\u9762\u90E8\u5206 - \u7528\u4E8E\u517C\u5BB9\u65E7\u8BBE\u5907 \u4F8B\u5982 ITSP\nignore_uri_user_options=no\n\n; \u8BBE\u5907\u5237\u65B0\u6CE8\u518C\u4FE1\u606F\u65F6\u53D1\u9001 AMI ContactStatus \u4E8B\u4EF6\nsend_contact_status_on_update_registration=no\n\ntaskprocessor_overload_trigger=global\n                ; Set the trigger the distributor will use to detect\n                ; taskprocessor overloads.  When triggered, the distributor\n                ; will not accept any new requests until the overload has\n                ; cleared.\n                ; "global": (default) Any taskprocessor overload will trigger.\n                ; "pjsip_only": Only pjsip taskprocessor overloads will trigger.\n                ; "none":  No overload detection will be performed.\n                ; WARNING: The "none" and "pjsip_only" options should be used\n                ; with extreme caution and only to mitigate specific issues.\n                ; Under certain conditions they could make things worse.\n\n; \u5728\u652F\u6301\u573A\u666F\u53D1\u9001 norefersub \u6807\u7B7E\u8868\u793A \u652F\u6301 REFER subscription - RFC 4488\nnorefersub=yes\n'})}),"\n",(0,s.jsx)(n.h3,{id:"system",children:"system"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-conf",children:"[system]\ntype=system\n\n; transaction timer T1 - \u5355\u4F4D ms\ntimer_t1=500\n; transaction timer B\ntimer_b=32000\n; \u4F7F\u7528\u66F4\u77ED\u7684 SIP \u5934\u540D\u5B57\ncompact_headers=no\n; res_pjsip \u7EBF\u7A0B\u6C60\u521D\u59CB\u7EBF\u7A0B\nthreadpool_initial_size=0\n; \u7EBF\u7A0B\u6C60\u589E\u957F\nthreadpool_auto_increment=5\nthreadpool_idle_timeout=60\nthreadpool_max_size=0\n; \u51FA\u5C40\u65F6 - \u5982\u679C\u8BF7\u6C42\u8FC7\u5927 \u7981\u6B62\u81EA\u52A8\u4ECE UDP \u5207\u6362\u5230 TCP - RFC 3261 section 18.1.1.\n; \u8BBE\u7F6E\u4E3A no \u53EF\u80FD\u5BFC\u81F4\u517C\u5BB9\u95EE\u9898\ndisable_tcp_switch=yes\n; \u51FA\u5C40\u65F6 - \u5982\u679C USA \u5728\u540E\u7EED 18X \u548C 2XX \u8FD4\u56DE SDP \u5C5E\u6027\u5305\u542B\u4E0D\u540C\u7684 To \u4FE1\u606F\u65F6\uFF0C\u8DDF\u968F\u65B0\u7684\u4FE1\u606F\n; \u4E5F\u9700\u8981\u5728 endpoint \u542F\u7528\n; \u901A\u5E38\u53D1\u751F\u5728 INVITE fork \u5230\u591A UAS \u65F6\nfollow_early_media_fork=yes\n; \u51FA\u5C40\u65F6 - \u7C7B\u4F3C follow_early_media_fork\uFF0C\u66F4\u6539 port \u5C5E\u6027\n; \u4E5F\u9700\u8981\u5728 endpoint \u542F\u7528\n; \u901A\u5E38\u53D1\u751F\u5728\u4F7F\u7528\u4E0D\u540C\u7AEF\u53E3 ringback \u65F6\naccept_multiple_sdp_answers=no\n\n; \u51FA\u5C40\u7981\u7528 rport\n;disable_rport=no\n"})}),"\n",(0,s.jsx)(n.h3,{id:"acl",children:"acl"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"res_pjsip_acl"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-conf",children:"[acl]\ntype=acl\n; List of IP ACL section names in acl conf\n;acl=\n; List of Contact ACL section names in acl conf\n;contact_acl=\n; List of Contact header addresses to deny\n;contact_deny=\n; List of Contact header addresses to permit\n;contact_permit=\n; List of IP addresses to deny access from\n;deny=\n; List of IP addresses to permit access from\n;permit=\n"})}),"\n",(0,s.jsx)(n.h3,{id:"transport",children:"transport"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"res_pjsip_transport_websocket"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-conf",children:'[transport]\ntype=transport\n\n; \u4F20\u8F93\u534F\u8BAE\nprotocol=udp\n; IP Address and optional port to bind to for this transport\n;bind=\n; Number of simultaneous Asynchronous Operations\nasync_operations=1\n\n; Note that for the Websocket transport the TLS configuration is configured\n; in http.conf and is applied for all HTTPS traffic.\n;\n; File containing a list of certificates to read TLS ONLY\n;ca_list_file=\n;ca_list_path=  ; Path to directory containing certificates to read TLS ONLY.\n                ; PJProject version 2.4 or higher is required for this option to\n                ; be used.\n;cert_file=     ; Certificate file for endpoint TLS ONLY\n                ; Will read .crt or .pem file but only uses cert,\n                ; a .key file must be specified via priv_key_file.\n                ; Since PJProject version 2.5: If the file name ends in _rsa,\n                ; for example "asterisk_rsa.pem", the files "asterisk_dsa.pem"\n                ; and/or "asterisk_ecc.pem" are loaded (certificate, inter-\n                ; mediates, private key), to support multiple algorithms for\n                ; server authentication (RSA, DSA, ECDSA). If the chains are\n                ; different, at least OpenSSL 1.0.2 is required.\n                ; (default: "")\n; Preferred cryptography cipher names TLS ONLY\n;cipher=\n; Method of SSL transport TLS ONLY\n;method=\n;priv_key_file= ; Private key file TLS ONLY (default: "")\n; Require verification of client certificate TLS ONLY\n;verify_client=\n; Require verification of server certificate TLS ONLY\n;verify_server=\n; Require client certificate TLS ONLY\n;require_client_cert=\n; Domain the transport comes from\n;domain=\n; External IP address to use in RTP handling\n;external_media_address=\n; External address for SIP signalling\n;external_signaling_address=\n; External port for SIP signalling\nexternal_signaling_port=0\n; \u672C\u5730\u7F51\u7EDC - NAT \u65F6\u4F7F\u7528\n;local_net=\n; \u5BC6\u94A5\n;password=\n\ntos=0  ; TOS for the signalling sent over this transport\ncos=0  ; COS for the signalling sent over this transport\n\n; websocket \u8D85\u65F6\u65F6\u95F4 - \u5355\u4F4D ms\n; \u5BA2\u6237\u7AEF\u8F83\u6162\u7684\u573A\u666F\u9700\u8981\u8C03\u6574\nwebsocket_write_timeout=100\n; \u662F\u5426\u5141\u8BB8\u91CD\u8F7D - \u6709\u65F6\u91CD\u8F7D\u53EF\u80FD\u5BFC\u81F4\u901A\u8BDD\u4E2D\u65AD\nallow_reload=no\n; \u5BF9\u7B49\u4F20\u8F93\n; \u5F53\u4ECE\u4E00\u4E2A\u52A8\u6001 contact \u8BF7\u6C42\u8FDB\u6765\u65F6\uFF0C\u8BB0\u5F55\u4F20\u8F93\u5230 uri \u53C2\u6570 x-ast-txp\n; \u8BF7\u6C42\u51FA\u53BB\u65F6\uFF0C\u5982\u679C uri \u4E0D\u662F hostname \u5219\u4F1A\u4F7F\u7528\u8BB0\u5F55\u7684 x-ast-txp \u53C2\u6570\nsymmetric_transport=no\n'})}),"\n",(0,s.jsx)(n.h3,{id:"auth",children:"auth"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u4E0D\u63A8\u8350 inbound \u548C outbound \u4F7F\u7528\u76F8\u540C auth"}),"\n",(0,s.jsxs)(n.li,{children:["\u7A7A realm \u5BF9 inbound \u548C outbound \u542B\u4E49\u4E0D\u540C\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["inbound\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u5728\u6388\u6743\u662F\u53D1\u9001\u7ED9 peer \u4F5C\u4E3A\u6388\u6743\u7684\u4E00\u90E8\u5206"}),"\n",(0,s.jsx)(n.li,{children:"\u9ED8\u8BA4\u4E3A\u5168\u5C40\u7684 default_realm"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["outbound\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u4F1A\u5339\u914D\u8FD4\u56DE\u7684 realm \u6765\u8FD4\u56DE auth"}),"\n",(0,s.jsx)(n.li,{children:"\u7A7A \u5339\u914D\u6240\u6709 realm"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-conf",children:'[auth]\ntype=auth\n; \u7528\u6237\u540D\n;username=\n; \u6388\u6743\u7C7B\u578B userpass, md5\nauth_type=userpass\n; \u660E\u6587\u5BC6\u7801\n;password=\n; MD5 \u5BC6\u94A5\n; echo -n "myname:myrealm:mypassword" | md5sum\n; outbound \u65F6 realm \u4E0D\u80FD\u4E3A \u7A7A - \u5982\u679C\u4E3A\u7A7A\u5219\u8981\u6C42\u670D\u52A1\u7AEF\u53D1\u9001 \u7A7A realm \u800C\u4E0D\u662F\u5339\u914D\u4EFB\u610F\n;md5_cred=\n; outgoing \u65F6 \u7A7A \u6216 * \u90FD\u6807\u8BC6\u4F7F\u7528\u670D\u52A1\u7AEF\u8FD4\u56DE realm\n;realm=\n; Lifetime of a nonce\nnonce_lifetime=32\n'})}),"\n",(0,s.jsx)(n.h3,{id:"phoneprovr",children:"phoneprovr"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u96C6\u6210 res_pjsip \u548C res_phoneprov"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-conf",children:"[1000]\ntype = phoneprovr\nendpoint = ep1000\n; \u5FC5\u987B - \u7528\u6237\u7684 mac \u5730\u5740\nMAC = deadbeef4dad\n; \u5FC5\u987B - phoneprov profile\nPROFILE = grandstream2\n\n; \u4EFB\u610F\u81EA\u5B9A\u4E49\u53D8\u91CF\nLINEKEYS = 2\nLINE = 1\nOTHERVAR = othervalue\n\n; \u4ECE\u5B9A\u4E49\u7684 endpoint \u751F\u6210\u7684\u53D8\u91CF\nUSERNAME\nSECRET\nCALLERID\nDISPLAY_NAME\n; id of the phoneprov section\nLABEL\n\n; \u5176\u4ED6\u53D8\u91CF\nENDPOINT_ID\n; endpoint -> transport\nTRANSPORT_ID\n; endpoint -> auth\nAUTH_ID\n"})}),"\n",(0,s.jsx)(n.h3,{id:"endpoint",children:"endpoint"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"res_pjsip"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-conf",children:'[endpoint]\ntype=endpoint\n\n; RFC3262 provisional ACK tags\n100rel=yes\naggregate_mwi=yes\n; Media Codec s to allow\n;allow=\n; RFC3578 overlap dialing support\nallow_overlap=yes\n; AoR s to be used with the endpoint\n;aors=\n; Authentication Object s associated with the endpoint\n;auth=\n; CallerID\n;callerid=\n; \u9690\u79C1\u7EA7\u522B\ncallerid_privacy=allowed_not_screened\n; \u5185\u90E8 id_tag\n;callerid_tag=\n; Dialplan context for inbound sessions\ncontext=default\n; Mitigation of direct media re INVITE glare\ndirect_media_glare_mitigation=none\n; Direct Media method type\ndirect_media_method=invite\n; Accept Connected Line updates from this endpoint\ntrust_connected_line=yes\n; Send Connected Line updates to this endpoint\n;send_connected_line=yes\nconnected_line_method=invite   ; Connected line method type.\n                                ; When set to "invite", check the remote\'s\n                                ; Allow header and if UPDATE is allowed, send\n                                ; UPDATE instead of INVITE to avoid SDP\n                                ; renegotiation.  If UPDATE is not Allowed,\n                                ; send INVITE.\n                                ; If set to "update", send UPDATE regardless\n                                ; of what the remote Allows.\n                                ; (default: "invite")\n; media may flow directly between endpoints\ndirect_media=yes\n; Disable direct media session refreshes when NAT obstructs the media session\n;disable_direct_media_on_nat=no\n; \u7981\u7528\u7F16\u7801\n;disallow=\n;dtmf_mode=rfc4733\n; SDP \u5A92\u4F53\u5730\u5740\n;media_address=\n; \u7ED1\u5B9A RTP \u4F1A\u8BDD\u5230 media_address - \u4F1A\u5BFC\u81F4\u6240\u6709RTP\u5305\u53D1\u5F80\u6307\u5B9A\u5730\u5740\nbind_rtp_to_media_address=no\n; Force use of return port\nforce_rport=yes\n; \u542F\u7528 ICE \u8F85\u52A9 NAT \u7A7F\u900F\nice_support=no\n; \u7EC8\u7AEF AoR \u6807\u8BC6\u903B\u8F91 - username, auth_username, ip, header\n; header \u5728 username+realm \u5931\u8D25\u65F6\u5C1D\u8BD5 username \u5339\u914D\nidentify_by=username,ip\n; \u91CD\u5B9A\u5411\u5904\u7406\u65B9\u5F0F\n;redirect_method=user\n;mailboxes=     ; NOTIFY the endpoint when state changes for any of the specified mailboxes.\n                ; Asterisk will send unsolicited MWI NOTIFY messages to the endpoint when state\n                ; changes happen for any of the specified mailboxes. (default: "")\n;voicemail_extension= ; The voicemail extension to send in the NOTIFY Message-Account header\n                      ; (default: global/default_voicemail_extension)\n;mwi_subscribe_replaces_unsolicited=no\n                      ; An MWI subscribe will replace unsoliticed NOTIFYs\n                      ; (default: "no")\n; \u9ED8\u8BA4 MOH \u5206\u7C7B\nmoh_suggest=default\n; Pass Music On Hold through using SIP re-invites with sendonlywhen placing on hold and sendrecv when taking off hold\n;moh_passthrough=yes\n\n; \u51FA\u5C40\u6388\u6743\u5BF9\u8C61\n;outbound_auth=\n; \u51FA\u5C40\u8BF7\u6C42\u4EE3\u7406 - SIP URI\n;outbound_proxy=\n\n; \u4F7F\u7528\u6765\u6E90 IP \u5730\u5740\u7AEF\u53E3\u91CD\u5199 contact\nrewrite_contact=no\n; Enforce RTP symmetric\nrtp_symmetric=no\n; Send the Diversion header conveying the diversion information to the called user agent\nsend_diversion=yes\n\n; Send the P Asserted Identity header\nsend_pai=no\n; Send the Remote Party ID header\nsend_rpid=no\n; Send connected line updates on unanswered incoming calls immediately\nrpid_immediate=no\n; Minimum session timers expiration period\ntimers_min_se=90\n; Session timers for SIP packets\ntimers=yes\n; Maximum session timer expiration period\ntimers_sess_expires=1800\n; \u9650\u5B9A\u901A\u8BAF\u534F\u8BAE - \u9ED8\u8BA4\u90FD\u53EF\u4EE5\n;transport=\n\n; Accept identification information received from this endpoint\ntrust_id_inbound=no\n; Send private identification details to the endpoint\ntrust_id_outbound=no\n; Use Endpoint s requested packetisation interval\nuse_ptime=no\n; \u5F3A\u5236\u4F7F\u7528 AVPF\nuse_avpf=no\n; \u5F3A\u5236\u5A92\u4F53\u52A0\u5BC6\n;media_encryption=no\n; \u5C1D\u8BD5\u52A0\u5BC6\n;media_encryption_optimistic=no\n; yes => g.726 \u5931\u8D25\u540E\u5C1D\u8BD5 g726aal2 - \u4E0E RFC3551 \u4E0D\u540C\n; \u9700\u8981 allow g726aal2\ng726_non_standard=no\n; indicate ringing inband progress\n;inband_progress=no\n\n; The numeric pickup groups for a channel\n;call_group=\n; The numeric pickup groups that a channel can pickup\n;pickup_group=\n; The named pickup groups for a channel\n;named_call_group=\n; The named pickup groups that a channel can pickup\n;named_pickup_group=\n\n; The number of in use channels which will cause busy to be returned as device state\ndevice_state_busy_at=0\n\n;t38_udptl=no   ; Whether T 38 UDPTL support is enabled or not (default: "no")\n;t38_udptl_ec=none      ; T 38 UDPTL error correction method (default: "none")\n;t38_udptl_maxdatagram=0        ; T 38 UDPTL maximum datagram size (default:\n                                ; "0")\n;fax_detect=no  ; Whether CNG tone detection is enabled (default: "no")\n;fax_detect_timeout=30  ; How many seconds into a call before fax_detect is\n                        ; disabled for the call.\n                        ; Zero disables the timeout.\n                        ; (default: "0")\n;t38_udptl_nat=no       ; Whether NAT support is enabled on UDPTL sessions\n                        ; (default: "no")\n\n;tone_zone=     ; Set which country s indications to use for channels created\n                ; for this endpoint (default: "")\n;language=      ; Set the default language to use for channels created for this\n                ; endpoint (default: "")\n\n; one touch recording\none_touch_recording=no\n; \u5904\u7406 one touch recording \u7684\u65B9\u5F0F\nrecord_on_feature=automixmon\nrecord_off_feature=automixmon\n\n; Name of the RTP engine to use for channels created for this endpoint\nrtp_engine=asterisk\n; SIP REFER transfers\nallow_transfer=yes\n; SDP origin \u540E\u7684 username \u4FE1\u606F\n;sdp_owner=-\n; String used for the SDP session s line\n;sdp_session=Asterisk\n\n; endpoint is allowed to initiate subscriptions\nallow_subscribe=yes\n; The minimum allowed expiry time for subscriptions initiated by the endpoint\n;sub_min_expiry=0\n\n; Username to use in From header for requests to this endpoint\n;from_user=\n; Username to use in From header for unsolicited MWI NOTIFYs to this endpoint\n;mwi_from_user=\n; Domain to user in From header for requests to this endpoint\n;from_domain=\n\n;dtls_verify=no ; Verify that the provided peer certificate is valid (default:\n                ; "no")\n;dtls_rekey=0   ; Interval at which to renegotiate the TLS session and rekey\n                ; the SRTP session (default: "0")\n;dtls_auto_generate_cert= ; Enable ephemeral DTLS certificate generation (default:\n                          ; "no")\n;dtls_cert_file=          ; Path to certificate file to present to peer (default:\n                          ; "")\n;dtls_private_key=        ; Path to private key for certificate file (default:\n                          ; "")\n;dtls_cipher=   ; Cipher to use for DTLS negotiation (default: "")\n;dtls_ca_file=  ; Path to certificate authority certificate (default: "")\n;dtls_ca_path=  ; Path to a directory containing certificate authority\n                ; certificates (default: "")\n;dtls_setup=    ; Whether we are willing to accept connections connect to the\n                ; other party or both (default: "")\n;dtls_fingerprint= ; Hash to use for the fingerprint placed into SDP\n                   ; (default: "SHA-256")\n;srtp_tag_32=no ; Determines whether 32 byte tags should be used instead of 80\n                ; byte tags (default: "no")\n;set_var=       ; Variable set on a channel involving the endpoint. For multiple\n                ; channel variables specify multiple \'set_var\'(s)\n;rtp_keepalive= ; Interval, in seconds, between comfort noise RTP packets if\n                ; RTP is not flowing. This setting is useful for ensuring that\n                ; holes in NATs and firewalls are kept open throughout a call.\n;rtp_timeout=      ; Hang up channel if RTP is not received for the specified\n                   ; number of seconds when the channel is off hold (default:\n                   ; "0" or not enabled)\n;rtp_timeout_hold= ; Hang up channel if RTP is not received for the specified\n                   ; number of seconds when the channel is on hold (default:\n                   ; "0" or not enabled)\n;contact_user= ; On outgoing requests, force the user portion of the Contact\n               ; header to this value (default: "")\n;incoming_call_offer_pref= ; Based on this setting, a joint list of\n                           ; preferred codecs between those received in an\n                           ; incoming SDP offer (remote), and those specified\n                           ; in the endpoint\'s "allow" parameter (local)\n                           ; is created and is passed to the Asterisk core.\n                           ;\n                           ; local - Include all codecs in the local list that\n                           ; are also in the remote list preserving the local\n                           ; order. (default).\n                           ; local_first - Include only the first codec in the\n                           ; local list that is also in the remote list.\n                           ; remote - Include all codecs in the remote list that\n                           ; are also in the local list preserving remote list\n                           ; order.\n                           ; remote_first - Include only the first codec in\n                           ; the remote list that is also in the local list.\n;outgoing_call_offer_pref= ; Based on this setting, a joint list of\n                           ; preferred codecs between those received from the\n                           ; Asterisk core (remote), and those specified in\n                           ; the endpoint\'s "allow" parameter (local) is\n                           ; created and is used to create the outgoing SDP\n                           ; offer.\n                           ;\n                           ; local - Include all codecs in the local list that\n                           ; are also in the remote list preserving the local\n                           ; order.\n                           ; local_merge - Include all codecs in the local list\n                           ; preserving the local order.\n                           ; local_first - Include only the first codec in the\n                           ; local list.\n                           ; remote - Include all codecs in the remote list that\n                           ; are also in the local list preserving remote list\n                           ; order.\n                           ; remote_merge - Include all codecs in the local list\n                           ; preserving the remote list order. (default)\n                           ; remote_first - Include only the first codec in the\n                           ; remote list that is also in the local list.\n;preferred_codec_only=no   ; Respond to a SIP invite with the single most\n                           ; preferred codec rather than advertising all joint\n                           ; codec capabilities. This limits the other side\'s\n                           ; codec choice to exactly what we prefer.\n                           ; default is no.\n                           ; NOTE: This option is deprecated in favor\n                           ; of incoming_call_offer_pref.  Setting both\n                           ; options is unsupported.\n\n\n; \u5A92\u4F53\u914D\u7F6E\n; ====================\n; yes => rtcp_mux, use_avpf, ice_support, use_received_transport\n; \u9ED8\u8BA4\n;   media_encryption=dtls\n;   dtls_verify=fingerprint\n;   dtls_setup=actpass\n; dtls_cert_file, dtls_ca_file\nwebrtc=no\nmax_audio_streams=1 ; The maximum number of allowed negotiated audio streams\n                    ; (default: 1)\n;\nmax_video_streams=1 ; The maximum number of allowed negotiated video streams\n                    ; (default: 1)\n\n;tos_audio=0    ; DSCP TOS bits for audio streams (default: "0")\n;tos_video=0    ; DSCP TOS bits for video streams (default: "0")\n;cos_audio=0    ; Priority for audio streams (default: "0")\n;cos_video=0    ; Priority for video streams (default: "0")\n\n; RTP \u914D\u7F6E\n; ====================\n; SDP answer to use the media transport as received in the SDP offer\nmedia_use_received_transport=yes\n; force the usage of \'RTP/AVP\', \'RTP/AVPF\', \'RTP/SAVP\', or \'RTP/SAVPF\' as the media transport type in SDP offers depending on settings, even when DTLS is used for media encryption.\nforce_avp=no\nuse_avpf=no\n; \u5141\u8BB8\u53D1\u9001\u63A5\u6536\u4E0D\u540C\u7F16\u7801 - \u4E0D\u81EA\u52A8\u5339\u914D\nasymmetric_rtp_codec=no\nrefer_blind_progress=yes ; Whether to notifies all the progress details on blind\n                       ; transfer (default: "yes"). The value "no" is useful\n                       ; for some SIP phones (Mitel/Aastra, Snom) which expect\n                       ; a sip/frag "200 OK" after REFER has been accepted.\n;notify_early_inuse_ringing = ; Whether to notifies dialog-info \'early\'\n                              ; on INUSE && RINGING state (default: "no").\n                              ; The value "yes" is useful for some SIP phones\n                              ; (Cisco SPA) to be able to indicate and pick up\n                              ; ringing devices.\nrtcp_mux=no\n\n;incoming_mwi_mailbox = ; Mailbox name to use when incoming MWI NOTIFYs are\n                        ; received.\n                        ; If an MWI NOTIFY is received FROM this endpoint,\n                        ; this mailbox will be used when notifying other modules\n                        ; of MWI status changes.  If not set, incoming MWI\n                        ; NOTIFYs are ignored.\nfollow_early_media_fork=yes ; On outgoing calls, if the UAS responds with\n                           ; different SDP attributes on subsequent 18X or 2XX\n                           ; responses (such as a port update) AND the To tag\n                           ; on the subsequent response is different than that\n                           ; on the previous one, follow it.  This usually\n                           ; happens when the INVITE is forked to multiple UASs\n                           ; and more than 1 sends an SDP answer.\n                           ; This option must also be enabled in the system\n                           ; section.\n                           ; (default: yes)\naccept_multiple_sdp_answers=no\n                           ; On outgoing calls, if the UAS responds with\n                           ; different SDP attributes on non-100rel 18X or 2XX\n                           ; responses (such as a port update) AND the To tag on\n                           ; the subsequent response is the same as that on the\n                           ; previous one, process it. This can happen when the\n                           ; UAS needs to change ports for some reason such as\n                           ; using a separate port for custom ringback.\n                           ; This option must also be enabled in the system\n                           ; section.\n                           ; (default: no)\n;suppress_q850_reason_headers =\n                           ; Suppress Q.850 Reason headers for this endpoint.\n                           ; Some devices can\'t accept multiple Reason headers\n                           ; and get confused when both \'SIP\' and \'Q.850\' Reason\n                           ; headers are received.  This option allows the\n                           ; \'Q.850\' Reason header to be suppressed.\n                           ; (default: no)\n;ignore_183_without_sdp =\n                           ; Do not forward 183 when it doesn\'t contain SDP.\n                           ; Certain SS7 internetworking scenarios can result in\n                           ; a 183 to be generated for reasons other than early\n                           ; media.  Forwarding this 183 can cause loss of\n                           ; ringback tone.  This flag emulates the behavior of\n                           ; chan_sip and prevents these 183 responses from\n                           ; being forwarded.\n                           ; (default: no)\n;stir_shaken =\n                           ; If this is enabled, STIR/SHAKEN operations will be\n                           ; performed on this endpoint. This includes inbound\n                           ; and outbound INVITEs. On an inbound INVITE, Asterisk\n                           ; will check for an Identity header and attempt to\n                           ; verify the call. On an outbound INVITE, Asterisk will\n                           ; add an Identity header that others can use to verify\n                           ; calls from this endpoint. Additional configuration is\n                           ; done in stir_shaken.conf.\n                           ; The STIR_SHAKEN dialplan function must be used to get\n                           ; the verification results on inbound INVITEs. Nothing\n                           ; happens to the call if verification fails; it\'s up to\n                           ; you to determine what to do with the results.\n                           ; (default: no)\nallow_unauthenticated_options=no\n                           ; By default, chan_pjsip will challenge an incoming\n                           ; OPTIONS request for authentication credentials just\n                           ; as it would an INVITE request. This is consistent\n                           ; with RFC 3261.\n                           ; There are many UAs that use an OPTIONS request as a\n                           ; "ping" and they expect a 200 response indicating that\n                           ; the remote party is up and running without a need to\n                           ; authenticate.\n                           ; Setting allow_unauthenticated_options to \'yes\' will\n                           ; instruct chan_pjsip to skip the authentication step\n                           ; when it receives an OPTIONS request for this\n                           ; endpoint.\n                           ; There are security implications to enabling this\n                           ; setting as it can allow information disclosure to\n                           ; occur - specifically, if enabled, an external party\n                           ; could enumerate and find the endpoint name by\n                           ; sending OPTIONS requests and examining the\n                           ; responses.\n'})}),"\n",(0,s.jsx)(n.h3,{id:"registration",children:"registration"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"res_pjsip_outbound_registration"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-conf",children:'[registration]\ntype=registration\n;auth_rejection_permanent=yes   ; Determines whether failed authentication\n                                ; challenges are treated as permanent failures\n                                ; (default: "yes")\n;client_uri=    ; Client SIP URI used when attemping outbound registration\n                ; (default: "")\n;contact_user=  ; Contact User to use in request (default: "")\n;expiration=3600        ; Expiration time for registrations in seconds\n                        ; (default: "3600")\n;max_retries=10 ; Maximum number of registration attempts (default: "10")\n;outbound_auth= ; Authentication object to be used for outbound registrations\n                ; (default: "")\n;outbound_proxy=        ; Proxy through which to send registrations, a full SIP URI\n                        ; must be provided (default: "")\n;retry_interval=60      ; Interval in seconds between retries if outbound\n                        ; registration is unsuccessful (default: "60")\n;forbidden_retry_interval=0     ; Interval used when receiving a 403 Forbidden\n                                ; response (default: "0")\n;fatal_retry_interval=0 ; Interval used when receiving a fatal response.\n                        ; (default: "0") A fatal response is any permanent\n                        ; failure (non-temporary 4xx, 5xx, 6xx) response\n                        ; received from the registrar. NOTE - if also set\n                        ; the \'forbidden_retry_interval\' takes precedence\n                        ; over this one when a 403 is received. Also, if\n                        ; \'auth_rejection_permanent\' equals \'yes\' a 401 and\n                        ; 407 become subject to this retry interval.\n;server_uri=    ; SIP URI of the server to register against (default: "")\n;transport=     ; Transport used for outbound authentication (default: "")\n;line=          ; When enabled this option will cause a \'line\' parameter to be\n                ; added to the Contact header placed into the outgoing\n                ; registration request. If the remote server sends a call\n                ; this line parameter will be used to establish a relationship\n                ; to the outbound registration, ultimately causing the\n                ; configured endpoint to be used (default: "no")\n;endpoint=      ; When line support is enabled this configured endpoint name\n                ; is used for incoming calls that are related to the outbound\n                ; registration (default: "")\n'})}),"\n",(0,s.jsx)(n.h1,{id:"faq",children:"FAQ"}),"\n",(0,s.jsx)(n.h2,{id:"res_pjsip_outbound_registrationc1061-handle_registration_response-fatal-response-401-received-from-sip19216812-on-registration-attempt-to-sip600119216822-stopping-outbound-registration",children:"res_pjsip_outbound_registration.c:1061 handle_registration_response: Fatal response '401' received from 'sip:192.168.1.2' on registration attempt to 'sip:6001@192.168.2.2', stopping outbound registration"}),"\n",(0,s.jsx)(n.p,{children:"\u521D\u6B21\u6CE8\u518C\u6210\u529F\uFF0C\u4E4B\u540E\u6CE8\u518C\u90FD\u5931\u8D25"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"pjsip send registry trunk-6001-reg-0\n"})}),"\n",(0,s.jsx)(n.p,{children:"\u5C1D\u8BD5\u4FEE\u6539\u914D\u7F6E\u589E\u52A0\u91CD\u8BD5\u673A\u5236"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-conf",children:"expiration = 300\nauth_rejection_permanent = no\nretry_interval = 30\nforbidden_retry_interval = 60\nfatal_retry_interval = 120\nmax_retries = 120\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/asterisk/asterisk/blob/35437879e55b67d46cb9d0e558edef1e1609a28d/configs/samples/pjsip.conf.sample#L1335",children:"pjsip.conf#fatal_retry_interval"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"pjproject-error-sending-stun-request-network-is-unreachable",children:"pjproject: .Error sending STUN request: Network is unreachable"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u53C2\u8003\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://community.asterisk.org/t/83908/2",children:"https://community.asterisk.org/t/83908/2"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Occurs due to usage of IPv6 link local addresses as ICE candidates. If media is flowing, there\u2019s nothing to do there. You can ignore them."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){let{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},17776:function(e,n,t){t.d(n,{R:()=>o,x:()=>a});var i=t(7378);let s={},r=i.createContext(s);function o(e){let n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);