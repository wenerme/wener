"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["24461"],{54728:function(n,d,s){s.r(d),s.d(d,{frontMatter:()=>i,toc:()=>x,default:()=>h,metadata:()=>e,assets:()=>l,contentTitle:()=>c});var e=JSON.parse('{"id":"languages/parser/README","title":"Parser","description":"\u64CD\u4F5C\u7B26\u5206\u7C7B","source":"@site/../notes/languages/parser/README.md","sourceDirName":"languages/parser","slug":"/languages/parser/","permalink":"/notes/languages/parser/","draft":false,"unlisted":false,"editUrl":"https://github.com/wenerme/wener/edit/master/notes/../notes/languages/parser/README.md","tags":[],"version":"current","lastUpdatedBy":"wener","lastUpdatedAt":1661507210000,"frontMatter":{"title":"Parser"},"sidebar":"docs","previous":{"title":"Object C","permalink":"/notes/languages/objc"},"next":{"title":"Antlr 4","permalink":"/notes/languages/parser/antlr/"}}'),r=s(86106),t=s(17776);let i={title:"Parser"},c="Parser",l={},x=[{value:"SQL Operators",id:"sql-operators",level:2},{value:"JSON",id:"json",level:3},{value:"Functions",id:"functions",level:3}];function j(n){let d={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(d.header,{children:(0,r.jsx)(d.h1,{id:"parser",children:"Parser"})}),"\n",(0,r.jsx)(d.p,{children:(0,r.jsx)(d.strong,{children:"\u64CD\u4F5C\u7B26\u5206\u7C7B"})}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(d.table,{children:[(0,r.jsx)(d.thead,{children:(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.th,{children:"Operator"}),(0,r.jsx)(d.th,{children:"Symbol"})]})}),(0,r.jsxs)(d.tbody,{children:[(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"Arithmetic"}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"+-*/%"})})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"Assignment"}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.code,{children:"="}),",",(0,r.jsx)(d.code,{children:"+="}),",",(0,r.jsx)(d.code,{children:"-="}),",",(0,r.jsx)(d.code,{children:"*="}),",",(0,r.jsx)(d.code,{children:"/="}),",",(0,r.jsx)(d.code,{children:"%="})]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"Relational"}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.code,{children:"=="}),",",(0,r.jsx)(d.code,{children:"!="}),",",(0,r.jsx)(d.code,{children:">"}),",",(0,r.jsx)(d.code,{children:"<"}),",",(0,r.jsx)(d.code,{children:">="}),",",(0,r.jsx)(d.code,{children:"<="})]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"Logical"}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.code,{children:"&&"}),",",(0,r.jsx)(d.code,{children:"||"}),",",(0,r.jsx)(d.code,{children:"!"})]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"Unary"}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.code,{children:"+"}),",",(0,r.jsx)(d.code,{children:"-"}),",",(0,r.jsx)(d.code,{children:"++"}),",",(0,r.jsx)(d.code,{children:"--"}),",",(0,r.jsx)(d.code,{children:"!"})]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"Bitwise"}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.code,{children:"~"}),",",(0,r.jsx)(d.code,{children:"<<"}),",",(0,r.jsx)(d.code,{children:">>"}),",",(0,r.jsx)(d.code,{children:">>>"}),",",(0,r.jsx)(d.code,{children:"&"}),",",(0,r.jsx)(d.code,{children:"^"})]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"Ternary"}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"?:"})})]})]})]}),"\n",(0,r.jsxs)(d.ul,{children:["\n",(0,r.jsx)(d.li,{children:"Relational - Comparison"}),"\n",(0,r.jsx)(d.li,{children:"Logical - Conditional"}),"\n"]}),"\n",(0,r.jsx)(d.p,{children:(0,r.jsx)(d.strong,{children:"\u64CD\u4F5C\u7B26\u540D\u5B57"})}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(d.table,{children:[(0,r.jsx)(d.thead,{children:(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.th,{children:"Operator"}),(0,r.jsx)(d.th,{children:"abbr"}),(0,r.jsx)(d.th,{children:"Name"})]})}),(0,r.jsxs)(d.tbody,{children:[(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"+"}),(0,r.jsx)(d.td,{children:"add"}),(0,r.jsx)(d.td,{children:"addition, add, plus, sum"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"-"}),(0,r.jsx)(d.td,{children:"sub"}),(0,r.jsx)(d.td,{children:"subtraction, sub, minus, difference"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"+"}),(0,r.jsx)(d.td,{children:"pos"}),(0,r.jsx)(d.td,{children:"unary plus, positive, pos"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"-"}),(0,r.jsx)(d.td,{children:"neg"}),(0,r.jsx)(d.td,{children:"unary minus, negative, neg"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"*"}),(0,r.jsx)(d.td,{children:"mul"}),(0,r.jsx)(d.td,{children:"multiplication, mul, product, times"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"/"}),(0,r.jsx)(d.td,{children:"div"}),(0,r.jsx)(d.td,{children:"division, div, quotient"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"%"}),(0,r.jsx)(d.td,{children:"mod"}),(0,r.jsx)(d.td,{children:"remainder after division, rem, modulo division, mod"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"++ --"}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"suffix/postfix/prefix increment and decrement"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"=="}),(0,r.jsx)(d.td,{children:"eq"}),(0,r.jsx)(d.td,{children:"Equal to"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{colSpan:"2",children:"gt"}),(0,r.jsx)(d.td,{children:"Greater than"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"<"}),(0,r.jsx)(d.td,{children:"lt"}),(0,r.jsx)(d.td,{children:"Less than"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"!="}),(0,r.jsx)(d.td,{children:"ne"}),(0,r.jsx)(d.td,{children:"Not equal to"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:">="}),(0,r.jsx)(d.td,{children:"gte"}),(0,r.jsx)(d.td,{children:"Greater than or equal to"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"<="}),(0,r.jsx)(d.td,{children:"lte"}),(0,r.jsx)(d.td,{children:"Less than or equal to"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"&&"}),(0,r.jsx)(d.td,{children:"and"}),(0,r.jsx)(d.td,{children:"Logical AND, Conditional AND"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"||"}),(0,r.jsx)(d.td,{children:"or"}),(0,r.jsx)(d.td,{children:"Logical OR"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{rowSpan:"2",children:"!"}),(0,r.jsx)(d.td,{children:"not"}),(0,r.jsx)(d.td,{children:"Logical NOT, Bitwise NOT"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"xor"}),(0,r.jsx)(d.td,{children:"Logical exclusive OR,Bitwise exclusive OR"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"??"}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"Nullish Coalescing"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"?."}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"Optional Chaining"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"&"}),(0,r.jsx)(d.td,{children:"and"}),(0,r.jsx)(d.td,{children:"Bitwise AND"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"|"}),(0,r.jsx)(d.td,{children:"or"}),(0,r.jsx)(d.td,{children:"Bitwise OR"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"&^"}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"Bitwise AND NOT - bit clear"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"~"}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"Bitwise complement"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"<<"}),(0,r.jsx)(d.td,{children:"sl"}),(0,r.jsx)(d.td,{children:"Bitwise shift left"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:">>"}),(0,r.jsx)(d.td,{children:"sr"}),(0,r.jsx)(d.td,{children:"Bitwise shift right"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:">>>"})}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"Bitwise unsigned right shift"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"()"})}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"parentheses, paren"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"()"})}),(0,r.jsx)(d.td,{children:"call"}),(0,r.jsx)(d.td,{children:"Function call"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"[]"})}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"array subscripting, brackets"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"{}"})}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"curly braces"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"."}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"member access"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"->"}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"member access through pointer"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"(type)"}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"cast"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"*"})}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"indirection, dereference, pointer indirection"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"&"})}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"address-of"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"?:"}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"Ternary conditional"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"="}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"Simple assignment"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"+= -="}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"Assignment by sum and difference"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"*= /= %="}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"Assignment by product, quotient, and remainder"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"<<= >>="}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"Assignment by bitwise left shift and right shift"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"&= ^= |="}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"Assignment by bitwise AND, XOR, and OR"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"||= &&="}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"Assignment by Logical"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"??="}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"Logical nullish assignment"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"<-"}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"receive"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"->"}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"send"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsxs)(d.td,{children:["^, ",(0,r.jsx)(d.code,{children:"**"})]}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"power, expoentation"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"..."}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"spread, expand"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:","}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"comma"})]})]})]}),"\n",(0,r.jsx)(d.p,{children:(0,r.jsx)(d.strong,{children:"\u4F18\u5148\u7EA7"})}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(d.table,{children:[(0,r.jsx)(d.thead,{children:(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.th,{children:"Precedence"}),(0,r.jsx)(d.th,{children:"Operator"}),(0,r.jsx)(d.th,{children:"desc"}),(0,r.jsx)(d.th,{children:"Associativity"})]})}),(0,r.jsxs)(d.tbody,{children:[(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"1"}),(0,r.jsx)(d.td,{children:"++,--"}),(0,r.jsx)(d.td,{children:"suffix/postfix"}),(0,r.jsx)(d.td,{children:"left to right"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"()"}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"[]"}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"."}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"->"}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"(type){list}"}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"2"}),(0,r.jsx)(d.td,{children:"++,--"}),(0,r.jsx)(d.td,{children:"prefix"}),(0,r.jsx)(d.td,{children:"right to left"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"+ -"}),(0,r.jsx)(d.td,{children:"unary"}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"! ~"}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"(type)"}),(0,r.jsx)(d.td,{children:"cast"}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"*"}),(0,r.jsx)(d.td,{children:"deref"}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"&"}),(0,r.jsx)(d.td,{children:"address of"}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"sizeof"}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"3"}),(0,r.jsx)(d.td,{children:"* / %"}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"4"}),(0,r.jsx)(d.td,{children:"+ -"}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"5"}),(0,r.jsx)(d.td,{children:"<< >>"}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"6"}),(0,r.jsx)(d.td,{children:"< <="}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"> >="}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"7"}),(0,r.jsx)(d.td,{children:"== !="}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"8"}),(0,r.jsx)(d.td,{rowSpan:"2",children:"&"}),(0,r.jsx)(d.td,{children:"bitwise"}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"9"}),(0,r.jsx)(d.td,{children:"bitwise"}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"10"}),(0,r.jsx)(d.td,{children:"|"}),(0,r.jsx)(d.td,{children:"bitwise"}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"11"}),(0,r.jsx)(d.td,{children:"&&"}),(0,r.jsx)(d.td,{children:"and"}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"12"}),(0,r.jsx)(d.td,{children:"||"}),(0,r.jsx)(d.td,{children:"or"}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"13"}),(0,r.jsx)(d.td,{children:"?:"}),(0,r.jsx)(d.td,{children:"ternary"}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"14"}),(0,r.jsx)(d.td,{children:"="}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"+= -="}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"*= /="}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"<<= >>="}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"&= ^= |="}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"15"}),(0,r.jsx)(d.td,{children:","}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{})]})]})]}),"\n",(0,r.jsxs)(d.ul,{children:["\n",(0,r.jsxs)(d.li,{children:["\u4F18\u5148\u7EA7\u987A\u5E8F\n",(0,r.jsxs)(d.ul,{children:["\n",(0,r.jsxs)(d.li,{children:["Unary operators -> Binary operators (MACAO)\n",(0,r.jsxs)(d.ul,{children:["\n",(0,r.jsx)(d.li,{children:"M - Multiplicative"}),"\n",(0,r.jsx)(d.li,{children:"A - Additive"}),"\n",(0,r.jsx)(d.li,{children:"C - Comparison"}),"\n",(0,r.jsx)(d.li,{children:"A - And"}),"\n",(0,r.jsx)(d.li,{children:"O - Or"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(d.li,{children:"Statement operators - ++,-- - \u4E0D\u8003\u8651\u5728\u4F18\u5148\u7EA7\u91CC"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(d.hr,{}),"\n",(0,r.jsxs)(d.ul,{children:["\n",(0,r.jsxs)(d.li,{children:["\u53C2\u8003\n",(0,r.jsxs)(d.ul,{children:["\n",(0,r.jsx)(d.li,{children:(0,r.jsx)(d.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators",children:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators"})}),"\n",(0,r.jsx)(d.li,{children:(0,r.jsx)(d.a,{href:"https://en.cppreference.com/w/c/language/operator_precedence",children:"https://en.cppreference.com/w/c/language/operator_precedence"})}),"\n",(0,r.jsxs)(d.li,{children:[(0,r.jsx)(d.a,{href:"http://lisperator.net/pltut",children:"How to implement a programming language in JavaScript"}),"\n",(0,r.jsxs)(d.ul,{children:["\n",(0,r.jsx)(d.li,{children:"\u89E3\u6790, \u89E3\u91CA\u5668, \u8F6C\u8BD1\u5668, CPS"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(d.li,{children:(0,r.jsx)(d.a,{href:"https://en.wikipedia.org/wiki/Comparison_of_parser_generators",children:"Comparison of parser generators"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(d.h2,{id:"sql-operators",children:"SQL Operators"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(d.table,{children:[(0,r.jsx)(d.thead,{children:(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.th,{children:"expr"}),(0,r.jsx)(d.th,{children:"alias"})]})}),(0,r.jsxs)(d.tbody,{children:[(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"IS NOT DISTINCT FROM"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"IS"})})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"IS DISTINCT FROM"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"IS NOT"})})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"IS"})}),(0,r.jsx)(d.td,{children:"="})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"IS NOT"})}),(0,r.jsx)(d.td,{children:"!="})]})]})]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(d.table,{children:[(0,r.jsx)(d.thead,{children:(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.th,{children:"Operator"}),(0,r.jsx)(d.th,{children:"desc"}),(0,r.jsx)(d.th,{children:"flavor"})]})}),(0,r.jsxs)(d.tbody,{children:[(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"AND"}),(0,r.jsx)(d.td,{children:"&&"}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"OR"}),(0,r.jsx)(d.td,{children:"||"}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"="}),(0,r.jsx)(d.td,{children:"=="}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"<>"})}),(0,r.jsx)(d.td,{children:"!="}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"!!="}),(0,r.jsx)(d.td,{children:"not in"}),(0,r.jsx)(d.td,{children:"PostgresSQL"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"~~"})}),(0,r.jsx)(d.td,{children:"like"}),(0,r.jsx)(d.td,{children:"PostgresSQL"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"!~~"})}),(0,r.jsx)(d.td,{children:"not like"}),(0,r.jsx)(d.td,{children:"PostgresSQL"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"~"})}),(0,r.jsx)(d.td,{children:"regexp"}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"!~"})}),(0,r.jsx)(d.td,{children:"not regexp"}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"~*"})}),(0,r.jsx)(d.td,{children:"iregexp"}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"!~*"})}),(0,r.jsx)(d.td,{children:"not iregexp"}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"!~*"})}),(0,r.jsx)(d.td,{children:"not iregexp"}),(0,r.jsx)(d.td,{children:"PostgresSQL"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"||"})}),(0,r.jsx)(d.td,{children:"concatenate strings"}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"[NOT] IN"})}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"[NOT] IN [ANY|ALL]"})}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"PostgresSQL"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"string [NOT] LIKE pattern [ESCAPE escape-character]"})}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"[NOT] LIKE [ANY|ALL]"})}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"PostgresSQL"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"[NOT] ILIKE [ANY|ALL]"})}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"string [NOT] SIMILAR TO pattern [ESCAPE escape-character]"})}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"PostgresSQL"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"[NOT] REGEXP"})}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"PostgresSQL"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"[NOT] IREGEXP"})}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"PostgresSQL"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"RLIKE"}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"MySQL"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"[NOT] BETWEEN expr AND expr"})}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"[NOT] BETWEEN SYMMETRIC expr AND expr"})}),(0,r.jsx)(d.td,{children:"\u81EA\u52A8\u6392\u5E8F\u4E24\u4E2A\u503C"}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"IS [NOT] (TRUE|FALSE|NULL)"})}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"IS [NOT] UNKNOWN"})}),(0,r.jsx)(d.td,{children:"UNKNOWN -> NULL"}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"ISNULL"}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"NOTNULL"}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"ARRAY[expr...]"})}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"expr::TYPE"})}),(0,r.jsx)(d.td,{children:"cast"}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"expr [ANY|SOME|ALL] ( ... )"})}),(0,r.jsx)(d.td,{children:"\u6570\u7EC4\u6BD4\u8F83 - SOME=ANY"}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"row IS [NOT] DISTINCT FROM raw"})}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"!"}),(0,r.jsx)(d.td,{children:"factorial"}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"!!"}),(0,r.jsx)(d.td,{children:"factorial (left operator)"}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"%"}),(0,r.jsxs)(d.td,{children:["module - ",(0,r.jsx)(d.code,{children:"5 % 4"})]}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"%"}),(0,r.jsxs)(d.td,{children:["truncate - ",(0,r.jsx)(d.code,{children:"% 4.5"})]}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:":"}),(0,r.jsxs)(d.td,{children:["Natural Exponentiation - ",(0,r.jsx)(d.code,{children:": 3.0"})]}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:";"}),(0,r.jsxs)(d.td,{children:["Natural Logarithm - ",(0,r.jsx)(d.code,{children:"(; 5.0)"})]}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{rowSpan:"2",children:"@"}),(0,r.jsxs)(d.td,{children:["absolute - ",(0,r.jsx)(d.code,{children:"@ -5"})]}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsxs)(d.td,{children:["Exponentiation - ",(0,r.jsx)(d.code,{children:"3.0 ^ 2.0"})]}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"|/"})}),(0,r.jsxs)(d.td,{children:["Square root - ",(0,r.jsx)(d.code,{children:"|/25.0"})]}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"||/"})}),(0,r.jsxs)(d.td,{children:["Cube root - ",(0,r.jsx)(d.code,{children:"||/27.0"})]}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.code,{children:"#<"}),",",(0,r.jsx)(d.code,{children:"#>"}),",",(0,r.jsx)(d.code,{children:"#<="}),",",(0,r.jsx)(d.code,{children:"#>="}),",",(0,r.jsx)(d.code,{children:"#<>"}),",",(0,r.jsx)(d.code,{children:"#="})]}),(0,r.jsx)(d.td,{children:"interval relation"}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"<#>"})}),(0,r.jsx)(d.td,{children:"convert to tine interval"}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"|"})}),(0,r.jsx)(d.td,{children:"start of interval"}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"~="}),(0,r.jsx)(d.td,{children:"same as"}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"<?>"})}),(0,r.jsx)(d.td,{children:"time inside interval"}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.code,{children:"&"})," ",(0,r.jsx)(d.code,{children:"|"})," ",(0,r.jsx)(d.code,{children:"#"})," ",(0,r.jsx)(d.code,{children:"~"})," ",(0,r.jsx)(d.code,{children:"<<"})," ",(0,r.jsx)(d.code,{children:">>"})]}),(0,r.jsx)(d.td,{children:"Bitewise AND, OR, XOR, NOT, Shift left, Shift right"}),(0,r.jsx)(d.td,{children:"PostgreSQL"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"MOD"}),(0,r.jsx)(d.td,{children:"%"}),(0,r.jsx)(d.td,{children:"MySQL"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"->"}),(0,r.jsx)(d.td,{children:"JSON Extract"}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{rowSpan:"2",children:"->>"}),(0,r.jsx)(d.td,{children:"JSON Extract to Text"}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"Bitwise XOR"}),(0,r.jsx)(d.td,{children:"MySQL"})]})]})]}),"\n",(0,r.jsxs)(d.ul,{children:["\n",(0,r.jsx)(d.li,{children:'num_nonnulls( VARIADIC "any" ) - \u8FD4\u56DE nonnull \u6570\u91CF'}),"\n",(0,r.jsx)(d.li,{children:'num_nulls( VARIADIC "any" ) - \u8FD4\u56DE null \u6570\u91CF'}),"\n",(0,r.jsx)(d.li,{children:(0,r.jsx)(d.a,{href:"https://www.postgresql.org/docs/current/functions-math.html",children:"https://www.postgresql.org/docs/current/functions-math.html"})}),"\n"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(d.table,{children:[(0,r.jsx)(d.thead,{children:(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.th,{children:"Conditional"}),(0,r.jsx)(d.th,{children:"desc"})]})}),(0,r.jsxs)(d.tbody,{children:[(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"CASE WHEN condition THEN result [WHEN...] [ELSE result] END"})}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"CASE expr WHEN value THEN result [WHEN...] [ELSE result] END"})}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"COALESCE(value [, ...])"})}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"NULLIF(value1, value2)"})}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"GREATEST(value [, ...])"})}),(0,r.jsx)(d.td,{})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"LEAST(value [, ...])"})}),(0,r.jsx)(d.td,{})]})]})]}),"\n",(0,r.jsx)(d.pre,{children:(0,r.jsx)(d.code,{className:"language-sql",children:"-- \u6240\u6709\u7684 operator\nSELECT\n  oprleft,\n  oprright,\n  oprresult,\n  oprcode\nFROM\n  pg_operator;\n"})}),"\n",(0,r.jsxs)(d.ul,{children:["\n",(0,r.jsxs)(d.li,{children:["\u53C2\u8003\n",(0,r.jsxs)(d.ul,{children:["\n",(0,r.jsxs)(d.li,{children:[(0,r.jsx)(d.a,{href:"https://tomassetti.me/parsing-sql/",children:"https://tomassetti.me/parsing-sql/"}),"\n",(0,r.jsxs)(d.ul,{children:["\n",(0,r.jsx)(d.li,{children:(0,r.jsx)(d.a,{href:"https://news.ycombinator.com/item?id=32560039",children:"HN"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(d.li,{children:(0,r.jsx)(d.a,{href:"https://www.postgresql.org/docs/current/functions.html",children:"https://www.postgresql.org/docs/current/functions.html"})}),"\n",(0,r.jsx)(d.li,{children:(0,r.jsx)(d.a,{href:"https://www.postgresql.org/docs/6.3/c09.htm",children:"https://www.postgresql.org/docs/6.3/c09.htm"})}),"\n",(0,r.jsx)(d.li,{children:(0,r.jsx)(d.a,{href:"https://sqlite.org/lang_expr.html",children:"https://sqlite.org/lang_expr.html"})}),"\n",(0,r.jsx)(d.li,{children:(0,r.jsx)(d.a,{href:"https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html",children:"https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html"})}),"\n",(0,r.jsx)(d.li,{children:(0,r.jsx)(d.a,{href:"https://dev.mysql.com/doc/refman/8.0/en/non-typed-operators.html",children:"https://dev.mysql.com/doc/refman/8.0/en/non-typed-operators.html"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(d.h3,{id:"json",children:"JSON"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(d.table,{children:[(0,r.jsx)(d.thead,{children:(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.th,{children:"Operator"}),(0,r.jsx)(d.th,{children:"desc"})]})}),(0,r.jsxs)(d.tbody,{children:[(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"json->integer"}),(0,r.jsx)(d.td,{children:"\u6570\u7EC4"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"json->text"}),(0,r.jsx)(d.td,{children:"\u5B57\u6BB5"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"json->>integer, json->>text"}),(0,r.jsx)(d.td,{children:"\u8FD4\u56DE\u4E3A text"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"json#>text[]"})}),(0,r.jsx)(d.td,{children:"\u63D0\u53D6 path"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"json#>>text[]"})}),(0,r.jsx)(d.td,{children:"\u63D0\u53D6 \u4E3A text"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"jsonb @> jsonb"}),(0,r.jsx)(d.td,{children:"\u5305\u542B"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"jsonb <@ jsonb"}),(0,r.jsx)(d.td,{children:"\u88AB\u5305\u542B"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"jsonb ? text"}),(0,r.jsx)(d.td,{children:"key \u5B58\u5728"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"jsonb ?| text[]"}),(0,r.jsx)(d.td,{children:"\u4EFB\u610F key \u5B58\u5728"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"jsonb ?& text[]"}),(0,r.jsx)(d.td,{children:"\u6240\u6709 key \u5B58\u5728"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"jsonb || jsonb"}),(0,r.jsx)(d.td,{children:"\u5408\u5E76"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"jsonb - text"}),(0,r.jsx)(d.td,{children:"\u5220\u9664 key"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"jsonb - text[]"}),(0,r.jsx)(d.td,{children:"\u5220\u9664 keys"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"jsonb - integer"}),(0,r.jsx)(d.td,{children:"\u5220\u9664 \u6570\u7EC4 \u5143\u7D20"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"jsonb #- text[]"}),(0,r.jsx)(d.td,{children:"\u5220\u9664 path \u5143\u7D20"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"jsonb @? jsonpath"}),(0,r.jsx)(d.td,{children:"JSONPATH \u5339\u914D"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"jsonb @@ jsonpath"}),(0,r.jsx)(d.td,{children:"JSONPATH \u5339\u914D - \u5FC5\u987B\u4E3A Boolean"})]})]})]}),"\n",(0,r.jsxs)(d.ul,{children:["\n",(0,r.jsx)(d.li,{children:(0,r.jsx)(d.a,{href:"https://www.postgresql.org/docs/current/functions-json.html",children:"https://www.postgresql.org/docs/current/functions-json.html"})}),"\n"]}),"\n",(0,r.jsx)(d.h3,{id:"functions",children:"Functions"}),"\n",(0,r.jsxs)(d.ul,{children:["\n",(0,r.jsx)(d.li,{children:(0,r.jsx)(d.a,{href:"https://www.sqlite.org/lang_corefunc.html",children:"https://www.sqlite.org/lang_corefunc.html"})}),"\n"]})]})}function h(n={}){let{wrapper:d}={...(0,t.R)(),...n.components};return d?(0,r.jsx)(d,{...n,children:(0,r.jsx)(j,{...n})}):j(n)}},17776:function(n,d,s){s.d(d,{R:()=>i,x:()=>c});var e=s(7378);let r={},t=e.createContext(r);function i(n){let d=e.useContext(t);return e.useMemo(function(){return"function"==typeof n?n(d):{...d,...n}},[d,n])}function c(n){let d;return d=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:i(n.components),e.createElement(t.Provider,{value:d},n.children)}}}]);