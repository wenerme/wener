"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["55383"],{91230:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>i,toc:()=>o,default:()=>m,metadata:()=>r,assets:()=>d,contentTitle:()=>l});var r=JSON.parse('{"id":"os/linux/sys/zram","title":"zram","description":"- \u652F\u6301\u538B\u7F29\u7684 \u5185\u5B58 \u5757\u5B58\u50A8\u7CFB\u7EDF","source":"@site/../notes/os/linux/sys/zram.md","sourceDirName":"os/linux/sys","slug":"/os/linux/sys/zram","permalink":"/notes/os/linux/sys/zram","draft":false,"unlisted":false,"editUrl":"https://github.com/wenerme/wener/edit/master/notes/../notes/os/linux/sys/zram.md","tags":[],"version":"current","lastUpdatedBy":"wener","lastUpdatedAt":1690946986000,"frontMatter":{"title":"zram"},"sidebar":"docs","previous":{"title":"USB","permalink":"/notes/os/linux/sys/usb"},"next":{"title":"util-linux","permalink":"/notes/os/linux/util-linux"}}'),s=t(86106),a=t(17776);let i={title:"zram"},l="zram",d={},o=[];function c(e){let n={a:"a",code:"code",h1:"h1",header:"header",li:"li",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"zram",children:"zram"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u652F\u6301\u538B\u7F29\u7684 \u5185\u5B58 \u5757\u5B58\u50A8\u7CFB\u7EDF"}),"\n",(0,s.jsx)(n.li,{children:"\u652F\u6301\u540E\u7AEF\u5B58\u50A8"}),"\n",(0,s.jsx)(n.li,{children:"\u573A\u666F - swap, /tmp, ramdisk"}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.kernel.org/doc/html/next/admin-guide/blockdev/zram.html",children:"https://www.kernel.org/doc/html/next/admin-guide/blockdev/zram.html"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"modprobe zram\n# zramctl\napk add util-linux-misc\nzramctl /dev/zram0 --algorithm zstd --size 32G\n\n# \u53EF\u4EE5\u7528\u6765\u505A swap - \u51CF\u5C11\u5185\u5B58\u4F7F\u7528\n# \u786E\u4FDD\u5173\u95ED zswap\nmkswap -U clear /dev/zram0\nswapon --priority 100 /dev/zram0\n\n\necho zaram | tee -a /etc/modules-load.d/zram.conf\n\n# https://github.com/vaeth/zram-init\napk add zram-init\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-txt",metastring:"title=/etc/udev/rules.d/99-zram.rules",children:'ACTION=="add", KERNEL=="zram0", ATTR{comp_algorithm}="zstd", ATTR{disksize}="4G", RUN="/usr/bin/mkswap -U clear /dev/%k", TAG+="systemd"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-txt",metastring:"title=/etc/fstab",children:"/dev/zram0 none swap defaults,pri=100 0 0\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://wiki.archlinux.org/title/Zram",children:"https://wiki.archlinux.org/title/Zram"})}),"\n"]})]})}function m(e={}){let{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},17776:function(e,n,t){t.d(n,{R:()=>i,x:()=>l});var r=t(7378);let s={},a=r.createContext(s);function i(e){let n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);