"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["55791"],{4016:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>r,toc:()=>c,default:()=>m,metadata:()=>o,assets:()=>a,contentTitle:()=>l});var o=JSON.parse('{"id":"os/alpine/alpine-pxe","title":"pxe","description":"- https://pkgs.alpinelinux.org/package/edge/testing/x86_64/alpine-ipxe","source":"@site/../notes/os/alpine/alpine-pxe.md","sourceDirName":"os/alpine","slug":"/os/alpine/pxe","permalink":"/notes/os/alpine/pxe","draft":false,"unlisted":false,"editUrl":"https://github.com/wenerme/wener/edit/master/notes/../notes/os/alpine/alpine-pxe.md","tags":[{"inline":true,"label":"Netboot","permalink":"/notes/tags/netboot"}],"version":"current","lastUpdatedBy":"wener","lastUpdatedAt":1693804740000,"frontMatter":{"tags":["Netboot"]},"sidebar":"docs","previous":{"title":"Alpine \u5305\u7EF4\u62A4","permalink":"/notes/os/alpine/pkgs"},"next":{"title":"Alpine Linux on Raspberry Pi","permalink":"/notes/os/alpine/rpi"}}'),s=t(86106),i=t(17776);let r={tags:["Netboot"]},l="pxe",a={},c=[{value:"boot.ipxe",id:"bootipxe",level:3}];function p(e){let n={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"pxe",children:"pxe"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://pkgs.alpinelinux.org/package/edge/testing/x86_64/alpine-ipxe",children:"https://pkgs.alpinelinux.org/package/edge/testing/x86_64/alpine-ipxe"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# \u4F7F\u7528 alpine \u542F\u52A8\u811A\u672C\n# QEMU \u62A5 imgtrust \u547D\u4EE4\u627E\u4E0D\u5230 http://ipxe.org/cmd/imgtrust\nchain --autofree http://boot.alpinelinux.org/boot.ipxe\n"})}),"\n",(0,s.jsx)(n.h3,{id:"bootipxe",children:"boot.ipxe"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'#!ipxe\n\nset os Alpine Linux\niseq ${ipxe_cloud_config} packet && set provider (Packet.net) ||\niseq ${alpine_loader} true && set img_verify enabled || set img_verify disabled\nset console tty0 ||\nset cmdline modules=loop,squashfs quiet nomodeset ||\nset default_cmdline default ||\nset start_sshd no ||\nset branch v3.17 ||\nset version 3.17.1 ||\nset flavor virt ||\niseq ${buildarch} arm64 && goto arm64 ||\ncpuid --ext 29 && goto x86_64 || goto x86\n\n:arm64\nset arch aarch64 ||\nset acpi acpi=force ||\nset console ttyAMA0 ||\niseq ${ipxe_cloud_config} packet && set console ttyAMA0,115200 ||\ngoto menu\n\n:x86_64\nset arch x86_64 ||\niseq ${ipxe_cloud_config} packet && set console ttyS1,115200n8 ||\ngoto menu\n\n:x86\nset arch x86 ||\ngoto menu\n\n:menu\nset space:hex 20:20\nset space ${space:string}\nmenu ${os} ${provider} [ ${arch} ]\nitem --gap Boot options\nitem branch ${space} Alpine release [ ${branch} ]\niseq ${arch} x86_64 && item flavor ${space} Kernel flavor [ ${flavor} ] ||\niseq ${alpine_loader} true && item img_verify ${space} Image verification [ ${img_verify} ] ||\nitem cmdline ${space} Linux cmdline [ ${default_cmdline} ]\nitem console ${space} Set console [ ${console} ]\nitem start_sshd ${space} Start sshd at first boot [ ${start_sshd} ]\nitem --gap Booting\nitem boot ${space} Boot with above settings\nitem --gap Utilities\nitem shell ${space} iPXE Shell\nitem reboot ${space} Reboot system\nchoose item\ngoto ${item}\n\n:branch\nmenu ${os} ${provider} [ ${arch} ]\nitem v3.17 Version 3.17.1\nitem edge Version 20230208\nitem v3.8 Version 3.8.5\nitem v3.9 Version 3.9.6\nitem v3.10 Version 3.10.9\nitem v3.11 Version 3.11.13\nitem v3.12 Version 3.12.12\nchoose branch || goto shell\niseq ${branch} v3.17 && set version 3.17.1 ||\niseq ${branch} edge && set version 20230208 ||\niseq ${branch} v3.8 && set version 3.8.5 ||\niseq ${branch} v3.9 && set version 3.9.6 ||\niseq ${branch} v3.10 && set version 3.10.9 ||\niseq ${branch} v3.11 && set version 3.11.13 ||\niseq ${branch} v3.12 && set version 3.12.12 ||\ngoto menu\n\n:flavor\nmenu ${os} ${provider} [ ${arch} ]\nitem lts Linux lts\nitem vanilla Linux vanilla\nitem virt Linux virt\nchoose flavor || goto shell\ngoto menu\n\n:console\nmenu ${os} ${provider} [ ${arch} ]\nitem tty0 Console on tty0\nitem ttyS0 Console on ttyS0\nitem ttyS1 Console on ttyS1\nitem ttyAMA0 Console on ttyAMA0\nitem custom Enter custom console\nchoose console || goto menu\niseq ${console} custom && goto custom_console ||\ngoto menu\n\n:custom_console\nclear console\necho -n Enter console: && read console\ngoto menu\n\n:shell\necho Type "exit" to return to menu.\nshell\ngoto menu\n\n:img_verify\niseq ${img_verify} enabled && set img_verify disabled || set img_verify enabled\ngoto menu\n\n:cmdline\necho -n Enter extra cmdline options:${space} && read cmdline\nset default_cmdline modified\ngoto menu\n\n:start_sshd\nclear start_sshd\necho -n Enter url to ssh key:${space} && read ssh_key\nisset ${ssh_key} && set start_sshd yes || set start_sshd no\niseq ${start_sshd} yes && set ssh_key ssh_key=${ssh_key} || clear ssh_key\ngoto menu\n\n:boot\nisset ${console} && set console console=${console} ||\nset mirror http://dl-cdn.alpinelinux.org/alpine\nset img-url ${mirror}/${branch}/releases/${arch}/netboot-${version}\nset sig-url sigs/${branch}/${arch}/${version}\nset repo-url ${mirror}/${branch}/main\nset modloop-url ${img-url}/modloop-${flavor}\nimgfree\nkernel ${img-url}/vmlinuz-${flavor} ${cmdline} alpine_repo=${repo-url} modloop=${modloop-url} ${console} ${acpi} ${ssh_key}\ninitrd ${img-url}/initramfs-${flavor}\niseq ${img_verify} enabled && goto verify_img || goto no_img_verify\n:verify_img\nimgverify vmlinuz-${flavor} ${sig-url}/vmlinuz-${flavor}.sig\nimgverify initramfs-${flavor} ${sig-url}/initramfs-${flavor}.sig\n:no_img_verify\nboot\ngoto alpine_exit\n\n:reboot\nreboot\n\n:poweroff\npoweroff\n\n:alpine_exit\nclear menu\nexit 0\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"http://boot.alpinelinux.org/boot.ipxe",children:"http://boot.alpinelinux.org/boot.ipxe"})}),"\n"]})]})}function m(e={}){let{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},17776:function(e,n,t){t.d(n,{R:()=>r,x:()=>l});var o=t(7378);let s={},i=o.createContext(s);function r(e){let n=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);