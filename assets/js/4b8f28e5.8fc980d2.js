"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["45928"],{11574:function(n,e,r){r.r(e),r.d(e,{frontMatter:()=>t,toc:()=>d,default:()=>h,metadata:()=>s,assets:()=>a,contentTitle:()=>c});var s=JSON.parse('{"id":"service/forge/gitlab/gitlab-runner","title":"Gitlab Runner","description":"- \u662F\u4EC0\u4E48\uFF1F","source":"@site/../notes/service/forge/gitlab/gitlab-runner.md","sourceDirName":"service/forge/gitlab","slug":"/service/forge/gitlab/runner","permalink":"/notes/service/forge/gitlab/runner","draft":false,"unlisted":false,"editUrl":"https://github.com/wenerme/wener/edit/master/notes/../notes/service/forge/gitlab/gitlab-runner.md","tags":[],"version":"current","lastUpdatedBy":"wener","lastUpdatedAt":1672817159000,"frontMatter":{"title":"Gitlab Runner"},"sidebar":"docs","previous":{"title":"Gitlab Repository","permalink":"/notes/service/forge/gitlab/repo"},"next":{"title":"Gitlab SAST","permalink":"/notes/service/forge/gitlab/sast"}}'),i=r(86106),l=r(17776);let t={title:"Gitlab Runner"},c="Gitlab Runner",a={},d=[{value:"\u914D\u7F6E",id:"\u914D\u7F6E",level:2},{value:"Docker in Docker",id:"docker-in-docker",level:2},{value:"\u5C06\u5171\u4EAB runner \u4FEE\u6539\u4E3A \u79C1\u6709",id:"\u5C06\u5171\u4EAB-runner-\u4FEE\u6539\u4E3A-\u79C1\u6709",level:2},{value:"Windows",id:"windows",level:2},{value:"AlpineLinux",id:"alpinelinux",level:2},{value:"Shell in Docker",id:"shell-in-docker",level:2},{value:"Kubernetes Executor",id:"kubernetes-executor",level:2},{value:"zombie process in Runner",id:"zombie-process-in-runner",level:2}];function o(n){let e={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"gitlab-runner",children:"Gitlab Runner"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\u662F\u4EC0\u4E48\uFF1F\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Gitlab \u8FD0\u884C CI/CD \u4EFB\u52A1\u7684\u7EC8\u7AEF"}),"\n",(0,i.jsx)(e.li,{children:"Golang \u5B9E\u73B0"}),"\n",(0,i.jsx)(e.li,{children:"\u652F\u6301\u67B6\u6784 x86, AMD64, ARM64, ARM, s390x"}),"\n",(0,i.jsx)(e.li,{children:"\u652F\u6301\u5E73\u53F0 Linux, Windows, macOS, FreeBSD"}),"\n",(0,i.jsx)(e.li,{children:"\u90E8\u7F72\u65B9\u5F0F Docker, Helm, Shell"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["Runner \u7C7B\u578B\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["shell\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u76F4\u63A5 Shell \u6267\u884C\u811A\u672C\uFF0C\u6700\u5FEB\uFF0C\u4E0D\u9700\u8981\u542F\u52A8\u5BB9\u5668 - \u4F8B\u5982\u6784\u5EFA Golang \u53EF\u80FD\u53EA\u9700\u8981\u5341\u6765\u79D2"}),"\n",(0,i.jsx)(e.li,{children:"\u9700\u8981\u73AF\u5883\u9700\u8981\u63D0\u524D\u51C6\u5907\u597D"}),"\n",(0,i.jsx)(e.li,{children:"\u5EFA\u8BAE\u4F7F\u7528 root \u6743\u9650\uFF0C\u56E0\u6B64\u5EFA\u8BAE\u901A\u8FC7 docker \u6765\u4F7F\u7528"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["docker\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u652F\u6301 image \u6307\u5B9A\u955C\u50CF"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["ssh\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u901A\u8FC7 SSH \u6267\u884C\u547D\u4EE4\uFF0CCI \u6267\u884C\u4EFB\u52A1\u65F6\u53EF\u80FD\u66F4\u6709\u610F\u4E49"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["kubernetes\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u5728\u96C6\u7FA4\u73AF\u5883\u4E0B"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.li,{children:"docker-windows, docker-ssh, parallels, virtualbox, docker+machine, docker-ssh+machine"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\u53C2\u8003\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://about.gitlab.com/blog/2020/05/27/best-practices-for-kubernetes-runners/",children:"Best practices to keep your Kubernetes runners moving"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:'# \u67E5\u770B\u6CE8\u518C\u53C2\u6570\ndocker run --rm -it gitlab/gitlab-runner:alpine register --help\n# \u4EA4\u4E92\u5F0F\u6CE8\u518C\ndocker run --rm -it gitlab/gitlab-runner:alpine register\n# \u975E\u4EA4\u4E92\u5F0F\u6CE8\u518C\nTOKEN=""\n# \u6CE8\u518C\u4E3A docker executor\ndocker run --rm \\\n  -v /data/gitlab-runner/config:/etc/gitlab-runner gitlab/gitlab-runner:alpine register \\\n  --non-interactive \\\n  --executor "docker" \\\n  --docker-image wener/base:latest \\\n  --url "https://gitlab.com/" \\\n  --registration-token "$TOKEN" \\\n  --description "docker-runner" \\\n  --tag-list "docker,internal" \\\n  --run-untagged="true" \\\n  --locked="false" \\\n  --access-level="not_protected"\n\n# \u4F1A\u751F\u6210\u914D\u7F6E /data/gitlab-runner/config/config.toml\n\n# \u542F\u52A8 runner\ndocker run -d --restart always -e TZ=Asia/Shanghai \\\n  -v /data/gitlab-runner/config:/etc/gitlab-runner \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  --name gitlab-runner gitlab/gitlab-runner:alpine\n'})}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"register"}),(0,i.jsx)(e.th,{children:"env"}),(0,i.jsx)(e.th,{children:"note"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"-r,--registration-token=VALUE"}),(0,i.jsx)(e.td,{children:"REGISTRATION_TOKEN"}),(0,i.jsx)(e.td,{children:"\u65B0\u6CE8\u518C"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"-t,--token"}),(0,i.jsx)(e.td,{children:"CI_SERVER_TOKEN"}),(0,i.jsx)(e.td,{children:"\u8BC6\u522B\u5DF2\u7ECF\u6CE8\u518C"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"-u,--url"}),(0,i.jsx)(e.td,{children:"CI_SERVER_URL"}),(0,i.jsx)(e.td,{})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"-n,--non-interactive"}),(0,i.jsx)(e.td,{children:"REGISTER_NON_INTERACTIVE"}),(0,i.jsx)(e.td,{})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"--builds-dir"}),(0,i.jsx)(e.td,{children:"RUNNER_BUILDS_DIR"}),(0,i.jsx)(e.td,{})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"--cache-dir"}),(0,i.jsx)(e.td,{children:"RUNNER_CACHE_DIR"}),(0,i.jsx)(e.td,{})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"--executor"}),(0,i.jsx)(e.td,{children:"RUNNER_EXECUTOR"}),(0,i.jsx)(e.td,{children:"shell, docker"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"--name,--description"}),(0,i.jsx)(e.td,{children:"RUNNER_NAME"}),(0,i.jsx)(e.td,{})]})]})]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"export REGISTER_NON_INTERACTIVE=true\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://docs.gitlab.com/runner/commands/#gitlab-runner-register",children:"https://docs.gitlab.com/runner/commands/#gitlab-runner-register"})}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"\u914D\u7F6E",children:"\u914D\u7F6E"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["/etc/gitlab-runner/config.toml - ",(0,i.jsx)(e.code,{children:"*nix"})]}),"\n",(0,i.jsxs)(e.li,{children:["~/.gitlab-runner/config.tom - ",(0,i.jsx)(e.code,{children:"*nix"})," \u975E root"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"./config.toml"})," - \u5176\u4ED6"]}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://docs.gitlab.com/runner/configuration/advanced-configuration.html",children:"Advanced configuration"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ini",children:'concurrent=4\n# debug, info, warn, error, fatal, panic\nlog_level=info\n# runner, text, json\nlog_format=runner\n# \u68C0\u6D4B\u4EFB\u52A1\u7684\u95F4\u9694 - \u6700\u4F4E 3s\ncheck_interval=3\n# \u9519\u8BEF\u53D1\u9001\u5230 Sentry\nsentry_dsn=false\n# metrics \u5730\u5740\n# listen_address=0.0.0.0:9090\n\n# \u591A runner \u534F\u540C\u7528\u7684\u4F1A\u8BDD\u670D\u52A1\n[session_server]\n  listen_address = "[::]:8093"\n  advertise_address = "runner-host-name.tld:8093"\n  session_timeout = 1800\n\n[[runners]]\n  name = "My Docker Runner"\n  # Gitlab \u5730\u5740\n  url = "http://127.0.0.1:3000/"\n  # \u5185\u90E8\u7279\u6B8A token\n  token = "$TOKEN"\n  # tls-ca-file\n  # tls-cert-file\n  # tls-key-file\n  # \u8BE5 token \u80FD\u5E76\u884C\u5904\u7406\u7684\u4EFB\u52A1\u6570 - 0 \u4E0D\u9650\n  limit=0\n  # shell, docker, docker-windows, docker-ssh, ssh, parallels, virtualbox, docker+machine\n  # docker-ssh+machine, kubernetes\n  executor = "docker"\n  # bash, sh, powershell, pwsh (PowerShell Core)\n  shell=""\n  # \u6784\u5EFA\u76EE\u5F55 - Locally, Docker, SSH\n  # builds_dir=/build\n  # \u7F13\u5B58\u76EE\u5F55 - Locally, Docker, SSH - docker \u73AF\u5883\u9700\u8981\u8BE5\u76EE\u5F55\u5728 volume \u4E2D\n  # cache_dir=/cache\n  # \u73AF\u5883\u53D8\u91CF\n  # environment=["ENV=value", "LC_ALL=en_US.UTF-8"]\n  # \u8BF7\u6C42\u4EFB\u52A1\u7684\u5E76\u53D1\n  request_concurrency=1\n  # \u65E5\u5FD7\u5927\u5C0F - \u9ED8\u8BA4 4MB\n  output_limit=4096\n  # clone \u4E4B\u524D hook \u811A\u672C\n  # pre_clone_script=\n  # pre_build_script\n  # post_build_script\n\n  # \u4FEE\u6539 clone \u7528\u7684\u5730\u5740\n  # clone_url\n\n  # \u662F\u5426\u7981\u7528 CI_DEBUG_TRACE \u7279\u6027\n  # debug_trace_disabled\n  # Extra job monitoring workers that pass their results as job artifacts to GitLab\n  # referees\n\n# \u81EA\u5B9A\u4E49\u6784\u5EFA\u76EE\u5F55\n# GIT_CLONE_PATH\n[runners.custom_build_dir]\n# \u9ED8\u8BA4\u542F\u7528\u73AF\u5883 kubernetes, docker, docker-ssh, docker+machine, docker-ssh+machine\n  # enabled = true\n[runners.docker]\n  # \u4F18\u5148\u4F7F\u7528 DOCKER_HOST\n  host=unix:///var/run/docker.sock\n  hostname=""\n  runtime=""\n\n  # ca.pem, cert.pem, key.pem\n  # tls_cert_path\n  # tls_verify\n\n  # build \u4F7F\u7528\u955C\u50CF\n  image = "docker:stable"\n  # \u5185\u5B58\u9650\u5236 - \u4F8B\u5982 1G\n  memory=""\n  memory_swap=""\n  memory_reservation=""\n\n  # OOM \u65F6\u4E0D kill\n  oom_kill_disable=false\n  # OOM kill \u4F18\u5148\u7EA7\n  oom_score_adjust=0\n\n  # CPU \u9650\u5236\n  cpuset_cpus=0\n  cpu_shares=1024\n  cpus=""\n\n  dns=[]\n  dns_search=[]\n\n  privileged=false\n\n  # \u662F\u5426\u7981\u6B62\u4FEE\u6539\u5165\u53E3\n  disable_entrypoint_overwrite=false\n  userns_mode=\n  cap_add=[]\n  cap_drop=[]\n  security_opt=[]\n  devices=[]\n  cache_dir=""\n  # docker volume \u6784\u5EFA\u65F6\u7F13\u5B58\n  disable_cache=true\n  network_mode=\n  wait_for_services_timeout=\n  volumes = ["/certs/client", "/cache"]\n  # \u6620\u5C04\u73B0\u6709\u955C\u50CF\u914D\u7F6E\n  # volumes = ["/opt/docker/daemon.json:/etc/docker/daemon.json:ro"]\n  volumes_from=[]\n  volume_driver=[]\n  extra_hosts=[]\n  shm_size = 0\n  links=[]\n  allowed_images=[]\n  allowed_services=[]\n  # never, if-not-present, always\n  pull_policy=always\n  sysctls=[]\n  # \u4FEE\u6539\u9ED8\u8BA4 helper\n  # helper_image=""\n\n  # \u5B9A\u4E49\u670D\u52A1\u548C\u522B\u540D\n  [[runners.docker.services]]\n    name = "redis:5"\n    alias = "cache"\n\n  [[runners.docker.services]]\n    name = "docker:dind"\n    # \u5168\u5C40\u4FEE\u6539 dind \u955C\u50CF\n    command = ["--registry-mirror", "https://registry-mirror.example.com"]\n\n[runners.parallels]\n  base_name=""\n  template_name=""\n  disable_snapshots=false\n\n[runners.virtualbox]\n  base_name=""\n  template_name=""\n  disable_snapshots=false\n\n[runners.ssh]\n  host = "my-production-server"\n  port = "22"\n  user = "root"\n  password = "production-server-password"\n  identity_file = ""\n\n# Docker Machine\n[runners.machine]\n# https://docs.gitlab.com/runner/configuration/advanced-configuration.html#the-runnersmachine-section\n\n# \u81EA\u5B9A\u4E49\n[runners.custom]\n\n# \u7F13\u5B58\u914D\u7F6E\n[runners.cache]\n# s3, gcs, azure\nType=s3\n# \u7F13\u5B58 URL prefix\nPath=\n# Runner \u4E4B\u95F4\u5171\u4EAB\u7F13\u5B58\nShared=false\n\n  # S3 \u914D\u7F6E\n  [runners.cache.s3]\n    ServerAddress = "s3.amazonaws.com"\n    AccessKey = "AWS_S3_ACCESS_KEY"\n    SecretKey = "AWS_S3_SECRET_KEY"\n    BucketName = "runners-cache"\n    BucketLocation = "eu-west-1"\n    Insecure = false\n\n# Kubernetes\n[runners.kubernetes]\n  host = "https://45.67.34.123:4892"\n  cert_file = "/etc/ssl/kubernetes/api.crt"\n  key_file = "/etc/ssl/kubernetes/api.key"\n  ca_file = "/etc/ssl/kubernetes/ca.crt"\n  image = "golang:1.8"\n  privileged = true\n  allow_privilege_escalation = true\n  image_pull_secrets = ["docker-registry-credentials"]\n  [runners.kubernetes.node_selector]\n    gitlab = "true"\n\n[runners.referees]\n  [runners.referees.metrics]\n    prometheus_address = "http://localhost:9090"\n    query_interval = 10\n    metric_queries = []\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://about.gitlab.com/releases/2019/07/31/docker-in-docker-with-docker-19-dot-03/",children:"https://about.gitlab.com/releases/2019/07/31/docker-in-docker-with-docker-19-dot-03/"})}),"\n",(0,i.jsx)(e.h2,{id:"docker-in-docker",children:"Docker in Docker"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:'volumes = ["/certs/client", "/cache"]'})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://gitlab.com/gitlab-org/gitlab-runner/-/issues/4566",children:"gitlab-org/gitlab-runner#4566"})}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.a,{href:"https://gitlab.com/gitlab-org/gitlab-runner/-/issues/4501",children:"gitlab-org/gitlab-runner#4501"})," - Docker in Docker 19.03 service fails"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"\u5C06\u5171\u4EAB-runner-\u4FEE\u6539\u4E3A-\u79C1\u6709",children:"\u5C06\u5171\u4EAB runner \u4FEE\u6539\u4E3A \u79C1\u6709"}),"\n",(0,i.jsx)(e.p,{children:"\u79FB\u9664 runner \u4ECE\u65B0\u6DFB\u52A0"}),"\n",(0,i.jsx)(e.h2,{id:"windows",children:"Windows"}),"\n",(0,i.jsxs)(e.ol,{start:"0",children:["\n",(0,i.jsxs)(e.li,{children:["\u4E0B\u8F7D\u5B89\u88C5 Git ",(0,i.jsx)(e.a,{href:"https://git-scm.com/download/win",children:"https://git-scm.com/download/win"})]}),"\n"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u5EFA\u8BAE\u4E0B\u8F7D Portable \u89E3\u538B\u5373\u53EF"}),"\n",(0,i.jsx)(e.li,{children:"\u5982\u679C\u60F3\u5B89\u88C5 Runner \u4E3A Service \u5219\u9700\u8981\u7528 msi"}),"\n"]}),"\n",(0,i.jsxs)(e.ol,{start:"0",children:["\n",(0,i.jsxs)(e.li,{children:["\u4E0B\u8F7D ",(0,i.jsx)(e.a,{href:"https://docs.gitlab.com/runner/install/windows.html",children:"Windows Runner"})]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:'mkdir -p /usr/local/bin\n# \u6253\u5F00 bin \u76EE\u5F55 - \u590D\u5236\u4E0B\u8F7D\u7684 gitlab runner \u5230\u8FD9\u91CC\uFF0C\u5E76\u66F4\u540D\u4E3A gitlab-runner.exe\nstart "$(cygpath -d /usr/local/bin)"\n\n# gitlab TOKEN\nTOKEN=\ngitlab-runner register \\\n  --non-interactive \\\n  --executor shell \\\n  --shell bash \\\n  --url "https://gitlab.com/" \\\n  --registration-token "$TOKEN" \\\n  --description windows-runner \\\n  --tag-list "windows,shell,bash" \\\n  --run-untagged=false \\\n  --locked=false \\\n  --access-level=not_protected \\\n  --builds-dir ./build \\\n  --cache-dir ./cache\n# \u751F\u6210\u7684\u914D\u7F6E\ncat config.toml\n# \u5728 runner \u4E0B\u6267\u884C - build \u548C cache \u4E5F\u5728\u8BE5\u76EE\u5F55\u4E0B\ngitlab-runner run -d ./runner\n'})}),"\n",(0,i.jsx)(e.h2,{id:"alpinelinux",children:"AlpineLinux"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:'# \u6700\u65B0\u7248\napk add gitlab-runner -X https://mirrors.aliyun.com/alpine/edge/community/\n# register\n# \u914D\u7F6E\u6587\u4EF6 /etc/gitlab-runner/config.toml\n\n# \u9ED8\u8BA4\u4F7F\u7528 gitlab-runner \u7528\u6237\u548C\u5206\u7EC4\n# \u5982\u679C\u5728 docker \u91CC\u4F7F\u7528 root \u66F4\u65B9\u4FBF\ncat << CONF > /etc/conf.d/gitlab-runner\nGITLAB_RUNNER_USER="root"\nGITLAB_RUNNER_GROUP="root"\nCONF\n'})}),"\n",(0,i.jsx)(e.h2,{id:"shell-in-docker",children:"Shell in Docker"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u6709\u4E9B\u6784\u5EFA\u73AF\u5883\u53EF\u80FD\u8FD8\u4F1A\u9700\u8981 py3\uFF0Cgcc"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"# wener/gitlab-runner include docker, make, git\ndocker run -d --restart always \\\n  -v $PWD:/etc/gitlab-runner \\\n  -v $PWD/builds:/builds \\\n  -v $PWD/cache:/cache \\\n  -e TZ=Asia/Shanghai \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  --name gitlab-runner-shell wener/gitlab-runner\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u6700\u5C0F\u914D\u7F6E"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ini",children:'concurrent = 1\ncheck_interval = 0\n# \u4E0D\u8FD0\u884C\u6CA1\u6709\u6307\u5B9A tag \u7684 - \u76F8\u5F53\u4E8E\u9ED8\u8BA4 runner - \u4E00\u822C docker \u4F1A\u901A\u7528\u4E00\u70B9\nrun_untagged=false\nshell="bash"\n\n[session_server]\n  session_timeout = 1800\n\n[[runners]]\n  name = "linux-shell-runner"\n  url = "https://gitlab.com/"\n  token = "$TOKEN"\n  executor = "shell"\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"go"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"apk add go -X https://mirrors.aliyun.com/alpine/edge/community\ncurl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.32.2\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"nodejs"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"apk add nodejs npm nghttp2\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"java"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"apk add openjdk11\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"k8s"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"apk add kubectl\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u81EA\u5B9A\u4E49 Runner"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"cat << DOCKERFILE > Dockerfile\nFROM wener/gitlab-runner\nRUN apk add --no-cache util-linux coreutils python3\nRUN apk add --no-cache nodejs npm nghttp2\nRUN apk add --no-cache go -X https://mirrors.aliyun.com/alpine/edge/community\nDOCKERFILE\n\ndocker build -t runner .\n\ndocker run -d --restart always \\\n  -v $PWD:/etc/gitlab-runner \\\n  -v $PWD/builds:/builds \\\n  -v $PWD/cache:/cache \\\n  -e TZ=Asia/Shanghai \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  --name gitlab-runner-shell runner\n"})}),"\n",(0,i.jsx)(e.h2,{id:"kubernetes-executor",children:"Kubernetes Executor"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\u9ED8\u8BA4 runner \u955C\u50CF ",(0,i.jsx)(e.code,{children:"gitlab/gitlab-runner:alpine-v{VERSION}"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://hub.docker.com/r/gitlab/gitlab-runner",children:"https://hub.docker.com/r/gitlab/gitlab-runner"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h1,{id:"faq",children:"FAQ"}),"\n",(0,i.jsx)(e.h2,{id:"zombie-process-in-runner",children:"zombie process in Runner"}),"\n",(0,i.jsx)(e.p,{children:"\u81EA\u884C\u6784\u5EFA runner \u7684\u65F6\u5019\u6CE8\u610F\u6DFB\u52A0 init"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-dockerfile",children:'RUN apk add --no-cache dumb-init\nENTRYPOINT ["/usr/bin/dumb-init", "gitlab-ci-runner"]\nCMD ["run"]\n'})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://gitlab.com/gitlab-org/gitlab-runner/-/issues/989",children:"https://gitlab.com/gitlab-org/gitlab-runner/-/issues/989"})}),"\n"]})]})}function h(n={}){let{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(o,{...n})}):o(n)}},17776:function(n,e,r){r.d(e,{R:()=>t,x:()=>c});var s=r(7378);let i={},l=s.createContext(i);function t(n){let e=s.useContext(l);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:t(n.components),s.createElement(l.Provider,{value:e},n.children)}}}]);