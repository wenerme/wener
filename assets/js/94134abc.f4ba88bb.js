"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["37741"],{5838:function(n,e,t){t.r(e),t.d(e,{frontMatter:()=>i,toc:()=>o,default:()=>h,metadata:()=>r,assets:()=>l,contentTitle:()=>d});var r=JSON.parse('{"id":"blockchain/eth/README","title":"Ethereum","description":"| EIP        | Name                                                                      | Status | Notes                                                 |","source":"@site/../notes/blockchain/eth/README.md","sourceDirName":"blockchain/eth","slug":"/blockchain/eth/","permalink":"/notes/blockchain/eth/","draft":false,"unlisted":false,"editUrl":"https://github.com/wenerme/wener/edit/master/notes/../notes/blockchain/eth/README.md","tags":[],"version":"current","lastUpdatedBy":"wener","lastUpdatedAt":1747727311000,"frontMatter":{"title":"Ethereum"},"sidebar":"docs","previous":{"title":"Blockchain Glossary","permalink":"/notes/blockchain/glossary"},"next":{"title":"API","permalink":"/notes/blockchain/eth/api"}}'),s=t(86106),a=t(17776);let i={title:"Ethereum"},d="Ethereum",l={},o=[{value:"RPC",id:"rpc",level:2},{value:"EIP-155",id:"eip-155",level:2},{value:"EIP-165",id:"eip-165",level:2},{value:"EIP-191",id:"eip-191",level:2},{value:"EIP-712",id:"eip-712",level:2},{value:"ERC-1155",id:"erc-1155",level:2},{value:"EIP-1167",id:"eip-1167",level:2},{value:"EIP-1363",id:"eip-1363",level:2},{value:"EIP-1820",id:"eip-1820",level:2},{value:"EIP-1967",id:"eip-1967",level:2},{value:"EIP-2612",id:"eip-2612",level:2},{value:"EIP-2981",id:"eip-2981",level:2},{value:"EIP-3722",id:"eip-3722",level:2},{value:"EIP-4626",id:"eip-4626",level:2},{value:"EIP-7928",id:"eip-7928",level:2},{value:"ERC-20 vs ERC-777",id:"erc-20-vs-erc-777",level:2},{value:"ERC-721 vs ERC-1155",id:"erc-721-vs-erc-1155",level:2}];function c(n){let e={a:"a",admonition:"admonition",annotation:"annotation",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",math:"math",mi:"mi",mo:"mo",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"ethereum",children:"Ethereum"})}),"\n",(0,s.jsx)(e.h1,{id:"eip",children:"EIP"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"EIP"}),(0,s.jsx)(e.th,{children:"Name"}),(0,s.jsx)(e.th,{children:"Status"}),(0,s.jsx)(e.th,{children:"Notes"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.a,{href:"/notes/blockchain/eth/eip-20",children:"EIP-20"})}),(0,s.jsx)(e.td,{children:"Token Standard"}),(0,s.jsx)(e.td,{children:"Final"}),(0,s.jsx)(e.td,{children:"ERC-20 - Fungible Token/\u540C\u8D28\u8D27\u5E01"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"[EIP-137]"}),(0,s.jsx)(e.td,{children:"Ethereum Domain Name Service"}),(0,s.jsx)(e.td,{children:"Final"}),(0,s.jsx)(e.td,{})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.a,{href:"#eip-155",children:"EIP-155"})}),(0,s.jsx)(e.td,{children:"Simple replay attack protection"}),(0,s.jsx)(e.td,{children:"Final"}),(0,s.jsx)(e.td,{children:"fork block 2,675,000 - hash(transaction) \u5305\u542B chainId"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.a,{href:"#eip-165",children:"EIP-165"})}),(0,s.jsx)(e.td,{children:"Standard Interface Detection"}),(0,s.jsx)(e.td,{children:"Final"}),(0,s.jsx)(e.td,{children:"ERC-165 - \u68C0\u6D4B\u5408\u7EA6\u662F\u5426\u5B9E\u73B0 \u63A5\u53E3"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.a,{href:"#eip-191",children:"EIP-191"})}),(0,s.jsx)(e.td,{children:"Signed Data Standard"}),(0,s.jsx)(e.td,{children:"Final"}),(0,s.jsx)(e.td,{})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.a,{href:"#eip-165",children:"EIP-165"})}),(0,s.jsx)(e.td,{children:"Standard Interface Detection"}),(0,s.jsx)(e.td,{children:"Final"}),(0,s.jsx)(e.td,{})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.a,{href:"#eip-712",children:"EIP-712"})}),(0,s.jsx)(e.td,{children:"Ethereum typed structured data hashing and signing"}),(0,s.jsx)(e.td,{children:"Review"}),(0,s.jsx)(e.td,{children:"eth_signTypedData"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.a,{href:"/notes/blockchain/eth/eip-721",children:"EIP-721"})}),(0,s.jsx)(e.td,{children:"Non-Fungible Token Standard"}),(0,s.jsx)(e.td,{children:"Final"}),(0,s.jsx)(e.td,{children:"&EIP-165"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.a,{href:"/notes/blockchain/eth/eip-777",children:"EIP-777"})}),(0,s.jsx)(e.td,{children:"Token Standard"}),(0,s.jsx)(e.td,{children:"Final"}),(0,s.jsx)(e.td,{children:"ERC-20+ - Hooks,Decimals"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"[EIP-1066]"}),(0,s.jsx)(e.td,{children:"Status Codes"}),(0,s.jsx)(e.td,{}),(0,s.jsx)(e.td,{})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"[EIP-1102]"}),(0,s.jsx)(e.td,{children:"Opt-in Account Exposure"}),(0,s.jsx)(e.td,{}),(0,s.jsx)(e.td,{})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"[EIP-1155]"}),(0,s.jsx)(e.td,{children:"Multi Token Standard"}),(0,s.jsx)(e.td,{children:"Final"}),(0,s.jsxs)(e.td,{children:["\u5408\u7EA6\u652F\u6301\u591A\u79CD\u8D27\u5E01 - ",(0,s.jsxs)(e.span,{className:"katex",children:[(0,s.jsx)(e.span,{className:"katex-mathml",children:(0,s.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,s.jsxs)(e.semantics,{children:[(0,s.jsxs)(e.mrow,{children:[(0,s.jsx)(e.mi,{children:"B"}),(0,s.jsx)(e.mi,{children:"N"}),(0,s.jsx)(e.mi,{children:"B"}),(0,s.jsx)(e.mo,{separator:"true",children:","})]}),(0,s.jsx)(e.annotation,{encoding:"application/x-tex",children:"BNB, "})]})})}),(0,s.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,s.jsxs)(e.span,{className:"base",children:[(0,s.jsx)(e.span,{className:"strut",style:{height:"0.8778em",verticalAlign:"-0.1944em"}}),(0,s.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.05017em"},children:"BNB"}),(0,s.jsx)(e.span,{className:"mpunct",children:","})]})})]}),"BAT"]})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.a,{href:"#eip-1167",children:"EIP-1167"})}),(0,s.jsx)(e.td,{children:"Minimal Proxy Contract"}),(0,s.jsx)(e.td,{children:"Final"}),(0,s.jsx)(e.td,{children:"\u5B9E\u73B0\u4EE3\u7406\u5408\u7EA6"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.a,{href:"https://eips.ethereum.org/EIPS/eip-1193",children:"EIP-1193"})}),(0,s.jsx)(e.td,{children:"Ethereum Provider JavaScript API"}),(0,s.jsx)(e.td,{}),(0,s.jsx)(e.td,{children:"window.ethereum"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"[EIP-1363]"}),(0,s.jsx)(e.td,{children:"Payable Token"}),(0,s.jsx)(e.td,{children:"Final"}),(0,s.jsx)(e.td,{children:"payable"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"[EIP-1400]"}),(0,s.jsx)(e.td,{}),(0,s.jsx)(e.td,{}),(0,s.jsx)(e.td,{})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"[EIP-1474]"}),(0,s.jsx)(e.td,{children:"Remote Procedure Call Specification"}),(0,s.jsx)(e.td,{}),(0,s.jsx)(e.td,{})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"[EIP-1559]"}),(0,s.jsx)(e.td,{children:"Fee market change for ETH 1.0 chain"}),(0,s.jsx)(e.td,{children:"Final"}),(0,s.jsx)(e.td,{})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"[EIP-1767]"}),(0,s.jsx)(e.td,{children:"GraphQL Interface to Ethereum Node Data"}),(0,s.jsx)(e.td,{}),(0,s.jsx)(e.td,{})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.a,{href:"#eip-1820",children:"EIP-1820"})}),(0,s.jsx)(e.td,{children:"Pseudo-introspection Registry Contract"}),(0,s.jsx)(e.td,{}),(0,s.jsx)(e.td,{children:"ERC-165+"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"[EIP-1822]"}),(0,s.jsx)(e.td,{children:"Universal Upgradeable Proxy Standard/UUPS"}),(0,s.jsx)(e.td,{}),(0,s.jsx)(e.td,{})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"[EIP-1967]"}),(0,s.jsx)(e.td,{children:"Proxy Storage Slots"}),(0,s.jsx)(e.td,{}),(0,s.jsx)(e.td,{})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"[EIP-2718]"}),(0,s.jsx)(e.td,{children:"Typed Transaction Envelope"}),(0,s.jsx)(e.td,{children:"Final"}),(0,s.jsx)(e.td,{})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"[EIP-2255]"}),(0,s.jsx)(e.td,{children:"Wallet Permissions"}),(0,s.jsx)(e.td,{}),(0,s.jsx)(e.td,{})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.a,{href:"#eip-2612",children:"EIP-2612"})}),(0,s.jsx)(e.td,{children:"permit"}),(0,s.jsx)(e.td,{children:"Review"}),(0,s.jsx)(e.td,{children:"ERC-20+ERC-712"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.a,{href:"#eip-2981",children:"EIP-2981"})}),(0,s.jsx)(e.td,{children:"NFT Royalty Standard"}),(0,s.jsx)(e.td,{children:"Final"}),(0,s.jsx)(e.td,{})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.a,{href:"#eip-3722",children:"EIP-3722"})}),(0,s.jsx)(e.td,{children:"Poster: A ridiculously simple general purpose social media smart contract"}),(0,s.jsx)(e.td,{}),(0,s.jsx)(e.td,{})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"[EIP-4626]"}),(0,s.jsx)(e.td,{children:"Tokenized Vault Standard"}),(0,s.jsx)(e.td,{children:"Final"}),(0,s.jsx)(e.td,{})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"[EIP-4675]"}),(0,s.jsx)(e.td,{children:"Multi-Fractional Non-Fungible Token Standard"}),(0,s.jsx)(e.td,{}),(0,s.jsx)(e.td,{})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"[EIP-6093]"}),(0,s.jsx)(e.td,{children:"Custom errors for commonly-used tokens"}),(0,s.jsx)(e.td,{}),(0,s.jsx)(e.td,{})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"[EIP-7928]"}),(0,s.jsx)(e.td,{children:"Block-Level Access Lists, BALs"}),(0,s.jsx)(e.td,{}),(0,s.jsx)(e.td,{})]})]})]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Token \u6807\u51C6\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"/notes/blockchain/eth/eip-20",children:"EIP-20"})," - \u540C\u8D28\u8D27\u5E01\u6807\u51C6"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"/notes/blockchain/eth/eip-777",children:"EIP-777"})," - \u6269\u5C55 ERC 20"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"/notes/blockchain/eth/eip-721",children:"EIP-721"})," - NFT"]}),"\n",(0,s.jsx)(e.li,{children:"[EIP-1155] - \u591A Token"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["EIP-1193\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/MetaMask/providers",children:"MetaMask/providers"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["Status of ",(0,s.jsx)(e.a,{href:"https://eips.ethereum.org/erc",children:"ERC"})]}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/ethereum/EIPs",children:"ethereum/EIPs"})}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"secp256k1"})," \u7B7E\u540D - ",(0,s.jsx)(e.code,{children:"v"}),", ",(0,s.jsx)(e.code,{children:"r"}),", ",(0,s.jsx)(e.code,{children:"s"})]}),"\n"]}),"\n",(0,s.jsx)(e.admonition,{title:"EIP <-> ERC",type:"tip",children:(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"EIP = ERC"}),"\n",(0,s.jsx)(e.li,{children:"EIP - Ethereum Improvement Proposals"}),"\n",(0,s.jsx)(e.li,{children:"ERC - Ethereum Request for Comments"}),"\n"]})}),"\n",(0,s.jsx)(e.admonition,{title:"Fungible Token/\u540C\u8D28\u8D27\u5E01",type:"tip",children:(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u53EF\u4EA4\u6362 / transfer"}),"\n"]})}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"Interface"}),(0,s.jsx)(e.th,{children:"ERC-165 ID"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"ERC165"}),(0,s.jsx)(e.td,{children:"0x01ffc9a7"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"ERC721"}),(0,s.jsx)(e.td,{children:"0x80ac58cd"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"ERC721TokenReceiver"}),(0,s.jsx)(e.td,{children:"0x150b7a02"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"ERC721Metadata"}),(0,s.jsx)(e.td,{children:"0x5b5e139f"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"ERC721Enumerable"}),(0,s.jsx)(e.td,{children:"0x780e9d63"})]})]})]}),"\n",(0,s.jsx)(e.h2,{id:"rpc",children:"RPC"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"interface RPC {\n  // EIP-2255\n  wallet_requestPermissions(request: { eth_accounts: object }): Promise<object>;\n  wallet_getPermissions(\n    request: Record<string, { requiredMethods: string[] }>,\n  ): Promise<Array<{ invoker: string; parentCapability: string; caveats: Array<{ type: string; value: string }> }>>;\n  // EIP-747\n  wallet_watchAsset(request: {\n    type: 'ERC:20';\n    options: { address: string; image?: string; decimals?: number; symbol?: string };\n  }): Promise<boolean>;\n}\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://metamask.github.io/api-playground/api-documentation/",children:"https://metamask.github.io/api-playground/api-documentation/"})}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"eip-155",children:"EIP-155"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u589E\u52A0 chainId"}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"(nonce, gasprice, startgas, to, value, data)"})," -> ",(0,s.jsx)(e.code,{children:"(nonce, gasprice, startgas, to, value, data, chainid, 0, 0)"})]}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://chainid.network/",children:"https://chainid.network/"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/ethereum-lists/chains",children:"ethereum-lists/chains"})}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"eip-165",children:"EIP-165"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u68C0\u6D4B\u5408\u7EA6\u662F\u5426\u5B9E\u73B0 \u63A5\u53E3"}),"\n",(0,s.jsxs)(e.li,{children:["interfaceID - ",(0,s.jsx)(e.code,{children:"bytes4(keccak256('supportsInterface(bytes4)'))"}),"=0x01ffc9a7"]}),"\n",(0,s.jsx)(e.li,{children:"< 30,000 gas"}),"\n",(0,s.jsx)(e.li,{children:"\u591A\u4E2A\u63A5\u53E3\u4E3A xor"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-solidity",children:"interface ERC165 {\n  function supportsInterface(bytes4 interfaceID) external view returns (bool);\n}\n\n"})}),"\n",(0,s.jsx)(e.h2,{id:"eip-191",children:"EIP-191"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"version"}),(0,s.jsx)(e.th,{children:"eip"}),(0,s.jsx)(e.th,{children:"title"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"0x00"}),(0,s.jsx)(e.td,{children:(0,s.jsx)(e.a,{href:"#eip-191",children:"EIP-191"})}),(0,s.jsx)(e.td,{children:"Data with intended validator"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"0x01"}),(0,s.jsx)(e.td,{children:(0,s.jsx)(e.a,{href:"#eip-712",children:"EIP-712"})}),(0,s.jsx)(e.td,{children:"Structured data"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"0x45"}),(0,s.jsx)(e.td,{children:(0,s.jsx)(e.a,{href:"#eip-191",children:"EIP-191"})}),(0,s.jsx)(e.td,{children:"personal_sign messages"})]})]})]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["signed_data - ",(0,s.jsx)(e.code,{children:"0x19 <1 byte version> <version specific data> <data to sign>."})]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"eip-712",children:"EIP-712"}),"\n",(0,s.jsx)(e.p,{children:"\u7ED3\u6784\u5316\u7B7E\u540D\u6570\u636E"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["eth_signTypedData(address,typedData) - \u589E\u5F3A eth_sendTransaction \u548C eth_sign \u7684\u7B7E\u540D\u80FD\u529B\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.code,{children:'sign(keccak256("\\x19Ethereum Signed Message:\\n" + len(message) + message)))'})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.li,{children:"domainSeparator = hashStruct(eip712Domain)"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-solidity",children:"struct EIP712Domain {\n  string name;\n  string version;\n  uint256 chainId; //  EIP-155\n  address verifyingContract;\n  bytes32 salt;\n}\n\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",metastring:'title="TypedData"',children:'{\n  "type": "object",\n  "properties": {\n    "types": {\n      "type": "object",\n      "properties": {\n        "EIP712Domain": { "type": "array" }\n      },\n      "additionalProperties": {\n        "type": "array",\n        "items": {\n          "type": "object",\n          "properties": {\n            "name": { "type": "string" },\n            "type": { "type": "string" }\n          },\n          "required": ["name", "type"]\n        }\n      },\n      "required": ["EIP712Domain"]\n    },\n    "primaryType": { "type": "string" },\n    "domain": { "type": "object" },\n    "message": { "type": "object" }\n  },\n  "required": ["types", "primaryType", "domain", "message"]\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"erc-1155",children:"ERC-1155"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-solidity",children:"function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory);\n\nfunction setApprovalForAll(address _operator, bool _approved) external;\n\nfunction isApprovedForAll(address _owner, address _operator) external view returns (bool);\n\nfunction onERC1155BatchReceived(\n  address _operator,\n  address _from,\n  uint256[] calldata _ids,\n  uint256[] calldata _values,\n  bytes calldata _data\n) external returns (bytes4);\n\n"})}),"\n",(0,s.jsx)(e.h2,{id:"eip-1167",children:"EIP-1167"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-solidity",children:"contract ThingFactory is Ownable, CloneFactory {\n  address public libraryAddress;\n\n  event ThingCreated(address newThingAddress);\n\n  function ThingFactory(address _libraryAddress) public {\n    libraryAddress = _libraryAddress;\n  }\n\n  function setLibraryAddress(address _libraryAddress) public onlyOwner {\n    libraryAddress = _libraryAddress;\n  }\n\n  function createThing(string _name, uint256 _value) public onlyOwner {\n    // \u521B\u5EFA\u526F\u672C\u4F60\n    address clone = createClone(libraryAddress);\n    Thing(clone).init(_name, _value);\n    ThingCreated(clone);\n  }\n}\n\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/optionality/clone-factory",children:"optionality/clone-factory"})}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"eip-1363",children:"EIP-1363"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"payable"}),"\n",(0,s.jsx)(e.li,{children:"ERC-20"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-solidity",children:'/* is ERC20, ERC165 */\ninterface ERC1363 {\n  /**\n   * @notice Transfer tokens from `msg.sender` to another address and then call `onTransferReceived` on receiver\n   * @param to address The address which you want to transfer to\n   * @param value uint256 The amount of tokens to be transferred\n   * @return true unless throwing\n   */\n  function transferAndCall(address to, uint256 value) external returns (bool);\n\n  /**\n   * @notice Transfer tokens from `msg.sender` to another address and then call `onTransferReceived` on receiver\n   * @param to address The address which you want to transfer to\n   * @param value uint256 The amount of tokens to be transferred\n   * @param data bytes Additional data with no specified format, sent in call to `to`\n   * @return true unless throwing\n   */\n  function transferAndCall(\n    address to,\n    uint256 value,\n    bytes memory data\n  ) external returns (bool);\n\n  /**\n   * @notice Transfer tokens from one address to another and then call `onTransferReceived` on receiver\n   * @param from address The address which you want to send tokens from\n   * @param to address The address which you want to transfer to\n   * @param value uint256 The amount of tokens to be transferred\n   * @return true unless throwing\n   */\n  function transferFromAndCall(\n    address from,\n    address to,\n    uint256 value\n  ) external returns (bool);\n\n  /**\n   * @notice Transfer tokens from one address to another and then call `onTransferReceived` on receiver\n   * @param from address The address which you want to send tokens from\n   * @param to address The address which you want to transfer to\n   * @param value uint256 The amount of tokens to be transferred\n   * @param data bytes Additional data with no specified format, sent in call to `to`\n   * @return true unless throwing\n   */\n  function transferFromAndCall(\n    address from,\n    address to,\n    uint256 value,\n    bytes memory data\n  ) external returns (bool);\n\n  /**\n   * @notice Approve the passed address to spend the specified amount of tokens on behalf of msg.sender\n   * and then call `onApprovalReceived` on spender.\n   * @param spender address The address which will spend the funds\n   * @param value uint256 The amount of tokens to be spent\n   */\n  function approveAndCall(address spender, uint256 value) external returns (bool);\n\n  /**\n   * @notice Approve the passed address to spend the specified amount of tokens on behalf of msg.sender\n   * and then call `onApprovalReceived` on spender.\n   * @param spender address The address which will spend the funds\n   * @param value uint256 The amount of tokens to be spent\n   * @param data bytes Additional data with no specified format, sent in call to `spender`\n   */\n  function approveAndCall(\n    address spender,\n    uint256 value,\n    bytes memory data\n  ) external returns (bool);\n}\n\ninterface ERC20 {\n  function totalSupply() external view returns (uint256);\n\n  function balanceOf(address account) external view returns (uint256);\n\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  function transferFrom(\n    address sender,\n    address recipient,\n    uint256 amount\n  ) external returns (bool);\n\n  function allowance(address owner, address spender) external view returns (uint256);\n\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  event Transfer(address indexed from, address indexed to, uint256 value);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\ninterface ERC165 {\n  function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n/**\n * @title ERC1363Receiver interface\n * @dev Interface for any contract that wants to support `transferAndCall` or `transferFromAndCall`\n *  from ERC1363 token contracts.\n */\ninterface ERC1363Receiver {\n  /*\n   * Note: the ERC-165 identifier for this interface is 0x88a7ca5c.\n   * 0x88a7ca5c === bytes4(keccak256("onTransferReceived(address,address,uint256,bytes)"))\n   */\n\n  /**\n   * @notice Handle the receipt of ERC1363 tokens\n   * @dev Any ERC1363 smart contract calls this function on the recipient\n   * after a `transfer` or a `transferFrom`. This function MAY throw to revert and reject the\n   * transfer. Return of other than the magic value MUST result in the\n   * transaction being reverted.\n   * Note: the token contract address is always the message sender.\n   * @param operator address The address which called `transferAndCall` or `transferFromAndCall` function\n   * @param from address The address which are token transferred from\n   * @param value uint256 The amount of tokens transferred\n   * @param data bytes Additional data with no specified format\n   * @return `bytes4(keccak256("onTransferReceived(address,address,uint256,bytes)"))`\n   *  unless throwing\n   */\n  function onTransferReceived(\n    address operator,\n    address from,\n    uint256 value,\n    bytes memory data\n  ) external returns (bytes4);\n}\n\n/**\n * @title ERC1363Spender interface\n * @dev Interface for any contract that wants to support `approveAndCall`\n *  from ERC1363 token contracts.\n */\ninterface ERC1363Spender {\n  /*\n   * Note: the ERC-165 identifier for this interface is 0x7b04a2d0.\n   * 0x7b04a2d0 === bytes4(keccak256("onApprovalReceived(address,uint256,bytes)"))\n   */\n\n  /**\n   * @notice Handle the approval of ERC1363 tokens\n   * @dev Any ERC1363 smart contract calls this function on the recipient\n   * after an `approve`. This function MAY throw to revert and reject the\n   * approval. Return of other than the magic value MUST result in the\n   * transaction being reverted.\n   * Note: the token contract address is always the message sender.\n   * @param owner address The address which called `approveAndCall` function\n   * @param value uint256 The amount of tokens to be spent\n   * @param data bytes Additional data with no specified format\n   * @return `bytes4(keccak256("onApprovalReceived(address,uint256,bytes)"))`\n   *  unless throwing\n   */\n  function onApprovalReceived(\n    address owner,\n    uint256 value,\n    bytes memory data\n  ) external returns (bytes4);\n}\n\n'})}),"\n",(0,s.jsx)(e.h2,{id:"eip-1820",children:"EIP-1820"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"ERC1820Registry"}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://etherscan.io/address/0x1820a4b7618bde71dce8cdc73aab6c95905fad24",children:"0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24"})}),"\n",(0,s.jsx)(e.li,{children:"interfaceHash"}),"\n",(0,s.jsxs)(e.li,{children:["\u5B9E\u73B0 - \u8FD4\u56DE ERC1820_ACCEPT_MAGIC=",(0,s.jsx)(e.code,{children:'keccak256(abi.encodePacked("ERC1820_ACCEPT_MAGIC"))'})]}),"\n",(0,s.jsxs)(e.li,{children:["ERC###XXXXX\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"###"})," \u4E3A\u7F16\u53F7"]}),"\n",(0,s.jsx)(e.li,{children:"XXXXX \u4E3A\u63A5\u53E3\u540D\u5B57"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:'keccak256("ERC20Token")\nkeccak256("ERC777Token")\nkeccak256("ERC777TokensSender")\nkeccak256("ERC777TokensRecipient")\n'})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"\u5B9E\u73B0\u9700\u8981\u5B9E\u73B0\u7684\u63A5\u53E3"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-solidity",children:"interface _implementer {\n  function canImplementInterfaceForAddress(bytes32 interfaceHash, address addr) external view returns (bytes32);\n}\n\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"\u6CE8\u518C\u4E2D\u5FC3"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["setInterfaceImplementer - \u4E3A\u5730\u5740\u8BBE\u7F6E\u5B9E\u73B0\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"_addr"})," \u4E0E ",(0,s.jsx)(e.code,{children:"_implementer"})," \u4E0D\u540C\u65F6 \u5219 ",(0,s.jsx)(e.code,{children:"_implementer"})," \u5FC5\u987B\u5B9E\u73B0 ERC1820ImplementerInterface"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-solidity",children:"interface ERC1820Registry {\n  event InterfaceImplementerSet(address indexed addr, bytes32 indexed interfaceHash, address indexed implementer);\n  event ManagerChanged(address indexed addr, address indexed newManager);\n\n  function getInterfaceImplementer(address _addr, bytes32 _interfaceHash) external view returns (address);\n\n  function setInterfaceImplementer(\n    address _addr,\n    bytes32 _interfaceHash,\n    address _implementer\n  ) external;\n\n  function setManager(address _addr, address _newManager) external;\n\n  function getManager(address _addr) public view returns (address);\n\n  function interfaceHash(string calldata _interfaceName) external pure returns (bytes32);\n}\n\n"})}),"\n",(0,s.jsx)(e.h2,{id:"eip-1967",children:"EIP-1967"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-solidity",children:'/**\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n * implementation address that can be changed. This address is stored in storage in the location specified by\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn\'t conflict with the storage layout of the\n * implementation behind the proxy.\n */\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\n    /**\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n     *\n     * If `_data` is nonempty, it\'s used as data in a delegate call to `_logic`. This will typically be an encoded\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\n     */\n    constructor(address _logic, bytes memory _data) payable {\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256("eip1967.proxy.implementation")) - 1));\n        _upgradeToAndCall(_logic, _data, false);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _implementation() internal view virtual override returns (address impl) {\n        return ERC1967Upgrade._getImplementation();\n    }\n}\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nabstract contract ERC1967Upgrade {\n    // This is the keccak-256 hash of "eip1967.proxy.rollback" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of "eip1967.proxy.implementation" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), "ERC1967: new implementation is not a contract");\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(\n        address newImplementation,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallSecure(\n        address newImplementation,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        address oldImplementation = _getImplementation();\n\n        // Initial upgrade and setup call\n        _setImplementation(newImplementation);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(newImplementation, data);\n        }\n\n        // Perform rollback test if not already in progress\n        StorageSlot.BooleanSlot storage rollbackTesting = StorageSlot.getBooleanSlot(_ROLLBACK_SLOT);\n        if (!rollbackTesting.value) {\n            // Trigger rollback using upgradeTo from the new implementation\n            rollbackTesting.value = true;\n            Address.functionDelegateCall(\n                newImplementation,\n                abi.encodeWithSignature("upgradeTo(address)", oldImplementation)\n            );\n            rollbackTesting.value = false;\n            // Check rollback was effective\n            require(oldImplementation == _getImplementation(), "ERC1967Upgrade: upgrade breaks further upgrades");\n            // Finally reset to the new implementation and log the upgrade\n            _upgradeTo(newImplementation);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of "eip1967.proxy.admin" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), "ERC1967: new admin is the zero address");\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256(\'eip1967.proxy.beacon\')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Emitted when the beacon is upgraded.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(Address.isContract(newBeacon), "ERC1967: new beacon is not a contract");\n        require(\n            Address.isContract(IBeacon(newBeacon).implementation()),\n            "ERC1967: beacon implementation is not a contract"\n        );\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(\n        address newBeacon,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        }\n    }\n}\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don\'t know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n     * and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _beforeFallback();\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n     * is empty.\n     */\n    receive() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n     * call, or as part of the Solidity `fallback` or `receive` functions.\n     *\n     * If overridden should call `super._beforeFallback()`.\n     */\n    function _beforeFallback() internal virtual {}\n}\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"eip-2612",children:"EIP-2612"}),"\n",(0,s.jsx)(e.p,{children:"transaction-less token approvals"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-solidity",children:"function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external\nfunction nonces(address owner) external view returns (uint)\nfunction DOMAIN_SEPARATOR() external view returns (bytes32)\n"})}),"\n",(0,s.jsx)(e.h2,{id:"eip-2981",children:"EIP-2981"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\u83B7\u53D6 NFT \u7248\u7A0E\u4FE1\u606F\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"receiver \u63A5\u53D7\u4EBA"}),"\n",(0,s.jsx)(e.li,{children:"royaltyAmount \u552E\u4EF7\u7248\u7A0E"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.li,{children:"IERC165 0x2a55205a"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-solidity",children:"interface IERC2981 is IERC165 {\n  function royaltyInfo(uint256 _tokenId, uint256 _salePrice)\n    external\n    view\n    returns (address receiver, uint256 royaltyAmount);\n}\n\n"})}),"\n",(0,s.jsx)(e.h2,{id:"eip-3722",children:"EIP-3722"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/onPoster",children:"https://github.com/onPoster"})}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"eip-4626",children:"EIP-4626"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["ropsten ",(0,s.jsx)(e.a,{href:"https://ropsten.etherscan.io/address/0xba12222222228d8ba445958a75a0704d566bf2c8#code=",children:"0xba12222222228d8ba445958a75a0704d566bf2c8#code="})]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"eip-7928",children:"EIP-7928"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Block-Level Access Lists, BALs"}),"\n",(0,s.jsx)(e.li,{children:"\u5F15\u5165\u4E00\u79CD\u673A\u5236\uFF0C\u5141\u8BB8\u5E76\u884C\u5904\u7406\u4EA4\u6613\u548C\u533A\u5757\u9A8C\u8BC1\uFF0C\u4ECE\u800C\u663E\u8457\u63D0\u5347\u4EE5\u592A\u574A\u4E3B\u7F51\uFF08L1\uFF09\u7684\u53EF\u6269\u5C55\u6027"}),"\n",(0,s.jsxs)(e.li,{children:["\u5F15\u5165\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u533A\u5757\u8BBF\u95EE\u5217\u8868\uFF08BAL\uFF09\uFF1A\u4E00\u4E2A\u6620\u5C04\uFF0C\u5305\u542B\u4E86\u4EA4\u6613\u5C06\u8BBF\u95EE\u7684\u5730\u5740\u3001\u5B58\u50A8\u63D2\u69FD\u53CA\u5176\u6267\u884C\u540E\u7684\u503C\u3002"}),"\n",(0,s.jsx)(e.li,{children:"\u4EA4\u6613\u7D22\u5F15\uFF08Transaction Indices\uFF09\uFF1A\u7528\u4E8E\u7CBE\u786E\u5B9A\u4F4D\u533A\u5757\u5185\u6BCF\u9879\u64CD\u4F5C\u7684\u4F4D\u7F6E\u3002"}),"\n",(0,s.jsx)(e.li,{children:"\u6267\u884C\u540E\u503C\uFF08Post-Execution Values\uFF09\uFF1A\u6BCF\u7B14\u4EA4\u6613\u5728\u7F51\u7EDC\u5168\u5C40\u72B6\u6001\u4E0A\u7559\u4E0B\u7684\u6700\u7EC8\u7ED3\u679C\u3002"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.li,{children:"\u9A8C\u8BC1\u8282\u70B9\u53EF\u4EE5\u5B9E\u73B0\u5E76\u884C\u78C1\u76D8\u8BFB\u53D6\u548C\u5E76\u884C\u4EA4\u6613\u9A8C\u8BC1\uFF0C\u4ECE\u800C\u5927\u5E45\u63D0\u5347\u6267\u884C\u6548\u7387\u548C\u533A\u5757\u9A8C\u8BC1\u901F\u5EA6 \u3002"}),"\n",(0,s.jsx)(e.li,{children:"\u201C\u8BFB\u5199\u65E0\u77E5\u201D\uFF08read-write oblivious\uFF09-> \u201C\u8BFB\u5199\u611F\u77E5\u201D\uFF08read-write aware\uFF09"}),"\n"]}),"\n",(0,s.jsx)(e.h1,{id:"faq",children:"FAQ"}),"\n",(0,s.jsx)(e.h2,{id:"erc-20-vs-erc-777",children:"ERC-20 vs ERC-777"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["ERC-20\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u57FA\u7840\u53EF\u7528"}),"\n",(0,s.jsx)(e.li,{children:"tranfer \u5730\u5740\u9519\u8BEF\u53EF\u80FD\u4E22\u5931"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["ERC-777\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"made aware - \u9A8C\u8BC1\u63A5\u6536\u8005"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"erc-721-vs-erc-1155",children:"ERC-721 vs ERC-1155"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["ERC-721 - NFT \u6807\u51C6 - non-fungible\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u4E13\u7528\u4E8E NFT - \u4FE1\u606F\u5B8C\u5584"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["ERC-1155 - \u591A Token \u6807\u51C6 - \u53EF\u5B9E\u73B0 NFT - semi-fungible\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u4E00\u4E2A\u5408\u7EA6\u652F\u6301\u591A\u79CD Token - \u4E0D\u4EC5\u9650\u4E8E NFT"}),"\n",(0,s.jsx)(e.li,{children:"semi-fungible - \u652F\u6301 Token-NFT \u4E92\u6362"}),"\n",(0,s.jsx)(e.li,{children:"\u6279\u91CF\u64CD\u4F5C"}),"\n",(0,s.jsx)(e.li,{children:"\u6BD4 ERC-721 \u5C11\u5B58\u50A8\u4E00\u4E9B\u4FE1\u606F"}),"\n",(0,s.jsx)(e.li,{children:"low gas fee"}),"\n"]}),"\n"]}),"\n"]})]})}function h(n={}){let{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(c,{...n})}):c(n)}},17776:function(n,e,t){t.d(e,{R:()=>i,x:()=>d});var r=t(7378);let s={},a=r.createContext(s);function i(n){let e=r.useContext(a);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:i(n.components),r.createElement(a.Provider,{value:e},n.children)}}}]);