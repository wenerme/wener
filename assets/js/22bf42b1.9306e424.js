"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["70779"],{12671:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>i,toc:()=>h,default:()=>u,metadata:()=>s,assets:()=>l,contentTitle:()=>a});var s=JSON.parse('{"id":"service/auth/oauth2-proxy","title":"oauth2-proxy","description":"- oauth2-proxy/oauth2-proxy","source":"@site/../notes/service/auth/oauth2-proxy.md","sourceDirName":"service/auth","slug":"/service/auth/oauth2-proxy","permalink":"/notes/service/auth/oauth2-proxy","draft":false,"unlisted":false,"editUrl":"https://github.com/wenerme/wener/edit/master/notes/../notes/service/auth/oauth2-proxy.md","tags":[],"version":"current","lastUpdatedBy":"wener","lastUpdatedAt":1633860901000,"frontMatter":{"id":"oauth2-proxy","title":"oauth2-proxy"},"sidebar":"docs","previous":{"title":"PKCE","permalink":"/notes/service/auth/oauth/pkce"},"next":{"title":"OPA","permalink":"/notes/service/auth/opa/"}}'),o=t(86106),r=t(17776);let i={id:"oauth2-proxy",title:"oauth2-proxy"},a="oauth2-proxy",l={},h=[{value:"\u914D\u7F6E",id:"\u914D\u7F6E",level:2},{value:"Ingress",id:"ingress",level:2}];function c(e){let n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"oauth2-proxy",children:"oauth2-proxy"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://github.com/oauth2-proxy/oauth2-proxy",children:"oauth2-proxy/oauth2-proxy"})}),"\n",(0,o.jsxs)(n.li,{children:["\u73AF\u5883\u53D8\u91CF + ",(0,o.jsx)(n.code,{children:"OAUTH2_PROXY_"})," \u524D\u7F00"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://oauth2-proxy.github.io/oauth2-proxy/configuration/sessions",children:"\u4F1A\u8BDD"})," - ",(0,o.jsx)(n.code,{children:"--session-store-type"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["cookie - \u9ED8\u8BA4\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"\u4EE3\u7406\u65E0\u72B6\u6001"}),"\n",(0,o.jsxs)(n.li,{children:["\u4F7F\u7528 ",(0,o.jsx)(n.code,{children:"cookie-secret"})," \u52A0\u5BC6 cookie"]}),"\n",(0,o.jsx)(n.li,{children:"\u5E76\u53D1\u64CD\u4F5C\u53EF\u80FD\u4F1A\u51B2\u7A81\u5BFC\u81F4\u9700\u8981\u4ECE\u65B0\u8BA4\u8BC1"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["redis\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Cookie \u8BB0\u5F55 ticket"}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"{CookieName}-{ticketID}.{secret}"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"CookieName \u9ED8\u8BA4 _oauth2_proxy"}),"\n",(0,o.jsx)(n.li,{children:"ticketID - 128 bit, hex"}),"\n",(0,o.jsx)(n.li,{children:"secret - 128 bit, base64url, no padding"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"--session-store-type=redis"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"--redis-connection-url=redis://host[:port][/db-number]"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://oauth2-proxy.github.io/oauth2-proxy/endpoints",children:"Endpoints"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"/robots.txt"}),"\n",(0,o.jsx)(n.li,{children:"/ping - \u5065\u5EB7\u68C0\u67E5"}),"\n",(0,o.jsx)(n.li,{children:"/oauth2/sign_in"}),"\n",(0,o.jsxs)(n.li,{children:["/oauth2/sign_out\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["rd \u53C2\u6570\u91CD\u5B9A\u5411 \u6216\u8005 \u5934 ",(0,o.jsx)(n.code,{children:"X-Auth-Request-Redirect"})]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.li,{children:"/oauth2/start - \u5F00\u59CB OAuth\uFF0Crd \u53C2\u6570\u4E3A\u91CD\u5B9A\u5411\u5730\u5740"}),"\n",(0,o.jsx)(n.li,{children:"/oauth2/callback - OAuth2 \u56DE\u8C03\u5730\u5740"}),"\n",(0,o.jsx)(n.li,{children:"/oauth2/userinfo - \u8FD4\u56DE\u7528\u6237\u4FE1\u606F"}),"\n",(0,o.jsx)(n.li,{children:"/oauth2/auth - \u8FD4\u56DE 202 Accepted \u6216 401 Unauthorized\uFF1B\u7528\u4E8E nginx auth_request"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\u53C2\u8003\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["ingress-nginx ",(0,o.jsx)(n.a,{href:"https://kubernetes.github.io/ingress-nginx/examples/auth/oauth-external-auth/",children:"oauth external auth"})]}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://docs.syseleven.de/metakube/de/tutorials/setup-ingress-auth-to-use-keycloak-oauth",children:"Setup ingress auth to use keycloak oauth"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"# Keycloak\n- args:\n    - --provider=keycloak\n    - --email-domain=*\n    - --upstream=file:///dev/null\n    - --http-address=0.0.0.0:4180\n    - --login-url=https://my.domain.com/auth/realms/authentication/protocol/openid-connect/auth\n    - --redeem-url=https://my.domain.com/auth/realms/authentication/protocol/openid-connect/token\n    - --validate-url=https://my.domain.com/auth/realms/authentication/protocol/openid-connect/userinfo\n    - --whitelist-domain=.my.domain.com\n    - --cookie-domain=.my.domain.com\n    - --oidc-issuer-url=https://my.domain.com/auth/realms/authentication\n    - --keycloak-group=/admin\n    - --cookie-name=keycloak\n    - --proxy-prefix=/second-oauth2\n"})}),"\n",(0,o.jsx)(n.h2,{id:"\u914D\u7F6E",children:"\u914D\u7F6E"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ini",children:'## <addr>:<port> to listen on for HTTP/HTTPS clients\n# http_address = "127.0.0.1:4180"\n# https_address = ":443"\n\n## Are we running behind a reverse proxy? Will not accept headers like X-Real-Ip unless this is set.\n# reverse_proxy = true\n\n## TLS Settings\n# tls_cert_file = ""\n# tls_key_file = ""\n\n## the OAuth Redirect URL.\n# defaults to the "https://" + requested host header + "/oauth2/callback"\n# redirect_url = "https://internalapp.yourcompany.com/oauth2/callback"\n\n## the http url(s) of the upstream endpoint. If multiple, routing is based on path\n# upstreams = [\n#     "http://127.0.0.1:8080/"\n# ]\n\n## Logging configuration\n#logging_filename = ""\n#logging_max_size = 100\n#logging_max_age = 7\n#logging_local_time = true\n#logging_compress = false\n#standard_logging = true\n#standard_logging_format = "[{{.Timestamp}}] [{{.File}}] {{.Message}}"\n#request_logging = true\n#request_logging_format = "{{.Client}} - {{.Username}} [{{.Timestamp}}] {{.Host}} {{.RequestMethod}} {{.Upstream}} {{.RequestURI}} {{.Protocol}} {{.UserAgent}} {{.StatusCode}} {{.ResponseSize}} {{.RequestDuration}}"\n#auth_logging = true\n#auth_logging_format = "{{.Client}} - {{.Username}} [{{.Timestamp}}] [{{.Status}}] {{.Message}}"\n\n## pass HTTP Basic Auth, X-Forwarded-User and X-Forwarded-Email information to upstream\n# pass_basic_auth = true\n# pass_user_headers = true\n## pass the request Host Header to upstream\n## when disabled the upstream Host is used as the Host Header\n# pass_host_header = true\n\n## Email Domains to allow authentication for (this authorizes any email on this domain)\n## for more granular authorization use `authenticated_emails_file`\n## To authorize any email addresses use "*"\n# email_domains = [\n#     "yourcompany.com"\n# ]\n\n## The OAuth Client ID, Secret\n# client_id = "123456.apps.googleusercontent.com"\n# client_secret = ""\n\n## Pass OAuth Access token to upstream via "X-Forwarded-Access-Token"\n# pass_access_token = false\n\n## Authenticated Email Addresses File (one email per line)\n# authenticated_emails_file = ""\n\n## Htpasswd File (optional)\n## Additionally authenticate against a htpasswd file. Entries must be created with "htpasswd -s" for SHA encryption\n## enabling exposes a username/login signin form\n# htpasswd_file = ""\n\n## Templates\n## optional directory with custom sign_in.html and error.html\n# custom_templates_dir = ""\n\n## skip SSL checking for HTTPS requests\n# ssl_insecure_skip_verify = false\n\n\n## Cookie Settings\n## Name     - the cookie name\n## Secret   - the seed string for secure cookies; should be 16, 24, or 32 bytes\n##            for use with an AES cipher when cookie_refresh or pass_access_token\n##            is set\n## Domain   - (optional) cookie domain to force cookies to (ie: .yourcompany.com)\n## Expire   - (duration) expire timeframe for cookie\n## Refresh  - (duration) refresh the cookie when duration has elapsed after cookie was initially set.\n##            Should be less than cookie_expire; set to 0 to disable.\n##            On refresh, OAuth token is re-validated.\n##            (ie: 1h means tokens are refreshed on request 1hr+ after it was set)\n## Secure   - secure cookies are only sent by the browser of a HTTPS connection (recommended)\n## HttpOnly - httponly cookies are not readable by javascript (recommended)\n# cookie_name = "_oauth2_proxy"\n# cookie_secret = ""\n# cookie_domains = ""\n# cookie_expire = "168h"\n# cookie_refresh = ""\n# cookie_secure = true\n# cookie_httponly = true\n'})}),"\n",(0,o.jsx)(n.h2,{id:"ingress",children:"Ingress"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"# \u539F\u59CB Ingress\nkind: Ingress\nmetdata:\n  annotations:\n    kubernetes.io/ingress.class: nginx\n    nginx.ingress.kubernetes.io/auth-url: 'https://$host/oauth2/auth'\n    nginx.ingress.kubernetes.io/auth-signin: 'https://$host/oauth2/start?rd=$escaped_request_uri'\n    # \u9700\u8981 set-xauthrequest: true\n    nginx.ingress.kubernetes.io/auth-response-headers: 'x-auth-request-user, x-auth-request-email'\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"\u6620\u5C04\u5230\u5176\u4ED6\u7A7A\u95F4"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"kind: Service\napiVersion: v1\nmetadata:\n  name: oauth2-proxy\n  namespace: longhorn-system\nspec:\n  type: ExternalName\n  externalName: oauth2-proxy.auth.svc.cluster.local\n  ports:\n    - port: 80\n      name: http\n      targetPort: 80\n---\n# \u4F8B\u5982 \u4E3A Longhorn UI \u6DFB\u52A0\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: longhorn-oauth2-ingress\n  namespace: longhorn-system\nspec:\n  tls:\n    - hosts:\n        - longhorn.example.com\n      secretName: longhorn-example-com-cert\n  rules:\n    - host: longhorn.example.com\n      http:\n        paths:\n          - backend:\n              service:\n                name: oauth2-proxy\n                port:\n                  name: http\n            path: /oauth2\n            pathType: ImplementationSpecific\n"})})]})}function u(e={}){let{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},17776:function(e,n,t){t.d(n,{R:()=>i,x:()=>a});var s=t(7378);let o={},r=s.createContext(o);function i(e){let n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);