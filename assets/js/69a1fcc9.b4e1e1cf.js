"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["6244"],{96539:function(n,e,i){i.r(e),i.d(e,{frontMatter:()=>t,toc:()=>h,default:()=>x,metadata:()=>r,assets:()=>c,contentTitle:()=>l});var r=JSON.parse('{"id":"os/linux/network/bridge","title":"\u6865\u63A5\u7F51\u7EDC","description":"- networking/bridge","source":"@site/../notes/os/linux/network/bridge.md","sourceDirName":"os/linux/network","slug":"/os/linux/network/bridge","permalink":"/notes/os/linux/network/bridge","draft":false,"unlisted":false,"editUrl":"https://github.com/wenerme/wener/edit/master/notes/../notes/os/linux/network/bridge.md","tags":[],"version":"current","lastUpdatedBy":"wener","lastUpdatedAt":1646642462000,"frontMatter":{"title":"\u6865\u63A5\u7F51\u7EDC"},"sidebar":"docs","previous":{"title":"Bonding","permalink":"/notes/os/linux/network/bonding"},"next":{"title":"firewalld","permalink":"/notes/os/linux/network/firewalld"}}'),s=i(86106),d=i(17776);let t={title:"\u6865\u63A5\u7F51\u7EDC"},l="Bridge",c={},h=[{value:"STP",id:"stp",level:2},{value:"bridge vs bonding active-backup",id:"bridge-vs-bonding-active-backup",level:2},{value:"\u6865\u63A5\u7F51\u5361\u4E0D\u4F7F\u7528\u5B9E\u9645\u7F51\u5361 Mac \u5730\u5740",id:"\u6865\u63A5\u7F51\u5361\u4E0D\u4F7F\u7528\u5B9E\u9645\u7F51\u5361-mac-\u5730\u5740",level:2},{value:"tinc \u8282\u70B9\u907F\u514D mac \u51B2\u7A81",id:"tinc-\u8282\u70B9\u907F\u514D-mac-\u51B2\u7A81",level:2},{value:"received packet on bond0 with own address as source address",id:"received-packet-on-bond0-with-own-address-as-source-address",level:2},{value:"bridge: filtering via arp/ip/ip6tables is no longer available by default",id:"bridge-filtering-via-arpipip6tables-is-no-longer-available-by-default",level:2}];function a(n){let e={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"bridge",children:"Bridge"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://wiki.linuxfoundation.org/networking/bridge",children:"networking/bridge"})}),"\n",(0,s.jsx)(e.li,{children:"\u5DE5\u4F5C\u7C7B\u4F3C Switch"}),"\n",(0,s.jsx)(e.li,{children:"L2 learning and forwarding"}),"\n",(0,s.jsxs)(e.li,{children:["STP\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u8BA9\u591A\u8DEF\u80FD\u6B63\u5E38\u5DE5\u4F5C"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-interfaces",children:"auto eth0\niface eth0 inet manual\n\nauto br0\niface br0 inet dhcp\n	bridge-ports eth0\n	bridge-stp on\n  # \u81EA\u5B9A\u4E49 mac \u786E\u4FDD dhcp \u7A33\u5B9A\n	# bridge-hw 00:00:00:00:00:00\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# ip link set dev $IFACE type bridge ageing_time $IF_BRIDGE_AGEING\n# brctl setageing\n\n# ip link set dev $IFACE type bridge priority $IF_BRIDGE_BRIDGEPRIO\n# brctl setbridgeprio\n\n# ip link set dev $IFACE type bridge forward_delay $IF_BRIDGE_FD\n# brctl setfd\n\n# ip link set dev $IFACE type bridge hello_time $IF_BRIDGE_HELLO\n# brctl sethello\n\n# ip link set dev $IFACE type bridge max_age $IF_BRIDGE_MAXAGE\n# brctl setmaxage\n\n# bridge link set dev $IFACE cost $IF_BRIDGE_PATHCOST\n# brctl setpathcost\n\n# bridge link set dev $IFACE priority $IF_BRIDGE_PORTPRIO\n# brctl setportprio\n\n# ip link set dev $IFACE type bridge stp $(yesno $IF_BRIDGE_STP)\nbrctl stp br0 off\n\n# vlan\n# ip link set dev $IFACE type bridge vlan_filtering $(yesno $IF_BRIDGE_VLAN_AWARE)\n\n#\nbrctl showmacs br0\nbrctl showstp br0\n"})}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsxs)(e.th,{children:["brctl setATTR ",(0,s.jsx)(e.strong,{children:"br"})," ",(0,s.jsx)(e.em,{children:"val"})]}),(0,s.jsx)(e.th,{children:"for"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"setageing bridge time"}),(0,s.jsx)(e.td,{children:"Set ageing time"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"setbridgeprio bridge prio"}),(0,s.jsx)(e.td,{children:"Set bridge priority (between 0 and 65535)"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"setfd bridge time"}),(0,s.jsx)(e.td,{children:"Set bridge forward delay"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"sethello bridge time"}),(0,s.jsx)(e.td,{children:"Set hello time"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"setmaxage bridge time"}),(0,s.jsx)(e.td,{children:"Set max message age"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"setgcint bridge time"}),(0,s.jsx)(e.td,{children:"Set garbage collection interval in seconds"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"sethashel bridge int"}),(0,s.jsx)(e.td,{children:"Set hash elasticity"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"sethashmax bridge int"}),(0,s.jsx)(e.td,{children:"Set hash max"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"setmclmc bridge int"}),(0,s.jsx)(e.td,{children:"Set multicast last member count"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"setmcrouter bridge int"}),(0,s.jsx)(e.td,{children:"Set multicast router"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"setmcsnoop bridge int"}),(0,s.jsx)(e.td,{children:"Set multicast snooping"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"setmcsqc bridge int"}),(0,s.jsx)(e.td,{children:"Set multicast startup query count"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"setmclmi bridge time"}),(0,s.jsx)(e.td,{children:"Set multicast last member interval"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"setmcmi bridge time"}),(0,s.jsx)(e.td,{children:"Set multicast membership interval"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"setmcqpi bridge time"}),(0,s.jsx)(e.td,{children:"Set multicast querier interval"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"setmcqi bridge time"}),(0,s.jsx)(e.td,{children:"Set multicast query interval"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"setmcqri bridge time"}),(0,s.jsx)(e.td,{children:"Set multicast query response interval"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"setmcqri bridge time"}),(0,s.jsx)(e.td,{children:"Set multicast startup query interval"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"setpathcost bridge port cost"}),(0,s.jsx)(e.td,{children:"Set path cost"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"setportprio bridge port prio"}),(0,s.jsx)(e.td,{children:"Set port priority (between 0 and 255)"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"setportmcrouter bridge port int"}),(0,s.jsx)(e.td,{children:"Set port multicast router"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"sethashel bridge int"}),(0,s.jsx)(e.td,{children:"Set hash elasticity value"})]})]})]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"bridge"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://man7.org/linux/man-pages/man8/bridge.8.html",children:"bridge.8"})}),"\n",(0,s.jsx)(e.li,{children:"fdb - Forwarding Database"}),"\n",(0,s.jsx)(e.li,{children:"mdb - Multicast group database"}),"\n",(0,s.jsx)(e.li,{children:"BPDU"}),"\n",(0,s.jsxs)(e.li,{children:["link\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["hwmode\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"vepa"}),"\n",(0,s.jsx)(e.li,{children:"veb - \u786C\u4EF6 bridge"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"bridge li   # link show\nbridge fdb  # fdb show\nbridge mdb  # mdb show\nbridge vlan # vlan show\n\nbridge monitor\n"})}),"\n",(0,s.jsx)(e.h2,{id:"stp",children:"STP"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["master \u6BCF 2s \u53D1\u9001\u4E00\u6B21 \u201C\u5FC3\u8DF3\u201D/hello \u5305 ",(0,s.jsx)(e.code,{children:"0180c2000000"})]}),"\n",(0,s.jsxs)(e.li,{children:["slave \u63A5\u6536\u5230\u5305\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"20s \u5185\u6CA1\u6536\u5230\uFF0C\u5219\u8BA4\u4E3A master down"}),"\n",(0,s.jsx)(e.li,{children:"30s \u5185\u5EFA\u7ACB\u597D\u65B0\u7684 stp - \u4F5C\u4E3A master"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.li,{children:"BPDU - Bridge Protocol Data Unit"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"\u89D2\u8272"})}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"Role"}),(0,s.jsx)(e.th,{children:"Name"}),(0,s.jsx)(e.th,{children:"Chinese"}),(0,s.jsx)(e.th,{children:"Desc"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"RB"}),(0,s.jsx)(e.td,{children:"Root Bridge"}),(0,s.jsx)(e.td,{children:"\u6839\u6865"}),(0,s.jsx)(e.td,{children:"ID \u6700\u5C0F\u6865"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"RP"}),(0,s.jsx)(e.td,{children:"Root Port"}),(0,s.jsx)(e.td,{children:"\u6839\u7AEF\u53E3"}),(0,s.jsx)(e.td,{children:"\u6700\u4F73\u8DEF\u5F84\u7AEF\u53E3"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"DP"}),(0,s.jsx)(e.td,{children:"Designated Port"}),(0,s.jsx)(e.td,{children:"\u6307\u5B9A\u7AEF\u53E3"}),(0,s.jsx)(e.td,{children:"\u6BCF\u4E00\u4E2A\u7F51\u6BB5\u9009\u62E9\u5230\u6839\u6865\u6700\u8FD1\u7684\u7F51\u6865\u4F5C\u4E3A\u6307\u5B9A\u7F51\u6865, \u8BE5\u7F51\u6865\u5230\u8FD9\u4E00\u7F51\u6BB5\u7684\u7AEF\u53E3\u4E3A\u6307\u5B9A\u7AEF\u53E3"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"AP"}),(0,s.jsx)(e.td,{children:"Alternated Port"}),(0,s.jsx)(e.td,{children:"\u53EF\u9009\u7AEF\u53E3"}),(0,s.jsx)(e.td,{children:"\u5373\u963B\u585E\u7AEF\u53E3, \u65E2\u4E0D\u662F\u6307\u5B9A\u7AEF\u53E3, \u4E5F\u4E0D\u662F\u6839\u7AEF\u53E3\u7684\u7AEF\u53E3"})]})]})]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"\u7AEF\u53E3\u72B6\u6001"})}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"Status"}),(0,s.jsx)(e.th,{children:"Data"}),(0,s.jsx)(e.th,{children:"BPDU"}),(0,s.jsx)(e.th,{children:"Learn Address"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Disabled"}),(0,s.jsx)(e.td,{children:"no"}),(0,s.jsx)(e.td,{children:"no"}),(0,s.jsx)(e.td,{children:"no"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Blocking"}),(0,s.jsx)(e.td,{children:"no"}),(0,s.jsx)(e.td,{children:"recv"}),(0,s.jsx)(e.td,{children:"no"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Listening"}),(0,s.jsx)(e.td,{children:"no"}),(0,s.jsx)(e.td,{children:"yes"}),(0,s.jsx)(e.td,{children:"no"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Learning"}),(0,s.jsx)(e.td,{children:"no"}),(0,s.jsx)(e.td,{children:"yes"}),(0,s.jsx)(e.td,{children:"start"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Forwarding"}),(0,s.jsx)(e.td,{children:"yes"}),(0,s.jsx)(e.td,{children:"yes"}),(0,s.jsx)(e.td,{children:"yes"})]})]})]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Blocking(20s) \u2013> Listening(15s) \u2013> Learning(15s) \u2013> Forwarding"}),"\n",(0,s.jsxs)(e.li,{children:["\u53C2\u8003\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"https://github.com/mstpd/mstpd",children:"mstpd/mstpd"})," - Multiple Spanning Tree Protocol Daemon"]}),"\n",(0,s.jsxs)(e.li,{children:["wikipedia ",(0,s.jsx)(e.a,{href:"https://en.wikipedia.org/wiki/Spanning_Tree_Protocol",children:"Spanning Tree Protocol"})]}),"\n",(0,s.jsxs)(e.li,{children:["wikipedia ",(0,s.jsx)(e.a,{href:"https://zh.wikipedia.org/wiki/%E7%94%9F%E6%88%90%E6%A0%91%E5%8D%8F%E8%AE%AE",children:"\u751F\u6210\u6811\u534F\u8BAE"})]}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://www.cnblogs.com/hzl6255/p/3259909.html",children:"Linux STP \u4ECB\u7ECD"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://tldp.org/HOWTO/BRIDGE-STP-HOWTO/",children:"Linux BRIDGE-STP-HOWTO"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"http://www.embeddedlinux.org.cn/linux_net/0596002556/understandlni-CHP-16-SECT-16.html",children:"Spanning Tree Protocol"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://serverfault.com/questions/824621",children:"Linux: bridges, VLANs and RSTP"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h1,{id:"faq",children:"FAQ"}),"\n",(0,s.jsx)(e.h2,{id:"bridge-vs-bonding-active-backup",children:"bridge vs bonding active-backup"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["bonding - \u7528\u4E8E\u805A\u5408\u94FE\u8DEF\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\u805A\u5408 - \u4F7F\u7528\u540C\u8D28\u7684\u94FE\u8DEF\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u591A\u4E2A\u94FE\u8DEF\u5E76\u884C\u5DE5\u4F5C"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["active-backup - \u53EF\u80FD\u4F7F\u7528\u975E\u540C\u8D28\u94FE\u8DEF - wlan0+eth0 - eth0 \u4F5C\u4E3A primary\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u68C0\u6D4B\u94FE\u8DEF\u72B6\u6001 - \u5207\u6362\u65F6\u95F4\u77ED"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["bridge - \u7528\u4E8E\u5B66\u4E60\u548C\u8F6C\u53D1\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"members \u53EF\u4EE5\u662F\u865A\u62DF\u94FE\u8DEF\uFF0C\u53EF\u4EE5\u662F\u7269\u7406\u94FE\u8DEF"}),"\n",(0,s.jsx)(e.li,{children:"STP - \u5B66\u4E60\u9700\u8981\u65F6\u95F4 - \u9ED8\u8BA4\u524D\u540E\u52A0\u8D77\u6765 50s - \u53EF\u80FD\u66F4\u957F"}),"\n",(0,s.jsx)(e.li,{children:"\u7406\u8BBA\u4E0A\u6765\u8BF4\u4E5F\u80FD\u5B9E\u73B0 bonding active-backup \u7684\u6548\u679C"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"\u6865\u63A5\u7F51\u5361\u4E0D\u4F7F\u7528\u5B9E\u9645\u7F51\u5361-mac-\u5730\u5740",children:"\u6865\u63A5\u7F51\u5361\u4E0D\u4F7F\u7528\u5B9E\u9645\u7F51\u5361 Mac \u5730\u5740"}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"\u6865\u63A5\u7F51\u5361 MAC \u5730\u5740\u4F1A\u53D8\u5BFC\u81F4 dhcp \u83B7\u53D6\u7684\u5730\u5740\u4E0D\u7A33\u5B9A"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"\u9ED8\u8BA4\u9009\u62E9\u6700\u4F4E mac - \u6392\u5E8F\u6700\u524D\uFF0C\u4E00\u822C\u865A\u62DF\u7F51\u5361\u7684 mac \u4F1A\u6BD4\u5B9E\u9645\u7684\u66F4\u4F4E\uFF0C\u5BFC\u81F4\u88AB\u4F18\u5148\u9009\u62E9\u3002"}),"\n",(0,s.jsx)(e.p,{children:"brctl addif \u6DFB\u52A0 slave \u7684\u65F6\u5019\u4E5F\u4F1A\u53D8"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"\u6DFB\u52A0 slave \u7684\u65F6\u5019\u8BB0\u5F55 mac \u518D\u8BBE\u7F6E\u56DE\u53BB"}),"\n",(0,s.jsx)(e.li,{children:"\u5C06\u865A\u62DF\u7F51\u5361\u7684 mac \u8BBE\u7F6E\u9AD8\u4E00\u70B9"}),"\n"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u63A8\u8350"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# \u65B9\u6CD5 1\nmac=$(cat /etc/tinc/br0/address)\nip li set $IFACE master br0\nip li set br0 address $mac\n\n# \u65B9\u6CD5 2\nip link set $IFACE address fe:12:34:56:78:9a\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\u53C2\u8003\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://lists.linuxfoundation.org/pipermail/bridge/2006-January/003036.html",children:"Bridge Interface MAC address assignment"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/hansode/linux-bridge-mac-addresses-and-dynamic-ports",children:"hansode/linux-bridge-mac-addresses-and-dynamic-ports"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"tinc-\u8282\u70B9\u907F\u514D-mac-\u51B2\u7A81",children:"tinc \u8282\u70B9\u907F\u514D mac \u51B2\u7A81"}),"\n",(0,s.jsx)(e.p,{children:"\u8BBE\u7F6E\u9AD8 mac"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"ip li set $INTERFACE address fe:fe:12:34:56:78\nip li set $INTERFACE master br0\nip li set $INTERFACE up\nip addr add 10.10.1.1/16 dev br0\n"})}),"\n",(0,s.jsx)(e.h2,{id:"received-packet-on-bond0-with-own-address-as-source-address",children:"received packet on bond0 with own address as source address"}),"\n",(0,s.jsx)(e.p,{children:"\u5F71\u54CD\u4E0D\u5927\u7684 log \u4FE1\u606F"}),"\n",(0,s.jsx)(e.h2,{id:"bridge-filtering-via-arpipip6tables-is-no-longer-available-by-default",children:"bridge: filtering via arp/ip/ip6tables is no longer available by default"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u53EA\u662F info log\uFF0C\u4EE5\u524D modprobe bridge \u4F1A\u63D0\u4F9B\u7684\u529F\u80FD\u73B0\u5728\u9700\u8981 modprobe br_netfilter"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"bridge: filtering via arp/ip/ip6tables is no longer available by default. Update your scripts to load br_netfilter if you need this.\n"})})]})}function x(n={}){let{wrapper:e}={...(0,d.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(a,{...n})}):a(n)}},17776:function(n,e,i){i.d(e,{R:()=>t,x:()=>l});var r=i(7378);let s={},d=r.createContext(s);function t(n){let e=r.useContext(d);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:t(n.components),r.createElement(d.Provider,{value:e},n.children)}}}]);