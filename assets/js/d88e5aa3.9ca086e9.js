"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["35117"],{35330:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>i,toc:()=>m,default:()=>u,metadata:()=>o,assets:()=>c,contentTitle:()=>a});var o=JSON.parse('{"id":"os/virt/qemu/qemu-openrc","title":"OpenRC","description":"- jirutka/qemu-openrc","source":"@site/../notes/os/virt/qemu/qemu-openrc.md","sourceDirName":"os/virt/qemu","slug":"/os/virt/qemu/openrc","permalink":"/notes/os/virt/qemu/openrc","draft":false,"unlisted":false,"editUrl":"https://github.com/wenerme/wener/edit/master/notes/../notes/os/virt/qemu/qemu-openrc.md","tags":[],"version":"current","lastUpdatedBy":"wener","lastUpdatedAt":1743395488000,"frontMatter":{"title":"OpenRC"},"sidebar":"docs","previous":{"title":"QEMU\u76D1\u89C6\u5668","permalink":"/notes/os/virt/qemu/monitor"},"next":{"title":"QEMU QMP","permalink":"/notes/os/virt/qemu/qmp"}}'),s=t(86106),r=t(17776);let i={title:"OpenRC"},a="Qemu OpenRC",c={},m=[{value:"conf",id:"conf",level:2}];function l(e){let n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"qemu-openrc",children:"Qemu OpenRC"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/jirutka/qemu-openrc",children:"jirutka/qemu-openrc"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://pkgs.alpinelinux.org/contents?name=qemu-openrc&arch=x86_64",children:"https://pkgs.alpinelinux.org/contents?name=qemu-openrc&arch=x86_64"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# VM_NAME=example\nln -s qemu /etc/init.d/qemu.example\ncp /etc/conf.d/qemu /etc/conf.d/qemu.example\n\n# 4c4g\n# vnc 5910\ncat << EOF > /etc/conf.d/qemu.example\nsmp_cpus="4"\nmemory="4G"\nvnc_display=10\nvnc_password="$(uuidgen)"\n\ndisk0_file="/data/vm/rms.vhdx"\ndisk0_format="vhdx"\nEOF\n'})}),"\n",(0,s.jsx)(n.h2,{id:"conf",children:"conf"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:'user="qemu"\ngroup="qemu"\npidfile="/run/qemu/${VM_NAME}/qemu.pid"\nlogfile="/var/log/qemu/${VM_NAME}.log"\n\n# Number of milliseconds to wait after starting to check if the VM is still\n# running (used only with start-stop-daemon). Set to empty string to disable.\n#start_wait=100\n\n# How many seconds to wait after sending "system_shutdown" before force\n# stopping the VM.\n#shutdown_timeout=40\n\n# qemu-system-${system_type}\nsystem_type="x86_64"\nenable_kvm="yes"\n\n# Select CPU model. Value "host" is allowed only for KVM.\n# Run `qemu-system-$system_type -cpu help` for list of options.\ncpu_model="host"\n# n CPUs.\nsmp_cpus="1"\n\n# Maximum number of hotpluggable CPUs, i.e. how many CPUs may be added to the\n# VM after startup from the monitor console.\n#smp_cpus_max="$smp_cpus"\n\n# Amount of RAM to allocate for the VM on startup. Use suffix "M" or "G" for\n# megabytes or gigabytes respectively.\nmemory="1G"\n\n# Maximum amount of RAM the VM can reach, i.e. how much memory may be allocated\n# for the VM after startup from the monitor console. Use suffix "M" or "G" for\n# megabytes or gigabytes respectively.\n#memory_max="$memory"\n\n# Number of memory slots for additional hotpluggable memory. If it\'s 0, then\n# memory hotplug won\'t be enabled and the VM startup RAM will never increase.\n# If $memory == $memory_max, then this is forced to 0.\n#memory_slots=2\n\n# Whether to use hugetlbfs mounted on $hugepages_path for the VM RAM.\n#memory_hugepages="no"\n\n# Mount point of the hugetlbfs.\n#hugepages_path="/dev/hugepages"\n\n# Start the RTC at the current UTC, or local time? Use "utc", or "localtime".\n# Note: "localtime" is required for correct date in Windows.\n#rtc_base="utc"\n\n# Select type of VGA card to emulate. Valid values for type are: cirrus, std,\n# vmware, qxl, tcx, cg3, and none. See option -vga in man qemu for more\n# information.\n#vga="std"\n\n#vnc_listen="0.0.0.0"\n# TCP port is 5900+$vnc_display.\n#vnc_display=\n#vnc_password=\n\n# Path of the QEMU monitor socket for this VM.\nmonitor_socket="/run/qemu/${VM_NAME}/monitor.sock"\n\n##\n# Network interfaces\n#\n# You can specify up to 10 NICs using variables netX and netX_OPTION. For list\n# of available options open man qemu and find -netdev.\n#\n# MAC address of the NIC is automatically generated from the VM name and\n# sequence number of the NIC, so it\'s always the same for particular VM and NIC\n# and it should be unique as well. You can override the MAC address with\n# variable netX_mac.\n#\n# The default driver for NICs is virtio-net-pci (requires virtio-net driver\n# to be installed in the VM). You can override it with variable netX_device.\n#\n# Example:\n#   net0="bridge"\n#   net0_br="br0"\n#   net0_mac="52:54:12:34:56:78"\n#   net0_device="e1000"\n#\nnet0="bridge"\n\n##\n# Hard-drives\n#\n# You can specify up to 10 drives using variables diskX_OPTION. For list of\n# available options open man qemu and find -drive.\n#\n# These drives will use driver scsi-disk connected to virtio-scsi-pci (requires\n# virtio-scsi drivers to be installed in the VM).\n#\n# Example:\n#   disk0_file="/dev/mapper/${VM_NAME}-disk0"\n#   disk0_format="raw"\n#   disk0_cache="none"\n#\n#   disk1_file="/var/lib/qemu/${VM_NAME}/disk0.qcow2"\n#   disk1_format="qcow2"\n#\n\n##\n# CD-ROMs\n#\n# You can specify up to 10 cdrom drives using variables cdromX_file.\n#\n# These drives will use driver ide-cd connected to an emulated IDE controller\n# (no virtio). This is slow, but doesn\'t require any special drivers in the VM.\n#\n# Example:\n#   cdrom0_file="/var/lib/qemu/virtio-win.iso"\n#\n\n# Any additional arguments to be passed to qemu-system-x86_64 command.\n#extra_args=""\n\n# Specify service dependencies. You can use the same directives as in the\n# depend() function, but as variables prefixed by "rc_" (e.g. rc_need, rc_use).\n#rc_need=""\n'})})]})}function u(e={}){let{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},17776:function(e,n,t){t.d(n,{R:()=>i,x:()=>a});var o=t(7378);let s={},r=o.createContext(s);function i(e){let n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);