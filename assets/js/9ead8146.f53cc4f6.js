"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["10330"],{26931:function(e,n,s){s.r(n),s.d(n,{frontMatter:()=>i,toc:()=>h,default:()=>a,metadata:()=>r,assets:()=>c,contentTitle:()=>l});var r=JSON.parse('{"id":"software/rustdesk/rustdesk-server","title":"RustDesk Server","description":"- API Server \u4E0D\u5728\u5F00\u6E90\u90E8\u5206 - \u56E0\u6B64\u4E0D\u80FD\u767B\u5F55","source":"@site/../notes/software/rustdesk/rustdesk-server.md","sourceDirName":"software/rustdesk","slug":"/software/rustdesk/server","permalink":"/notes/software/rustdesk/server","draft":false,"unlisted":false,"editUrl":"https://github.com/wenerme/wener/edit/master/notes/../notes/software/rustdesk/rustdesk-server.md","tags":[{"inline":true,"label":"Server","permalink":"/notes/tags/server"}],"version":"current","lastUpdatedBy":"wener","lastUpdatedAt":1743395488000,"frontMatter":{"tags":["Server"]},"sidebar":"docs","previous":{"title":"rustdesk","permalink":"/notes/software/rustdesk/"},"next":{"title":"Software Awesome","permalink":"/notes/software/awesome"}}'),t=s(86106),d=s(17776);let i={tags:["Server"]},l="RustDesk Server",c={},h=[];function o(e){let n={a:"a",admonition:"admonition",code:"code",h1:"h1",header:"header",hr:"hr",li:"li",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"rustdesk-server",children:"RustDesk Server"})}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["API Server \u4E0D\u5728\u5F00\u6E90\u90E8\u5206 - \u56E0\u6B64\u4E0D\u80FD\u767B\u5F55\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/rustdesk/rustdesk-server/issues/73",children:"https://github.com/rustdesk/rustdesk-server/issues/73"})}),"\n"]}),"\n"]}),"\n"]})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/rustdesk/rustdesk-server",children:"rustdesk/rustdesk-server"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"AGPLv3, Rust"}),"\n",(0,t.jsx)(n.li,{children:"hbb ->"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://rustdesk.com/docs/en/self-host/",children:"https://rustdesk.com/docs/en/self-host/"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"TCP 21115-21117"}),"\n",(0,t.jsx)(n.li,{children:"UDP 21116"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["RustDesk Server Pro\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Auth\u30012FA\u3001OIDC\u3001WebConsole\u3001LDAP"}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://rustdesk.com/pricing.html",children:"https://rustdesk.com/pricing.html"})}),"\n"]}),"\n"]}),"\n"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"port"}),(0,t.jsx)(n.th,{children:"for"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"21114"}),(0,t.jsx)(n.td,{children:"API Server - \u672A\u5F00\u6E90\uFF0C\u53EF\u81EA\u884C\u5B9E\u73B0"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"21115"}),(0,t.jsx)(n.td,{children:"RustDesk Server hbbs - NAT type test"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"21116/UDP"}),(0,t.jsx)(n.td,{children:"RustDesk Server hbbs - ID registration and heartbeat service"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"21116/TCP"}),(0,t.jsx)(n.td,{children:"RustDesk Server hbbs - TCP hole punching and connection service"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"21117"}),(0,t.jsx)(n.td,{children:"RustDesk Server hbbr - Relay services"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"21118"}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"21119"}),(0,t.jsx)(n.td,{children:"hbbr WebSocket"})]})]})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# AlpineLinux\napk add -X https://mirrors.tuna.tsinghua.edu.cn/alpine/edge/testing/ --no-cache rustdesk-server\nKEY=$(uuidgen)\nRELAY_SERVER=hbbs.example.com:21116\necho \"command_args='-k $KEY -r $RELAY_SERVER'\"  | sudo tee -a /etc/conf.d/hbbs\necho \"command_args='-k $KEY'\" | sudo tee -a /etc/conf.d/hbbr\n\n# \u4F1A\u9644\u5E26\u542F\u52A8 hbbr\nsudo service hbbs start\n\n# Docker rustdesk/rustdesk-server:latest\ndocker image pull rustdesk/rustdesk-server\ndocker run --name hbbs -v ./data:/root -td --net=host rustdesk/rustdesk-server hbbs -r <relay-server-ip[:port]>\ndocker run --name hbbr -v ./data:/root -td --net=host rustdesk/rustdesk-server hbbr\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"version: '3'\n\nservices:\n  hbbs:\n    container_name: hbbs\n    image: rustdesk/rustdesk-server:latest\n    command: hbbs\n    volumes:\n      - ./data:/root\n    network_mode: 'host'\n    depends_on:\n      - hbbr\n    restart: unless-stopped\n\n  hbbr:\n    container_name: hbbr\n    image: rustdesk/rustdesk-server:latest\n    command: hbbr\n    volumes:\n      - ./data:/root\n    network_mode: 'host'\n    restart: unless-stopped\n"})}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"hbbs"}),(0,t.jsx)(n.th,{children:"default"}),(0,t.jsx)(n.th,{children:"for"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"-c, --config FILE"}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"-k, --key KEY"}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"--mask MASK"}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{children:"CIDR mask"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"-p,--port NUMBER"}),(0,t.jsx)(n.td,{children:"21116"}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"-r, --relay-servers HOST"}),(0,t.jsx)(n.td,{}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:":"}),"\u5206\u5272"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"-R, --rendezvous-servers HOSTS"}),(0,t.jsx)(n.td,{}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:":"}),"\u5206\u5272"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"-M, --rmem NUMBER"}),(0,t.jsx)(n.td,{children:"0"}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"-S, --serial NUMBER"}),(0,t.jsx)(n.td,{children:"0"}),(0,t.jsx)(n.td,{children:"configure update serial number"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"-u, --software-url URL"}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{children:"\u4E0B\u8F7D\u5730\u5740"})]})]})]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"hbbr"}),(0,t.jsx)(n.th,{children:"default"}),(0,t.jsx)(n.th,{children:"for"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"-k, --key KEY"}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"-p,--port NUMBER"}),(0,t.jsx)(n.td,{children:"21117"}),(0,t.jsx)(n.td,{})]})]})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# rmem\n# 52428800\nsysctl net.core.rmem_max\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"hbbs - RustDesk ID/Rendezvous server"}),"\n",(0,t.jsx)(n.li,{children:"hbbr - RustDesk relay server"}),"\n",(0,t.jsx)(n.li,{children:"rustdesk-utils - RustDesk CLI utilities"}),"\n",(0,t.jsxs)(n.li,{children:["windows \u53EF\u4EE5\u901A\u8FC7\u6587\u4EF6\u540D\u8FDB\u884C\u914D\u7F6E\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"rustdesk-host=MY.DOMAIN,key=MY-PUBLIC-KEY=.exe"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/rustdesk/rustdesk/discussions/966",children:"https://github.com/rustdesk/rustdesk/discussions/966"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["/var/lib/rustdesk-server/\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"db_v2.sqlite3"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE peer (\n                guid blob primary key not null,\n                id varchar(100) not null,\n                uuid blob not null,\n                pk blob not null,\n                created_at datetime not null default(current_timestamp),\n                user blob,\n                status tinyint,\n                note varchar(300),\n                info text not null\n            ) without rowid;\nCREATE UNIQUE INDEX index_peer_id on peer (id);\nCREATE INDEX index_peer_user on peer (user);\nCREATE INDEX index_peer_created_at on peer (created_at);\nCREATE INDEX index_peer_status on peer (status);\n"})})]})}function a(e={}){let{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},17776:function(e,n,s){s.d(n,{R:()=>i,x:()=>l});var r=s(7378);let t={},d=r.createContext(t);function i(e){let n=r.useContext(d);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(d.Provider,{value:n},e.children)}}}]);