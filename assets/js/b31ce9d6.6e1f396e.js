"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["96015"],{81221:function(e,n,r){r.r(n),r.d(n,{frontMatter:()=>o,toc:()=>l,default:()=>m,metadata:()=>i,assets:()=>a,contentTitle:()=>c});var i=JSON.parse('{"id":"os/virt/firecracker","title":"Firecracker","description":"- firecracker-microvm/firecracker \u662F\u4EC0\u4E48","source":"@site/../notes/os/virt/firecracker.md","sourceDirName":"os/virt","slug":"/os/virt/firecracker","permalink":"/notes/os/virt/firecracker","draft":false,"unlisted":false,"editUrl":"https://github.com/wenerme/wener/edit/master/notes/../notes/os/virt/firecracker.md","tags":[],"version":"current","lastUpdatedBy":"wener","lastUpdatedAt":1757294976000,"frontMatter":{"title":"Firecracker"},"sidebar":"docs","previous":{"title":"ESXi","permalink":"/notes/os/virt/esxi"},"next":{"title":"Apache Guacamole","permalink":"/notes/os/virt/guacamole"}}'),t=r(86106),s=r(17776);let o={title:"Firecracker"},c="Firecracker",a={},l=[{value:"alpine",id:"alpine",level:2},{value:"ubuntu",id:"ubuntu",level:2},{value:"centos",id:"centos",level:2},{value:"network",id:"network",level:2},{value:"\u7F51\u7EDC",id:"\u7F51\u7EDC",level:2},{value:"mount: mounting /dev/vda on /sysroot failed: No such device",id:"mount-mounting-devvda-on-sysroot-failed-no-such-device",level:2}];function d(e){let n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"firecracker",children:"Firecracker"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/firecracker-microvm/firecracker",children:"firecracker-microvm/firecracker"})," \u662F\u4EC0\u4E48\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"VMM/Virtual Machine Manager"}),"\n",(0,t.jsxs)(n.li,{children:["\u6700\u5C0F\u865A\u62DF\u673A\u5B9E\u73B0 - \u6700\u521D\u7528\u4E8E serverless \u573A\u666F\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u4EC5\u652F\u6301\u5FC5\u987B\u8BBE\u5907 virtio-net, virtio-block, virtio-vsock, serial console, minimal keyboard controller"}),"\n",(0,t.jsx)(n.li,{children:"< 125 ms \u542F\u52A8"}),"\n",(0,t.jsx)(n.li,{children:"< 5m \u521D\u59CB\u5185\u5B58\u5360\u7528"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"\u57FA\u4E8E KVM \u7684 QEMU \u66FF\u4EE3\u54C1"}),"\n",(0,t.jsx)(n.li,{children:"Rust \u5B9E\u73B0"}),"\n",(0,t.jsx)(n.li,{children:"\u63D0\u4F9B REST \u63A7\u5236\u63A5\u53E3"}),"\n",(0,t.jsx)(n.li,{children:"Kernel 4.14+"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\u53C2\u8003\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://fly.io/docs/reference/machines/",children:"https://fly.io/docs/reference/machines/"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/firecracker-microvm/firecracker/tree/master/docs",children:"https://github.com/firecracker-microvm/firecracker/tree/master/docs"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/firecracker-microvm/firecracker-containerd",children:"firecracker-microvm/firecracker-containerd"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u5B9E\u73B0\u901A\u8FC7 containerd \u7BA1\u7406 microVM"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/firecracker-microvm/firectl",children:"firecracker-microvm/firectl"})," - \u8F85\u52A9\u8FD0\u884C firecracker"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/weaveworks/ignite",children:"weaveworks/ignite"})," - \u7C7B\u4F3C Docker \u7BA1\u7406\u5BB9\u5668\u4E00\u6837\u7BA1\u7406 microVM"]}),"\n",(0,t.jsxs)(n.li,{children:["qemu ",(0,t.jsx)(n.a,{href:"https://github.com/qemu/qemu/blob/master/docs/system/i386/microvm.rst",children:"docs/system/i386/microvm"})," - QEMU \u652F\u6301 microvm"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\u95EE\u9898\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/firecracker-microvm/firecracker/issues/1571",children:"#1571"})," - virtio memory balloon"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{title:"Firecracker \u9650\u5236",type:"info",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u6CA1\u6709\u7535\u6E90\u7BA1\u7406\uFF0C\u56E0\u6B64\u4E0D\u652F\u6301\u91CD\u542F\uFF0C\u4F1A\u76F4\u63A5\u9000\u51FA"}),"\n",(0,t.jsx)(n.li,{children:"alpine \u5185\u6838\u9700\u8981 boot-source.initrd_path => initramfs-virt"}),"\n",(0,t.jsx)(n.li,{children:"alpine netboot \u7684 initramfs-virt \u6CA1\u6709 ext4"}),"\n",(0,t.jsx)(n.li,{children:"\u7CFB\u7EDF\u5185 poweroff \u6216 halt \u4E0D\u4F1A\u9000\u51FA - reboot \u4F1A"}),"\n",(0,t.jsx)(n.li,{children:"\u53EF\u4EE5\u53D1\u9001 SendCtrlAltDel \u9000\u51FA"}),"\n",(0,t.jsx)(n.li,{children:"\u4E0D\u652F\u6301 QCOW2 \u683C\u5F0F\uFF0C\u53EF\u4EE5\u8003\u8651\u914D\u5408 NDB \u4F7F\u7528"}),"\n"]})}),"\n",(0,t.jsx)(n.h2,{id:"alpine",children:"alpine"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# download\nlatest=$(basename $(curl -fsSLI -o /dev/null -w  %{url_effective} https://github.com/firecracker-microvm/firecracker/releases/latest))\ncurl -LOJ https://github.com/firecracker-microvm/firecracker/releases/download/${latest}/firecracker-${latest}-$(uname -m).tgz\nmkdir out\ntar zxvf firecracker-${latest}-$(uname -m).tgz --strip-components=1 -C out\ncp out/firecracker-${latest}-$(uname -m) firecracker\nchmod +x firecracker\n\n# rootfs\n# =========\n# qemu-img create -f raw alpine.rootfs.ext4 1G\nfallocate -l 1G alpine.rootfs.ext4\nmkfs.ext4 ./alpine.rootfs.ext4\nmkdir -p /tmp/rootfs\nsudo mount alpine.rootfs.ext4 /tmp/rootfs\n\ncurl -OJ https://mirrors.aliyun.com/alpine/v3.19/releases/x86_64/alpine-minirootfs-3.19.8-x86_64.tar.gz\nsudo tar zxvf alpine-minirootfs-3.19.8-x86_64.tar.gz -C /tmp/rootfs/\n# for mirror\nsudo cp /etc/apk/repositories /tmp/rootfs/etc/apk/repositories\nsudo cp /etc/resolv.conf /tmp/rootfs/etc\nsudo chroot /tmp/rootfs/ /bin/sh\n\napk add alpine-base util-linux linux-virt haveged\nrc-update add haveged\necho root:root | chpasswd\nfor svc in devfs procfs sysfs; do ln -fs /etc/init.d/$svc /etc/runlevels/boot; done\n\nln -s agetty /etc/init.d/agetty.ttyS0\necho ttyS0 > /etc/securetty\nrc-update add agetty.ttyS0 default\n\nexit\n\n# curl -LO https://mirrors.aliyun.com/alpine/latest-stable/releases/x86_64/netboot/initramfs-virt\n# curl -LO https://mirrors.aliyun.com/alpine/latest-stable/releases/x86_64/netboot/vmlinuz-virt\n# this initramfs contain required ext4 module\nsudo cp /tmp/rootfs/boot/initramfs-virt initramfs-virt\nsudo cp /tmp/rootfs/boot/vmlinuz-virt vmlinuz-virt\n\nsudo umount /tmp/rootfs\n\n# kernel\n# ==========\ncurl -LOC- https://raw.githubusercontent.com/torvalds/linux/master/scripts/extract-vmlinux\nchmod +x extract-vmlinux\nsudo apk add grep\n# uncompress\n./extract-vmlinux $PWD/vmlinuz-virt > vmlinux-virt\n\n# config & start\n# ==========\ncat <<CONF > alpine.json\n{\n  "boot-source": {\n    "initrd_path": "initramfs-virt",\n    "kernel_image_path": "vmlinux-virt",\n    "boot_args": "console=ttyS0 reboot=k panic=1 pci=off modules=virtio_mmio,ext4 rootfstype=ext4"\n  },\n  "drives": [\n    {\n      "drive_id": "rootfs",\n      "path_on_host": "alpine.rootfs.ext4",\n      "is_root_device": true,\n      "is_read_only": false\n    }\n  ],\n  "machine-config": {\n    "vcpu_count": 1,\n    "mem_size_mib": 1024,\n    "ht_enabled": false\n  }\n}\nCONF\n\n./firecracker --api-sock /tmp/firecracker.socket --config-file alpine.json\n\n# exit\n# ==========\n# api request\ncurl --unix-socket /tmp/firecracker.socket -i \\\n    -X PUT "http://localhost/actions" \\\n    -H  "accept: application/json" \\\n    -H  "Content-Type: application/json" \\\n    -d \'{"action_type": "SendCtrlAltDel"}\'\n# in vm\nreboot\n\n# \u68C0\u6D4B KVM \u652F\u6301\n[ -r /dev/kvm ] && [ -w /dev/kvm ] && echo "OK" || echo "FAIL"\n\n# vm \u5185\u6E05\u9664\u7F13\u5B58 firecracker \u4E5F\u4E0D\u4F1A\u6536\u56DE\u5185\u5B58\uFF0C\u56E0\u4E3A\u4E0D\u652F\u6301 balloon\necho 3 > /proc/sys/vm/drop_caches\n\n# \u7C7B\u4F3C qemu - \u4F46 qemu \u66F4\u5BB9\u6613\u6DFB\u52A0\u7F51\u7EDC\u4E14\u652F\u6301 vnc\n# firecracker \u9ED8\u8BA4\u4F1A\u6DFB\u52A0 root=/dev/vda\n# \u542F\u52A8\u540E\u7EA6 130 MB \u989D\u5916\u5185\u5B58\u5360\u7528 - firecracker \u7EA6 70 MB\n# pci=off qemu \u65E0\u6CD5\u542F\u52A8\nqemu-system-x86_64 \\\n  -smp 1 -m 1024 -cpu host \\\n  -M pc,accel=kvm \\\n  -no-acpi \\\n  -device virtio-rng-pci -device virtio-balloon -serial stdio \\\n  -kernel vmlinux-virt \\\n  -initrd initramfs-virt \\\n  -append "console=ttyS0 reboot=k panic=1 modules=virtio_mmio,virtio_blk,ext4 rootfstype=ext4 root=/dev/vda" \\\n  -drive file=alpine.rootfs.ext4,if=virtio,cache=writeback\n'})}),"\n",(0,t.jsx)(n.h2,{id:"ubuntu",children:"ubuntu"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'curl -LO http://cdimage.ubuntu.com/ubuntu-base/releases/20.04/release/ubuntu-base-20.04.1-base-amd64.tar.gz\n\nfallocate -l 1G ubuntu.rootfs.ext4\nsudo mkfs.ext4 ubuntu.rootfs.ext4\n\nmkdir /tmp/rootfs\nsudo mount ubuntu.rootfs.ext4 /tmp/rootfs\nsudo tar -xzvf ubuntu-base-20.04.1-base-amd64.tar.gz -C /tmp/rootfs\nsudo cp /etc/resolv.conf /tmp/rootfs/etc/\nsudo chroot /tmp/rootfs/ /bin/bash\n\napt update\napt install linux-image-kvm -y\napt install init -y\nupdate-initramfs -u\necho root:root | chpasswd\necho ttyS0 > /etc/securetty\nsystemctl enable serial-getty@ttyS0.service\n\nexit\n\nsudo cp /tmp/rootfs/boot/initrd.img .\nsudo cp /tmp/rootfs/boot/vmlinuz .\n\nsudo umount /tmp/rootfs\n\nsudo chown $USER vmlinuz\n./extract-vmlinux $PWD/vmlinuz > vmlinux\n\ncat <<CONF > ubuntu.json\n{\n  "boot-source": {\n    "initrd_path": "initrd.img",\n    "kernel_image_path": "vmlinux",\n    "boot_args": "console=ttyS0 reboot=k panic=1 pci=off modules=virtio_mmio,ext4 rootfstype=ext4"\n  },\n  "drives": [\n    {\n      "drive_id": "rootfs",\n      "path_on_host": "alpine.rootfs.ext4",\n      "is_root_device": true,\n      "is_read_only": false\n    }\n  ],\n  "machine-config": {\n    "vcpu_count": 1,\n    "mem_size_mib": 1024,\n    "ht_enabled": false\n  }\n}\nCONF\n\n./firecracker --api-sock /tmp/firecracker.socket --config-file ubuntu.json\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# https://packages.debian.org/sid/linux-image-amd64\n"})}),"\n",(0,t.jsx)(n.h2,{id:"centos",children:"centos"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# https://mirrors.aliyun.com/centos/8/BaseOS/x86_64/os/images/pxeboot/\ncurl --remote-name-all -OC- https://mirrors.aliyun.com/centos/8/BaseOS/x86_64/os/images/pxeboot/{initrd.img,vmlinuz}\n\nextract-vmlinux ./vmlinuz > vmlinux\n\ncat <<CONF > centos.json\n{\n  "boot-source": {\n    "initrd_path": "initrd.img",\n    "kernel_image_path": "vmlinux",\n    "boot_args": "console=ttyS0 reboot=k panic=1 pci=off modules=virtio_mmio,ext4 rootfstype=ext4"\n  },\n  "drives": [\n    {\n      "drive_id": "rootfs",\n      "path_on_host": "centos.rootfs.ext4",\n      "is_root_device": true,\n      "is_read_only": false\n    }\n  ],\n  "machine-config": {\n    "vcpu_count": 1,\n    "mem_size_mib": 1024,\n    "ht_enabled": false\n  }\n}\nCONF\n\nrm /tmp/firecracker.socket;firecracker --api-sock /tmp/firecracker.socket --config-file centos.json\n'})}),"\n",(0,t.jsx)(n.h1,{id:"firectl",children:"firectl"}),"\n",(0,t.jsx)(n.h2,{id:"network",children:"network"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/firecracker-microvm/firecracker/blob/master/docs/network-setup.md",children:"https://github.com/firecracker-microvm/firecracker/blob/master/docs/network-setup.md"})}),"\n",(0,t.jsx)(n.h1,{id:"\u63A5\u53E3",children:"\u63A5\u53E3"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/firecracker-microvm/firecracker/blob/master/src/api_server/swagger/firecracker.yaml",children:"api_server/swagger/firecracker.yaml"})}),"\n",(0,t.jsxs)(n.li,{children:["/actions\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:'{"action_type":""}'})}),"\n",(0,t.jsx)(n.li,{children:"FlushMetrics,InstanceStart,SendCtrlAltDel"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"/boot-source - \u4EC5\u542F\u52A8\u524D"}),"\n",(0,t.jsx)(n.li,{children:"/drives/{drive_id} - \u4EC5\u542F\u52A8\u524D"}),"\n",(0,t.jsx)(n.li,{children:"/logger"}),"\n",(0,t.jsx)(n.li,{children:"/machine-config"}),"\n",(0,t.jsx)(n.li,{children:"/metrics"}),"\n",(0,t.jsx)(n.li,{children:"/mmds - Microvm Metadata Service"}),"\n",(0,t.jsx)(n.li,{children:"/mmds/config - \u914D\u7F6E MMDS - \u4EC5\u542F\u52A8\u524D"}),"\n",(0,t.jsx)(n.li,{children:"/network-interfaces/{iface_id} - \u4EC5\u542F\u52A8\u524D"}),"\n",(0,t.jsx)(n.li,{children:"/snapshot/create - \u521B\u5EFA\u4E3A\u6682\u505C\u72B6\u6001\u7684\u865A\u62DF\u673A\u521B\u5EFA\u5FEB\u7167"}),"\n",(0,t.jsx)(n.li,{children:"/snapshot/load - \u52A0\u8F7D\u5FEB\u7167 - \u65B0\u542F\u52A8\u7684 Firecracker"}),"\n",(0,t.jsxs)(n.li,{children:["/vm - \u865A\u62DF\u673A\u72B6\u6001\u7BA1\u7406\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:'{"state":""}'})}),"\n",(0,t.jsx)(n.li,{children:"Paused, Resumed"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"/vsock - vsock \u8BBE\u5907\u7BA1\u7406"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"boot-source:\n  initrd_path: initrd.img\n  kernel_image_path: vmlinux\n  boot_args: console=ttyS0 reboot=k panic=1 pci=off modules=virtio_mmio,ext4 rootfstype=ext4\ndrives:\n  - drive_id: rootfs\n    path_on_host: centos.rootfs.ext4\n    is_root_device: true\n    is_read_only: false\n    # \u53EF\u9009 - is_root_device \u65F6\u7684\u542F\u52A8\u5206\u533A UUID\n    partuuid: 00000000-0000-0000-0000-000000000000\n    # \u53EF\u9009 - \u8BBF\u95EE\u901F\u7387\u9650\u5236\n    rate_limiter:\n      bandwidth: # \u5E26\u5BBD\n        one_time_burst: 0\n        refill_time: 0\n        size: 0\n      ops: # \u64CD\u4F5C\n# \u65E5\u5FD7\u914D\u7F6E\nlogger:\n  log_path: '' # \u5FC5\u987B\n  # Error, Warning, Info, Debug\n  level: Warning\n  show_level: false\n  show_log_origin: false\n# \u673A\u5668\u914D\u7F6E\nmachine-config:\n  # 1-32 - 1 \u6216 1-32 \u4E4B\u95F4\u5076\u6570\n  vcpu_count: 1\n  mem_size_mib: 1024\n  # Hyperthreading\n  ht_enabled: false\n  # C3, C2\n  # cpu_template: C3\n  # \u542F\u7528\u540E\u53EF\u5BF9\u5185\u5B58\u521B\u5EFA\u589E\u91CF\u5FEB\u7167\n  # track_dirty_pages: false\n\nmetrics:\n  # \u5B58\u50A8 JSON \u683C\u5F0F metric \u7684\u8DEF\u5F84\n  metrics_path: ''\n\nnetwork-interfaces:\n  - allow_mmds_requests: false # \u542F\u7528\u540E\u4F1A\u54CD\u5E94 HTTP GET \u8BF7\u6C42 MMDS\n    guest_mac: ''\n    host_dev_name: ''\n    iface_id: ''\n    rx_rate_limiter: ''\n    tx_rate_limiter: ''\n\nvsock:\n  guest_cid: 3\n  # UNIX domain socket\n  uds_path: ''\n  vsock_id: ''\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\u7F51\u7EDC",children:"\u7F51\u7EDC"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# \u5047\u8BBE\u9700\u8981\u6865\u63A5\u7684 virbr0 \u5DF2\u7ECF\u5B58\u5728\nip tuntap add dev fc0 mode tap\nip li set fc0 master virbr0\nip li set fc0 up\n\n\nsudo ip link add name br0 type bridge\nsudo ip addr add 172.20.0.1/24 dev br0\nsudo ip link set dev br0 up\nsudo sysctl -w net.ipv4.ip_forward=1\nsudo iptables --table nat --append POSTROUTING --out-interface enp3s0 -j MASQUERADE\nsudo iptables --insert FORWARD --in-interface br0 -j ACCEPT\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "network-interfaces": [\n    {\n      "iface_id": "if0",\n      "host_dev_name": "fc0"\n    }\n  ]\n}\n'})}),"\n",(0,t.jsx)(n.h1,{id:"faq",children:"FAQ"}),"\n",(0,t.jsx)(n.h2,{id:"mount-mounting-devvda-on-sysroot-failed-no-such-device",children:"mount: mounting /dev/vda on /sysroot failed: No such device"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u53EF\u80FD\u4E0D\u652F\u6301 ext4"}),"\n",(0,t.jsx)(n.li,{children:"cat /proc/filesystems"}),"\n"]})]})}function m(e={}){let{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},17776:function(e,n,r){r.d(n,{R:()=>o,x:()=>c});var i=r(7378);let t={},s=i.createContext(t);function o(e){let n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);