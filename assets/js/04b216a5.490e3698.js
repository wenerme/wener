"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([["33293"],{2429:function(e,n,i){i.r(n),i.d(n,{frontMatter:()=>r,toc:()=>c,default:()=>h,metadata:()=>a,assets:()=>o,contentTitle:()=>l});var a=JSON.parse('{"id":"service/media/format/avif","title":"AVIF","description":"- AVIF","source":"@site/../notes/service/media/format/avif.md","sourceDirName":"service/media/format","slug":"/service/media/format/avif","permalink":"/notes/service/media/format/avif","draft":false,"unlisted":false,"editUrl":"https://github.com/wenerme/wener/edit/master/notes/../notes/service/media/format/avif.md","tags":[],"version":"current","lastUpdatedBy":"wener","lastUpdatedAt":1657531736000,"frontMatter":{"title":"AVIF"},"sidebar":"docs","previous":{"title":"AV1","permalink":"/notes/service/media/format/av1"},"next":{"title":"flv","permalink":"/notes/service/media/format/flv"}}'),t=i(86106),s=i(17776);let r={title:"AVIF"},l="AVIF",o={},c=[];function d(e){let n={a:"a",code:"code",h1:"h1",header:"header",li:"li",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"avif",children:"AVIF"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["AVIF\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u884D\u751F\u81EA AV1 - I-frame from AV1"}),"\n",(0,t.jsx)(n.li,{children:"\u76EE\u7684\u662F\u53D6\u4EE3 JPEG"}),"\n",(0,t.jsxs)(n.li,{children:["\u4E2D\u4F4E\u6E05\u573A\u666F\u66F4\u597D - Web\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u56E0\u4E3A video-derived format"}),"\n",(0,t.jsx)(n.li,{children:"\u7167\u7247\u5927\u591A\u65F6\u5019\u4E5F\u4F18\u4E8E jpegxl"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"\u6700\u5927\u5206\u8FA8\u7387 65536x65536"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://avif.io/blog/comparisons/avif-vs-jpegxl/",children:"https://avif.io/blog/comparisons/avif-vs-jpegxl/"})}),"\n",(0,t.jsx)(n.li,{children:"cq-level 0-63"}),"\n",(0,t.jsx)(n.li,{children:"cq - Constant/Constrained Quality"}),"\n",(0,t.jsx)(n.li,{children:"end-usage - Rate control mode - vbr, cbr, cq, or q"}),"\n",(0,t.jsx)(n.li,{children:"tune - psnr,ssim,butteraugli default: psnr"}),"\n",(0,t.jsx)(n.li,{children:"butteraugli rate distortion tuning"}),"\n",(0,t.jsx)(n.li,{children:"Adaptive quantization"}),"\n",(0,t.jsx)(n.li,{children:"\u53C2\u6570\u81EA\u52A8\u8C03\u4F18"}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/AOMediaCodec/libavif",children:"AOMediaCodec/libavif"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/AOMediaCodec/av1-avif",children:"AOMediaCodec/av1-avif"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://jakearchibald.com/2020/avif-has-landed/",children:"avif-has-landed"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/dreampiggy/AVIFQuickLook",children:"https://github.com/dreampiggy/AVIFQuickLook"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/AOMediaCodec/av1-avif/wiki#implementations",children:"implementations"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://old.reddit.com/r/AV1/comments/o7s8hk/high_quality_encoding_of_avif_images_using/",children:"https://old.reddit.com/r/AV1/comments/o7s8hk/high_quality_encoding_of_avif_images_using/"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://chipsandcheese.com/author/blueswordm/",children:"https://chipsandcheese.com/author/blueswordm/"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# macOS\nbrew install joedrago/repo/avifenc\n# AlpineLinux\napk add libavif-apps\n# Debian\napt install libavif-bin\n\n# 16 MB\n# -> 1.8 MB\n# -> speed 10 1.7 MB\n# \u548C cjxl -d 1 \u533A\u522B\u4E0D\u5927\n# \u9ED8\u8BA4 speed [6], color QP [24 (Medium) <-> 26 (Medium)], alpha QP [0 (Lossless) <-> 0 (Lossless)], tileRowsLog2 [0], tileColsLog2 [0], 1 worker thread(s)\navifenc input.jpg input.avif\n# \u63A8\u8350\navifenc --min 0 --max 63 -a end-usage=q -a cq-level=18 -a tune=ssim input.jpg input.avif\n\n# intra-only\n# -a color:sharpness=2 \u9ED8\u8BA4 0\n#   how much detail retention you want vs artifacts\n# -a color:enable-chroma-deltaq=1 chroma Q variation per SB. Free quality increase\n# -a color:qm-min=0 \u9ED8\u8BA4 8\n# -a color:deltaq-mode=3\n# -a color:aq-mode=1\n#   variance based AQ mode, works well for intra-only photographic\navifenc -s 6 -j $(nproc) --min 0 --max 63 -a end-usage=q -a cq-level=XX -a color:aq-mode=1 -a color:sharpness=2 -a tune=butteraugli -a color:enable-chroma-deltaq=1 -a color:qm-min=0 -a color:deltaq-mode=3 i.png o.avif\n\n# \u65E0\u635F - \u9ED8\u8BA4\u5355\u7EBF\u7A0B\u5F88\u6162 - jpegxl \u9ED8\u8BA4\u538B\u51FA\u6765 4.1M\n# 3.4M -> 2.1M\navifenc -l input.png png.avif\n\n# Batch\nls *.jpg | xargs basename -s .jpg | xargs -I {} avifenc -j 12 --min 0 --max 63 -a end-usage=q -a cq-level=18 -a tune=ssim  {}.jpg ../avif/{}.avif\nfind input -type d | xargs -I {} mkdir -p \"avif/{}\"\nfind input -type f -iname '*.jpg' | sed 's/.jpg$//' | xargs -I {} avifenc -j $(nproc) --min 0 --max 63 -a end-usage=q -a cq-level=18 -a tune=ssim -a color:aq-mode=1 -a color:sharpness=2 -a color:enable-chroma-deltaq=1 -a color:qm-min=0 {}.jpg avif/{}.avif\n"})})]})}function h(e={}){let{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},17776:function(e,n,i){i.d(n,{R:()=>r,x:()=>l});var a=i(7378);let t={},s=a.createContext(t);function r(e){let n=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);